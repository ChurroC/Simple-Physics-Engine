<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="153261781218"><g><title>[amdxc64.so] (33,099,297 samples, 0.02%)</title><rect x="0.8207%" y="229" width="0.0216%" height="15" fill="rgb(227,0,7)" fg:x="1257773286" fg:w="33099297"/><text x="1.0707%" y="239.50"></text></g><g><title>[amdxc64.so] (126,379,134 samples, 0.08%)</title><rect x="0.7605%" y="261" width="0.0825%" height="15" fill="rgb(217,0,24)" fg:x="1165496458" fg:w="126379134"/><text x="1.0105%" y="271.50"></text></g><g><title>[amdxc64.so] (65,195,585 samples, 0.04%)</title><rect x="0.8004%" y="245" width="0.0425%" height="15" fill="rgb(221,193,54)" fg:x="1226680007" fg:w="65195585"/><text x="1.0504%" y="255.50"></text></g><g><title>[amdxc64.so] (276,830,484 samples, 0.18%)</title><rect x="0.6629%" y="293" width="0.1806%" height="15" fill="rgb(248,212,6)" fg:x="1016048117" fg:w="276830484"/><text x="0.9129%" y="303.50"></text></g><g><title>[amdxc64.so] (231,695,079 samples, 0.15%)</title><rect x="0.6924%" y="277" width="0.1512%" height="15" fill="rgb(208,68,35)" fg:x="1061183522" fg:w="231695079"/><text x="0.9424%" y="287.50"></text></g><g><title>[amdxc64.so] (372,116,339 samples, 0.24%)</title><rect x="0.6014%" y="309" width="0.2428%" height="15" fill="rgb(232,128,0)" fg:x="921765271" fg:w="372116339"/><text x="0.8514%" y="319.50"></text></g><g><title>[libd3d12core.so] (460,381,131 samples, 0.30%)</title><rect x="0.5530%" y="325" width="0.3004%" height="15" fill="rgb(207,160,47)" fg:x="847542605" fg:w="460381131"/><text x="0.8030%" y="335.50"></text></g><g><title>[amdxc64.so] (150,451,350 samples, 0.10%)</title><rect x="1.2179%" y="261" width="0.0982%" height="15" fill="rgb(228,23,34)" fg:x="1866599749" fg:w="150451350"/><text x="1.4679%" y="271.50"></text></g><g><title>[amdxc64.so] (126,379,134 samples, 0.08%)</title><rect x="1.2336%" y="245" width="0.0825%" height="15" fill="rgb(218,30,26)" fg:x="1890671965" fg:w="126379134"/><text x="1.4836%" y="255.50"></text></g><g><title>[amdxc64.so] (112,337,008 samples, 0.07%)</title><rect x="1.2428%" y="229" width="0.0733%" height="15" fill="rgb(220,122,19)" fg:x="1904714091" fg:w="112337008"/><text x="1.4928%" y="239.50"></text></g><g><title>[amdxc64.so] (103,309,927 samples, 0.07%)</title><rect x="1.2487%" y="213" width="0.0674%" height="15" fill="rgb(250,228,42)" fg:x="1913741172" fg:w="103309927"/><text x="1.4987%" y="223.50"></text></g><g><title>[amdxc64.so] (72,216,648 samples, 0.05%)</title><rect x="1.2690%" y="197" width="0.0471%" height="15" fill="rgb(240,193,28)" fg:x="1944834451" fg:w="72216648"/><text x="1.5190%" y="207.50"></text></g><g><title>[amdxc64.so] (55,165,495 samples, 0.04%)</title><rect x="1.2801%" y="181" width="0.0360%" height="15" fill="rgb(216,20,37)" fg:x="1961885604" fg:w="55165495"/><text x="1.5301%" y="191.50"></text></g><g><title>[amdxc64.so] (26,078,234 samples, 0.02%)</title><rect x="1.2991%" y="165" width="0.0170%" height="15" fill="rgb(206,188,39)" fg:x="1990972865" fg:w="26078234"/><text x="1.5491%" y="175.50"></text></g><g><title>[amdxc64.so] (198,595,782 samples, 0.13%)</title><rect x="1.1885%" y="293" width="0.1296%" height="15" fill="rgb(217,207,13)" fg:x="1821464344" fg:w="198595782"/><text x="1.4385%" y="303.50"></text></g><g><title>[amdxc64.so] (176,529,584 samples, 0.12%)</title><rect x="1.2029%" y="277" width="0.1152%" height="15" fill="rgb(231,73,38)" fg:x="1843530542" fg:w="176529584"/><text x="1.4529%" y="287.50"></text></g><g><title>[amdxc64.so] (232,698,088 samples, 0.15%)</title><rect x="2.3272%" y="133" width="0.1518%" height="15" fill="rgb(225,20,46)" fg:x="3566700004" fg:w="232698088"/><text x="2.5772%" y="143.50"></text></g><g><title>[amdxc64.so] (133,400,197 samples, 0.09%)</title><rect x="2.3920%" y="117" width="0.0870%" height="15" fill="rgb(210,31,41)" fg:x="3665997895" fg:w="133400197"/><text x="2.6420%" y="127.50"></text></g><g><title>[amdxc64.so] (55,165,495 samples, 0.04%)</title><rect x="2.4430%" y="101" width="0.0360%" height="15" fill="rgb(221,200,47)" fg:x="3744232597" fg:w="55165495"/><text x="2.6930%" y="111.50"></text></g><g><title>[amdxc64.so] (353,059,168 samples, 0.23%)</title><rect x="2.2500%" y="149" width="0.2304%" height="15" fill="rgb(226,26,5)" fg:x="3448344942" fg:w="353059168"/><text x="2.5000%" y="159.50"></text></g><g><title>[amdxc64.so] (466,399,185 samples, 0.30%)</title><rect x="2.1839%" y="165" width="0.3043%" height="15" fill="rgb(249,33,26)" fg:x="3347041033" fg:w="466399185"/><text x="2.4339%" y="175.50"></text></g><g><title>[amdxc64.so] (896,690,046 samples, 0.59%)</title><rect x="1.9070%" y="197" width="0.5851%" height="15" fill="rgb(235,183,28)" fg:x="2922768226" fg:w="896690046"/><text x="2.1570%" y="207.50"></text></g><g><title>[amdxc64.so] (670,010,012 samples, 0.44%)</title><rect x="2.0549%" y="181" width="0.4372%" height="15" fill="rgb(221,5,38)" fg:x="3149448260" fg:w="670010012"/><text x="2.3049%" y="191.50"></text></g><g><title>[amdxc64.so] (1,161,484,422 samples, 0.76%)</title><rect x="1.7369%" y="229" width="0.7578%" height="15" fill="rgb(247,18,42)" fg:x="2661985886" fg:w="1161484422"/><text x="1.9869%" y="239.50"></text></g><g><title>[amdxc64.so] (1,040,120,333 samples, 0.68%)</title><rect x="1.8161%" y="213" width="0.6787%" height="15" fill="rgb(241,131,45)" fg:x="2783349975" fg:w="1040120333"/><text x="2.0661%" y="223.50"></text></g><g><title>[amdxc64.so] (1,764,292,831 samples, 1.15%)</title><rect x="1.3481%" y="277" width="1.1512%" height="15" fill="rgb(249,31,29)" fg:x="2066198540" fg:w="1764292831"/><text x="1.5981%" y="287.50"></text></g><g><title>[amdxc64.so] (1,739,217,606 samples, 1.13%)</title><rect x="1.3645%" y="261" width="1.1348%" height="15" fill="rgb(225,111,53)" fg:x="2091273765" fg:w="1739217606"/><text x="1.6145%" y="271.50"></text></g><g><title>[amdxc64.so] (1,380,140,384 samples, 0.90%)</title><rect x="1.5988%" y="245" width="0.9005%" height="15" fill="rgb(238,160,17)" fg:x="2450350987" fg:w="1380140384"/><text x="1.8488%" y="255.50"></text></g><g><title>[libd3d12core.so] (204,613,836 samples, 0.13%)</title><rect x="2.6433%" y="261" width="0.1335%" height="15" fill="rgb(214,148,48)" fg:x="4051153351" fg:w="204613836"/><text x="2.8933%" y="271.50"></text></g><g><title>[libd3d12core.so] (155,466,395 samples, 0.10%)</title><rect x="2.6754%" y="245" width="0.1014%" height="15" fill="rgb(232,36,49)" fg:x="4100300792" fg:w="155466395"/><text x="2.9254%" y="255.50"></text></g><g><title>[libd3d12core.so] (2,473,420,194 samples, 1.61%)</title><rect x="1.1662%" y="309" width="1.6139%" height="15" fill="rgb(209,103,24)" fg:x="1787362038" fg:w="2473420194"/><text x="1.4162%" y="319.50"></text></g><g><title>[libd3d12core.so] (2,240,722,106 samples, 1.46%)</title><rect x="1.3180%" y="293" width="1.4620%" height="15" fill="rgb(229,88,8)" fg:x="2020060126" fg:w="2240722106"/><text x="1.5680%" y="303.50"></text></g><g><title>[libd3d12core.so] (430,290,861 samples, 0.28%)</title><rect x="2.4993%" y="277" width="0.2808%" height="15" fill="rgb(213,181,19)" fg:x="3830491371" fg:w="430290861"/><text x="2.7493%" y="287.50"></text></g><g><title>[amdxc64.so] (260,782,340 samples, 0.17%)</title><rect x="3.2251%" y="261" width="0.1702%" height="15" fill="rgb(254,191,54)" fg:x="4942828352" fg:w="260782340"/><text x="3.4751%" y="271.50"></text></g><g><title>[amdxc64.so] (231,695,079 samples, 0.15%)</title><rect x="3.2441%" y="245" width="0.1512%" height="15" fill="rgb(241,83,37)" fg:x="4971915613" fg:w="231695079"/><text x="3.4941%" y="255.50"></text></g><g><title>[amdxc64.so] (194,583,746 samples, 0.13%)</title><rect x="3.2683%" y="229" width="0.1270%" height="15" fill="rgb(233,36,39)" fg:x="5009026946" fg:w="194583746"/><text x="3.5183%" y="239.50"></text></g><g><title>[amdxc64.so] (186,559,674 samples, 0.12%)</title><rect x="3.2735%" y="213" width="0.1217%" height="15" fill="rgb(226,3,54)" fg:x="5017051018" fg:w="186559674"/><text x="3.5235%" y="223.50"></text></g><g><title>[amdxc64.so] (170,511,530 samples, 0.11%)</title><rect x="3.2840%" y="197" width="0.1113%" height="15" fill="rgb(245,192,40)" fg:x="5033099162" fg:w="170511530"/><text x="3.5340%" y="207.50"></text></g><g><title>[amdxc64.so] (144,433,296 samples, 0.09%)</title><rect x="3.3010%" y="181" width="0.0942%" height="15" fill="rgb(238,167,29)" fg:x="5059177396" fg:w="144433296"/><text x="3.5510%" y="191.50"></text></g><g><title>[amdxc64.so] (82,246,738 samples, 0.05%)</title><rect x="3.3416%" y="165" width="0.0537%" height="15" fill="rgb(232,182,51)" fg:x="5121363954" fg:w="82246738"/><text x="3.5916%" y="175.50"></text></g><g><title>[amdxc64.so] (48,144,432 samples, 0.03%)</title><rect x="3.3638%" y="149" width="0.0314%" height="15" fill="rgb(231,60,39)" fg:x="5155466260" fg:w="48144432"/><text x="3.6138%" y="159.50"></text></g><g><title>[amdxc64.so] (23,069,207 samples, 0.02%)</title><rect x="3.3802%" y="133" width="0.0151%" height="15" fill="rgb(208,69,12)" fg:x="5180541485" fg:w="23069207"/><text x="3.6302%" y="143.50"></text></g><g><title>[libd3d12core.so] (348,044,123 samples, 0.23%)</title><rect x="3.2041%" y="293" width="0.2271%" height="15" fill="rgb(235,93,37)" fg:x="4910732064" fg:w="348044123"/><text x="3.4541%" y="303.50"></text></g><g><title>[libd3d12core.so] (323,971,907 samples, 0.21%)</title><rect x="3.2199%" y="277" width="0.2114%" height="15" fill="rgb(213,116,39)" fg:x="4934804280" fg:w="323971907"/><text x="3.4699%" y="287.50"></text></g><g><title>[libd3d12core.so] (55,165,495 samples, 0.04%)</title><rect x="3.3952%" y="261" width="0.0360%" height="15" fill="rgb(222,207,29)" fg:x="5203610692" fg:w="55165495"/><text x="3.6452%" y="271.50"></text></g><g><title>[libd3d12core.so] (44,132,396 samples, 0.03%)</title><rect x="3.4024%" y="245" width="0.0288%" height="15" fill="rgb(206,96,30)" fg:x="5214643791" fg:w="44132396"/><text x="3.6524%" y="255.50"></text></g><g><title>[libd3d12core.so] (28,084,252 samples, 0.02%)</title><rect x="3.4129%" y="229" width="0.0183%" height="15" fill="rgb(218,138,4)" fg:x="5230691935" fg:w="28084252"/><text x="3.6629%" y="239.50"></text></g><g><title>[swrast_dri.so] (143,430,287 samples, 0.09%)</title><rect x="3.6426%" y="277" width="0.0936%" height="15" fill="rgb(250,191,14)" fg:x="5582748094" fg:w="143430287"/><text x="3.8926%" y="287.50"></text></g><g><title>__libc_calloc (16,048,144 samples, 0.01%)</title><rect x="3.7362%" y="277" width="0.0105%" height="15" fill="rgb(239,60,40)" fg:x="5726178381" fg:w="16048144"/><text x="3.9862%" y="287.50"></text></g><g><title>[swrast_dri.so] (1,482,447,302 samples, 0.97%)</title><rect x="2.7801%" y="309" width="0.9673%" height="15" fill="rgb(206,27,48)" fg:x="4260782232" fg:w="1482447302"/><text x="3.0301%" y="319.50"></text></g><g><title>[swrast_dri.so] (484,453,347 samples, 0.32%)</title><rect x="3.4312%" y="293" width="0.3161%" height="15" fill="rgb(225,35,8)" fg:x="5258776187" fg:w="484453347"/><text x="3.6812%" y="303.50"></text></g><g><title>[swrast_dri.so] (4,436,308,807 samples, 2.89%)</title><rect x="0.8534%" y="325" width="2.8946%" height="15" fill="rgb(250,213,24)" fg:x="1307923736" fg:w="4436308807"/><text x="1.1034%" y="335.50">[s..</text></g><g><title>[swrast_dri.so] (5,732,196,435 samples, 3.74%)</title><rect x="0.0111%" y="357" width="3.7401%" height="15" fill="rgb(247,123,22)" fg:x="17051153" fg:w="5732196435"/><text x="0.2611%" y="367.50">[swr..</text></g><g><title>[swrast_dri.so] (5,378,134,258 samples, 3.51%)</title><rect x="0.2421%" y="341" width="3.5091%" height="15" fill="rgb(231,138,38)" fg:x="371113330" fg:w="5378134258"/><text x="0.4921%" y="351.50">[sw..</text></g><g><title>[libc.so.6] (31,093,279 samples, 0.02%)</title><rect x="3.7637%" y="341" width="0.0203%" height="15" fill="rgb(231,145,46)" fg:x="5768304759" fg:w="31093279"/><text x="4.0137%" y="351.50"></text></g><g><title>pthread_cond_wait (44,132,396 samples, 0.03%)</title><rect x="3.7558%" y="357" width="0.0288%" height="15" fill="rgb(251,118,11)" fg:x="5756268651" fg:w="44132396"/><text x="4.0058%" y="367.50"></text></g><g><title>[libc.so.6] (5,803,410,074 samples, 3.79%)</title><rect x="0.0000%" y="437" width="3.7866%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="5803410074"/><text x="0.2500%" y="447.50">[lib..</text></g><g><title>[libc.so.6] (5,803,410,074 samples, 3.79%)</title><rect x="0.0000%" y="421" width="3.7866%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="5803410074"/><text x="0.2500%" y="431.50">[lib..</text></g><g><title>[swrast_dri.so] (5,803,410,074 samples, 3.79%)</title><rect x="0.0000%" y="405" width="3.7866%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="5803410074"/><text x="0.2500%" y="415.50">[swr..</text></g><g><title>[swrast_dri.so] (5,803,410,074 samples, 3.79%)</title><rect x="0.0000%" y="389" width="3.7866%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="5803410074"/><text x="0.2500%" y="399.50">[swr..</text></g><g><title>[swrast_dri.so] (5,801,404,056 samples, 3.79%)</title><rect x="0.0013%" y="373" width="3.7853%" height="15" fill="rgb(248,47,43)" fg:x="2006018" fg:w="5801404056"/><text x="0.2513%" y="383.50">[swr..</text></g><g><title>[libc.so.6] (259,779,331 samples, 0.17%)</title><rect x="3.8638%" y="405" width="0.1695%" height="15" fill="rgb(221,10,30)" fg:x="5921765136" fg:w="259779331"/><text x="4.1138%" y="415.50"></text></g><g><title>[swrast_dri.so] (120,361,080 samples, 0.08%)</title><rect x="4.0333%" y="405" width="0.0785%" height="15" fill="rgb(210,229,1)" fg:x="6181544467" fg:w="120361080"/><text x="4.2833%" y="415.50"></text></g><g><title>physics_:gdrv0 (6,304,914,574 samples, 4.11%)</title><rect x="0.0000%" y="453" width="4.1138%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="6304914574"/><text x="0.2500%" y="463.50">phys..</text></g><g><title>[unknown] (501,504,500 samples, 0.33%)</title><rect x="3.7866%" y="437" width="0.3272%" height="15" fill="rgb(234,67,33)" fg:x="5803410074" fg:w="501504500"/><text x="4.0366%" y="447.50"></text></g><g><title>[swrast_dri.so] (501,504,500 samples, 0.33%)</title><rect x="3.7866%" y="421" width="0.3272%" height="15" fill="rgb(247,98,35)" fg:x="5803410074" fg:w="501504500"/><text x="4.0366%" y="431.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (114,343,026 samples, 0.07%)</title><rect x="4.1138%" y="437" width="0.0746%" height="15" fill="rgb(247,138,52)" fg:x="6304914574" fg:w="114343026"/><text x="4.3638%" y="447.50"></text></g><g><title>[libglapi.so.0.0.0] (160,481,440 samples, 0.10%)</title><rect x="4.1884%" y="437" width="0.1047%" height="15" fill="rgb(213,79,30)" fg:x="6419257600" fg:w="160481440"/><text x="4.4384%" y="447.50"></text></g><g><title>[libc.so.6] (203,610,827 samples, 0.13%)</title><rect x="4.3533%" y="405" width="0.1329%" height="15" fill="rgb(246,177,23)" fg:x="6672015868" fg:w="203610827"/><text x="4.6033%" y="415.50"></text></g><g><title>[swrast_dri.so] (393,179,528 samples, 0.26%)</title><rect x="4.2964%" y="421" width="0.2565%" height="15" fill="rgb(230,62,27)" fg:x="6584754085" fg:w="393179528"/><text x="4.5464%" y="431.50"></text></g><g><title>[swrast_dri.so] (102,306,918 samples, 0.07%)</title><rect x="4.4862%" y="405" width="0.0668%" height="15" fill="rgb(216,154,8)" fg:x="6875626695" fg:w="102306918"/><text x="4.7362%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17,051,153 samples, 0.01%)</title><rect x="5.8566%" y="293" width="0.0111%" height="15" fill="rgb(244,35,45)" fg:x="8975927541" fg:w="17051153"/><text x="6.1066%" y="303.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (51,153,459 samples, 0.03%)</title><rect x="5.8697%" y="293" width="0.0334%" height="15" fill="rgb(251,115,12)" fg:x="8995987721" fg:w="51153459"/><text x="6.1197%" y="303.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (22,066,198 samples, 0.01%)</title><rect x="5.8887%" y="277" width="0.0144%" height="15" fill="rgb(240,54,50)" fg:x="9025074982" fg:w="22066198"/><text x="6.1387%" y="287.50"></text></g><g><title>core::fmt::write (89,267,801 samples, 0.06%)</title><rect x="5.8533%" y="309" width="0.0582%" height="15" fill="rgb(233,84,52)" fg:x="8970912496" fg:w="89267801"/><text x="6.1033%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (113,340,017 samples, 0.07%)</title><rect x="5.8461%" y="325" width="0.0740%" height="15" fill="rgb(207,117,47)" fg:x="8959879397" fg:w="113340017"/><text x="6.0961%" y="335.50"></text></g><g><title>[libm.so.6] (18,054,162 samples, 0.01%)</title><rect x="5.9332%" y="309" width="0.0118%" height="15" fill="rgb(249,43,39)" fg:x="9093279594" fg:w="18054162"/><text x="6.1832%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (30,090,270 samples, 0.02%)</title><rect x="5.9521%" y="309" width="0.0196%" height="15" fill="rgb(209,38,44)" fg:x="9122366855" fg:w="30090270"/><text x="6.2021%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (27,081,243 samples, 0.02%)</title><rect x="5.9541%" y="293" width="0.0177%" height="15" fill="rgb(236,212,23)" fg:x="9125375882" fg:w="27081243"/><text x="6.2041%" y="303.50"></text></g><g><title>realloc (23,069,207 samples, 0.02%)</title><rect x="5.9567%" y="277" width="0.0151%" height="15" fill="rgb(242,79,21)" fg:x="9129387918" fg:w="23069207"/><text x="6.2067%" y="287.50"></text></g><g><title>[libc.so.6] (19,057,171 samples, 0.01%)</title><rect x="5.9593%" y="261" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="9133399954" fg:w="19057171"/><text x="6.2093%" y="271.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (37,111,333 samples, 0.02%)</title><rect x="5.9718%" y="309" width="0.0242%" height="15" fill="rgb(253,215,40)" fg:x="9152457125" fg:w="37111333"/><text x="6.2218%" y="319.50"></text></g><g><title>macroquad::shapes::draw_arc (138,415,242 samples, 0.09%)</title><rect x="5.9240%" y="325" width="0.0903%" height="15" fill="rgb(211,81,21)" fg:x="9079237468" fg:w="138415242"/><text x="6.1740%" y="335.50"></text></g><g><title>malloc (28,084,252 samples, 0.02%)</title><rect x="5.9960%" y="309" width="0.0183%" height="15" fill="rgb(208,190,38)" fg:x="9189568458" fg:w="28084252"/><text x="6.2460%" y="319.50"></text></g><g><title>[libc.so.6] (22,066,198 samples, 0.01%)</title><rect x="5.9999%" y="293" width="0.0144%" height="15" fill="rgb(235,213,38)" fg:x="9195586512" fg:w="22066198"/><text x="6.2499%" y="303.50"></text></g><g><title>macroquad::shapes::draw_circle (71,213,639 samples, 0.05%)</title><rect x="6.0143%" y="325" width="0.0465%" height="15" fill="rgb(237,122,38)" fg:x="9217652710" fg:w="71213639"/><text x="6.2643%" y="335.50"></text></g><g><title>[libm.so.6] (6,316,950,682 samples, 4.12%)</title><rect x="16.4546%" y="309" width="4.1217%" height="15" fill="rgb(244,218,35)" fg:x="25218655287" fg:w="6316950682"/><text x="16.7046%" y="319.50">[lib..</text></g><g><title>__libc_free (4,053,159,369 samples, 2.64%)</title><rect x="20.5763%" y="309" width="2.6446%" height="15" fill="rgb(240,68,47)" fg:x="31535605969" fg:w="4053159369"/><text x="20.8263%" y="319.50">__..</text></g><g><title>[libc.so.6] (3,142,427,197 samples, 2.05%)</title><rect x="21.1705%" y="293" width="2.0504%" height="15" fill="rgb(210,16,53)" fg:x="32446338141" fg:w="3142427197"/><text x="21.4205%" y="303.50">[..</text></g><g><title>__rdl_alloc (92,276,828 samples, 0.06%)</title><rect x="23.2209%" y="309" width="0.0602%" height="15" fill="rgb(235,124,12)" fg:x="35588765338" fg:w="92276828"/><text x="23.4709%" y="319.50"></text></g><g><title>__rdl_dealloc (175,526,575 samples, 0.11%)</title><rect x="23.2811%" y="309" width="0.1145%" height="15" fill="rgb(224,169,11)" fg:x="35681042166" fg:w="175526575"/><text x="23.5311%" y="319.50"></text></g><g><title>__rust_alloc (103,309,927 samples, 0.07%)</title><rect x="23.3956%" y="309" width="0.0674%" height="15" fill="rgb(250,166,2)" fg:x="35856568741" fg:w="103309927"/><text x="23.6456%" y="319.50"></text></g><g><title>__rust_dealloc (218,655,962 samples, 0.14%)</title><rect x="23.4630%" y="309" width="0.1427%" height="15" fill="rgb(242,216,29)" fg:x="35959878668" fg:w="218655962"/><text x="23.7130%" y="319.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (8,364,092,051 samples, 5.46%)</title><rect x="23.6057%" y="309" width="5.4574%" height="15" fill="rgb(230,116,27)" fg:x="36178534630" fg:w="8364092051"/><text x="23.8557%" y="319.50">macroqu..</text></g><g><title>macroquad::shapes::draw_poly (35,710,129,427 samples, 23.30%)</title><rect x="6.0660%" y="325" width="23.3001%" height="15" fill="rgb(228,99,48)" fg:x="9296890421" fg:w="35710129427"/><text x="6.3160%" y="335.50">macroquad::shapes::draw_poly</text></g><g><title>malloc (464,393,167 samples, 0.30%)</title><rect x="29.0631%" y="309" width="0.3030%" height="15" fill="rgb(253,11,6)" fg:x="44542626681" fg:w="464393167"/><text x="29.3131%" y="319.50"></text></g><g><title>macroquad::text::Font::contains (56,168,504 samples, 0.04%)</title><rect x="29.4217%" y="293" width="0.0366%" height="15" fill="rgb(247,143,39)" fg:x="45092275613" fg:w="56168504"/><text x="29.6717%" y="303.50"></text></g><g><title>macroquad::text::atlas::Atlas::get (52,156,468 samples, 0.03%)</title><rect x="29.4584%" y="293" width="0.0340%" height="15" fill="rgb(236,97,10)" fg:x="45148444117" fg:w="52156468"/><text x="29.7084%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,048,144 samples, 0.01%)</title><rect x="29.4819%" y="277" width="0.0105%" height="15" fill="rgb(233,208,19)" fg:x="45184552441" fg:w="16048144"/><text x="29.7319%" y="287.50"></text></g><g><title>[libc.so.6] (20,060,180 samples, 0.01%)</title><rect x="29.4950%" y="149" width="0.0131%" height="15" fill="rgb(216,164,2)" fg:x="45204612621" fg:w="20060180"/><text x="29.7450%" y="159.50"></text></g><g><title>macroquad::text::atlas::Atlas::texture (27,081,243 samples, 0.02%)</title><rect x="29.4924%" y="293" width="0.0177%" height="15" fill="rgb(220,129,5)" fg:x="45200600585" fg:w="27081243"/><text x="29.7424%" y="303.50"></text></g><g><title>miniquad::graphics::RenderingBackend::texture_update (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="277" width="0.0151%" height="15" fill="rgb(242,17,10)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="287.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::texture_update_part (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="261" width="0.0151%" height="15" fill="rgb(242,107,0)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="271.50"></text></g><g><title>[swrast_dri.so] (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="245" width="0.0151%" height="15" fill="rgb(251,28,31)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="255.50"></text></g><g><title>[swrast_dri.so] (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="229" width="0.0151%" height="15" fill="rgb(233,223,10)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="239.50"></text></g><g><title>[swrast_dri.so] (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="213" width="0.0151%" height="15" fill="rgb(215,21,27)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="223.50"></text></g><g><title>[swrast_dri.so] (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="197" width="0.0151%" height="15" fill="rgb(232,23,21)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="207.50"></text></g><g><title>[swrast_dri.so] (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="181" width="0.0151%" height="15" fill="rgb(244,5,23)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="191.50"></text></g><g><title>[swrast_dri.so] (23,069,207 samples, 0.02%)</title><rect x="29.4950%" y="165" width="0.0151%" height="15" fill="rgb(226,81,46)" fg:x="45204612621" fg:w="23069207"/><text x="29.7450%" y="175.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (54,162,486 samples, 0.04%)</title><rect x="29.5304%" y="277" width="0.0353%" height="15" fill="rgb(247,70,30)" fg:x="45258775107" fg:w="54162486"/><text x="29.7804%" y="287.50"></text></g><g><title>macroquad::texture::draw_texture_ex (118,355,062 samples, 0.08%)</title><rect x="29.5101%" y="293" width="0.0772%" height="15" fill="rgb(212,68,19)" fg:x="45227681828" fg:w="118355062"/><text x="29.7601%" y="303.50"></text></g><g><title>miniquad::graphics::RenderingBackend::texture_size (24,072,216 samples, 0.02%)</title><rect x="29.5716%" y="277" width="0.0157%" height="15" fill="rgb(240,187,13)" fg:x="45321964674" fg:w="24072216"/><text x="29.8216%" y="287.50"></text></g><g><title>macroquad::text::draw_text (350,050,141 samples, 0.23%)</title><rect x="29.3661%" y="325" width="0.2284%" height="15" fill="rgb(223,113,26)" fg:x="45007019848" fg:w="350050141"/><text x="29.6161%" y="335.50"></text></g><g><title>macroquad::text::draw_text_ex (345,035,096 samples, 0.23%)</title><rect x="29.3694%" y="309" width="0.2251%" height="15" fill="rgb(206,192,2)" fg:x="45012034893" fg:w="345035096"/><text x="29.6194%" y="319.50"></text></g><g><title>[swrast_dri.so] (76,228,684 samples, 0.05%)</title><rect x="29.6141%" y="293" width="0.0497%" height="15" fill="rgb(241,108,4)" fg:x="45387160259" fg:w="76228684"/><text x="29.8641%" y="303.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::begin_pass (93,279,837 samples, 0.06%)</title><rect x="29.6063%" y="309" width="0.0609%" height="15" fill="rgb(247,173,49)" fg:x="45375124151" fg:w="93279837"/><text x="29.8563%" y="319.50"></text></g><g><title>macroquad::window::clear_background (124,373,116 samples, 0.08%)</title><rect x="29.6011%" y="325" width="0.0812%" height="15" fill="rgb(224,114,35)" fg:x="45367100079" fg:w="124373116"/><text x="29.8511%" y="335.50"></text></g><g><title>[swrast_dri.so] (20,060,180 samples, 0.01%)</title><rect x="29.6691%" y="309" width="0.0131%" height="15" fill="rgb(245,159,27)" fg:x="45471413015" fg:w="20060180"/><text x="29.9191%" y="319.50"></text></g><g><title>[libm.so.6] (478,435,293 samples, 0.31%)</title><rect x="72.5802%" y="309" width="0.3122%" height="15" fill="rgb(245,172,44)" fg:x="111237710136" fg:w="478435293"/><text x="72.8302%" y="319.50"></text></g><g><title>__libc_free (27,081,243 samples, 0.02%)</title><rect x="72.8924%" y="309" width="0.0177%" height="15" fill="rgb(236,23,11)" fg:x="111716145429" fg:w="27081243"/><text x="73.1424%" y="319.50"></text></g><g><title>physics_engine::solver::Solver::update (66,481,442,538 samples, 43.38%)</title><rect x="29.6835%" y="325" width="43.3777%" height="15" fill="rgb(205,117,38)" fg:x="45493479213" fg:w="66481442538"/><text x="29.9335%" y="335.50">physics_engine::solver::Solver::update</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (227,683,043 samples, 0.15%)</title><rect x="72.9127%" y="309" width="0.1486%" height="15" fill="rgb(237,72,25)" fg:x="111747238708" fg:w="227683043"/><text x="73.1627%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (207,622,863 samples, 0.14%)</title><rect x="72.9257%" y="293" width="0.1355%" height="15" fill="rgb(244,70,9)" fg:x="111767298888" fg:w="207622863"/><text x="73.1757%" y="303.50"></text></g><g><title>realloc (185,556,665 samples, 0.12%)</title><rect x="72.9401%" y="277" width="0.1211%" height="15" fill="rgb(217,125,39)" fg:x="111789365086" fg:w="185556665"/><text x="73.1901%" y="287.50"></text></g><g><title>[libc.so.6] (143,430,287 samples, 0.09%)</title><rect x="72.9676%" y="261" width="0.0936%" height="15" fill="rgb(235,36,10)" fg:x="111831491464" fg:w="143430287"/><text x="73.2176%" y="271.50"></text></g><g><title>[libc.so.6] (116,349,044 samples, 0.08%)</title><rect x="72.9853%" y="245" width="0.0759%" height="15" fill="rgb(251,123,47)" fg:x="111858572707" fg:w="116349044"/><text x="73.2353%" y="255.50"></text></g><g><title>[libc.so.6] (27,081,243 samples, 0.02%)</title><rect x="73.0435%" y="229" width="0.0177%" height="15" fill="rgb(221,13,13)" fg:x="111947840508" fg:w="27081243"/><text x="73.2935%" y="239.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (22,066,198 samples, 0.01%)</title><rect x="73.0704%" y="277" width="0.0144%" height="15" fill="rgb(238,131,9)" fg:x="111988963877" fg:w="22066198"/><text x="73.3204%" y="287.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (43,129,387 samples, 0.03%)</title><rect x="73.0619%" y="309" width="0.0281%" height="15" fill="rgb(211,50,8)" fg:x="111975924760" fg:w="43129387"/><text x="73.3119%" y="319.50"></text></g><g><title>core::fmt::write (36,108,324 samples, 0.02%)</title><rect x="73.0665%" y="293" width="0.0236%" height="15" fill="rgb(245,182,24)" fg:x="111982945823" fg:w="36108324"/><text x="73.3165%" y="303.50"></text></g><g><title>std::io::stdio::_print (46,138,414 samples, 0.03%)</title><rect x="73.0612%" y="325" width="0.0301%" height="15" fill="rgb(242,14,37)" fg:x="111974921751" fg:w="46138414"/><text x="73.3112%" y="335.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::{{closure}} (104,952,855,742 samples, 68.48%)</title><rect x="4.6177%" y="357" width="68.4795%" height="15" fill="rgb(246,228,12)" fg:x="7077231504" fg:w="104952855742"/><text x="4.8677%" y="367.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::{{closure}}</text></g><g><title>physics_engine::amain::{{closure}} (104,935,804,589 samples, 68.47%)</title><rect x="4.6289%" y="341" width="68.4683%" height="15" fill="rgb(213,55,15)" fg:x="7094282657" fg:w="104935804589"/><text x="4.8789%" y="351.50">physics_engine::amain::{{closure}}</text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::clear (20,060,180 samples, 0.01%)</title><rect x="73.1077%" y="357" width="0.0131%" height="15" fill="rgb(209,9,3)" fg:x="112046135390" fg:w="20060180"/><text x="73.3577%" y="367.50"></text></g><g><title>[amdxc64.so] (65,195,585 samples, 0.04%)</title><rect x="73.4552%" y="165" width="0.0425%" height="15" fill="rgb(230,59,30)" fg:x="112578733169" fg:w="65195585"/><text x="73.7052%" y="175.50"></text></g><g><title>[amdxc64.so] (54,162,486 samples, 0.04%)</title><rect x="73.4624%" y="149" width="0.0353%" height="15" fill="rgb(209,121,21)" fg:x="112589766268" fg:w="54162486"/><text x="73.7124%" y="159.50"></text></g><g><title>[amdxc64.so] (41,123,369 samples, 0.03%)</title><rect x="73.4709%" y="133" width="0.0268%" height="15" fill="rgb(220,109,13)" fg:x="112602805385" fg:w="41123369"/><text x="73.7209%" y="143.50"></text></g><g><title>[amdxc64.so] (27,081,243 samples, 0.02%)</title><rect x="73.4801%" y="117" width="0.0177%" height="15" fill="rgb(232,18,1)" fg:x="112616847511" fg:w="27081243"/><text x="73.7301%" y="127.50"></text></g><g><title>[amdxc64.so] (19,057,171 samples, 0.01%)</title><rect x="73.4853%" y="101" width="0.0124%" height="15" fill="rgb(215,41,42)" fg:x="112624871583" fg:w="19057171"/><text x="73.7353%" y="111.50"></text></g><g><title>[amdxc64.so] (309,929,781 samples, 0.20%)</title><rect x="73.2975%" y="277" width="0.2022%" height="15" fill="rgb(224,123,36)" fg:x="112337008000" fg:w="309929781"/><text x="73.5475%" y="287.50"></text></g><g><title>[amdxc64.so] (271,815,439 samples, 0.18%)</title><rect x="73.3223%" y="261" width="0.1774%" height="15" fill="rgb(240,125,3)" fg:x="112375122342" fg:w="271815439"/><text x="73.5723%" y="271.50"></text></g><g><title>[amdxc64.so] (254,764,286 samples, 0.17%)</title><rect x="73.3335%" y="245" width="0.1662%" height="15" fill="rgb(205,98,50)" fg:x="112392173495" fg:w="254764286"/><text x="73.5835%" y="255.50"></text></g><g><title>[amdxc64.so] (201,604,809 samples, 0.13%)</title><rect x="73.3681%" y="229" width="0.1315%" height="15" fill="rgb(205,185,37)" fg:x="112445332972" fg:w="201604809"/><text x="73.6181%" y="239.50"></text></g><g><title>[amdxc64.so] (160,481,440 samples, 0.10%)</title><rect x="73.3950%" y="213" width="0.1047%" height="15" fill="rgb(238,207,15)" fg:x="112486456341" fg:w="160481440"/><text x="73.6450%" y="223.50"></text></g><g><title>[amdxc64.so] (128,385,152 samples, 0.08%)</title><rect x="73.4159%" y="197" width="0.0838%" height="15" fill="rgb(213,199,42)" fg:x="112518552629" fg:w="128385152"/><text x="73.6659%" y="207.50"></text></g><g><title>[amdxc64.so] (97,291,873 samples, 0.06%)</title><rect x="73.4362%" y="181" width="0.0635%" height="15" fill="rgb(235,201,11)" fg:x="112549645908" fg:w="97291873"/><text x="73.6862%" y="191.50"></text></g><g><title>[amdxc64.so] (408,224,663 samples, 0.27%)</title><rect x="73.2739%" y="293" width="0.2664%" height="15" fill="rgb(207,46,11)" fg:x="112300899676" fg:w="408224663"/><text x="73.5239%" y="303.50"></text></g><g><title>[libc.so.6] (62,186,558 samples, 0.04%)</title><rect x="73.4997%" y="277" width="0.0406%" height="15" fill="rgb(241,35,35)" fg:x="112646937781" fg:w="62186558"/><text x="73.7497%" y="287.50"></text></g><g><title>[amdxc64.so] (88,264,792 samples, 0.06%)</title><rect x="73.7791%" y="165" width="0.0576%" height="15" fill="rgb(243,32,47)" fg:x="113075222624" fg:w="88264792"/><text x="74.0291%" y="175.50"></text></g><g><title>[amdxc64.so] (18,054,162 samples, 0.01%)</title><rect x="73.8249%" y="149" width="0.0118%" height="15" fill="rgb(247,202,23)" fg:x="113145433254" fg:w="18054162"/><text x="74.0749%" y="159.50"></text></g><g><title>[libd3d12core.so] (42,126,378 samples, 0.03%)</title><rect x="73.8374%" y="165" width="0.0275%" height="15" fill="rgb(219,102,11)" fg:x="113164490425" fg:w="42126378"/><text x="74.0874%" y="175.50"></text></g><g><title>[amdxc64.so] (279,839,511 samples, 0.18%)</title><rect x="73.6842%" y="213" width="0.1826%" height="15" fill="rgb(243,110,44)" fg:x="112929786319" fg:w="279839511"/><text x="73.9342%" y="223.50"></text></g><g><title>[amdxc64.so] (225,677,025 samples, 0.15%)</title><rect x="73.7196%" y="197" width="0.1472%" height="15" fill="rgb(222,74,54)" fg:x="112983948805" fg:w="225677025"/><text x="73.9696%" y="207.50"></text></g><g><title>[amdxc64.so] (185,556,665 samples, 0.12%)</title><rect x="73.7458%" y="181" width="0.1211%" height="15" fill="rgb(216,99,12)" fg:x="113024069165" fg:w="185556665"/><text x="73.9958%" y="191.50"></text></g><g><title>[amdxc64.so] (308,926,772 samples, 0.20%)</title><rect x="73.6685%" y="229" width="0.2016%" height="15" fill="rgb(226,22,26)" fg:x="112905714103" fg:w="308926772"/><text x="73.9185%" y="239.50"></text></g><g><title>[amdxc64.so] (329,989,961 samples, 0.22%)</title><rect x="73.6554%" y="245" width="0.2153%" height="15" fill="rgb(217,163,10)" fg:x="112885653923" fg:w="329989961"/><text x="73.9054%" y="255.50"></text></g><g><title>[amdxc64.so] (372,116,339 samples, 0.24%)</title><rect x="73.6286%" y="261" width="0.2428%" height="15" fill="rgb(213,25,53)" fg:x="112844530554" fg:w="372116339"/><text x="73.8786%" y="271.50"></text></g><g><title>[amdxc64.so] (434,302,897 samples, 0.28%)</title><rect x="73.5894%" y="277" width="0.2834%" height="15" fill="rgb(252,105,26)" fg:x="112784350014" fg:w="434302897"/><text x="73.8394%" y="287.50"></text></g><g><title>[amdxc64.so] (30,090,270 samples, 0.02%)</title><rect x="73.8976%" y="245" width="0.0196%" height="15" fill="rgb(220,39,43)" fg:x="113256767253" fg:w="30090270"/><text x="74.1476%" y="255.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="73.9035%" y="229" width="0.0137%" height="15" fill="rgb(229,68,48)" fg:x="113265794334" fg:w="21063189"/><text x="74.1535%" y="239.50"></text></g><g><title>[amdxc64.so] (47,141,423 samples, 0.03%)</title><rect x="73.8943%" y="261" width="0.0308%" height="15" fill="rgb(252,8,32)" fg:x="113251752208" fg:w="47141423"/><text x="74.1443%" y="271.50"></text></g><g><title>[amdxc64.so] (37,111,333 samples, 0.02%)</title><rect x="73.9427%" y="245" width="0.0242%" height="15" fill="rgb(223,20,43)" fg:x="113325974874" fg:w="37111333"/><text x="74.1927%" y="255.50"></text></g><g><title>[amdxc64.so] (32,096,288 samples, 0.02%)</title><rect x="73.9460%" y="229" width="0.0209%" height="15" fill="rgb(229,81,49)" fg:x="113330989919" fg:w="32096288"/><text x="74.1960%" y="239.50"></text></g><g><title>[libd3d12core.so] (34,102,306 samples, 0.02%)</title><rect x="73.9689%" y="245" width="0.0223%" height="15" fill="rgb(236,28,36)" fg:x="113366095234" fg:w="34102306"/><text x="74.2189%" y="255.50"></text></g><g><title>[libd3d12core.so] (107,321,963 samples, 0.07%)</title><rect x="73.9270%" y="261" width="0.0700%" height="15" fill="rgb(249,185,26)" fg:x="113301902658" fg:w="107321963"/><text x="74.1770%" y="271.50"></text></g><g><title>[libd3d12core.so] (701,103,291 samples, 0.46%)</title><rect x="73.5435%" y="293" width="0.4575%" height="15" fill="rgb(249,174,33)" fg:x="112714139384" fg:w="701103291"/><text x="73.7935%" y="303.50"></text></g><g><title>[libd3d12core.so] (196,589,764 samples, 0.13%)</title><rect x="73.8727%" y="277" width="0.1283%" height="15" fill="rgb(233,201,37)" fg:x="113218652911" fg:w="196589764"/><text x="74.1227%" y="287.50"></text></g><g><title>[libd3d12core.so] (1,143,430,260 samples, 0.75%)</title><rect x="73.2582%" y="309" width="0.7461%" height="15" fill="rgb(221,78,26)" fg:x="112276827460" fg:w="1143430260"/><text x="73.5082%" y="319.50"></text></g><g><title>[amdxc64.so] (67,201,603 samples, 0.04%)</title><rect x="74.3819%" y="149" width="0.0438%" height="15" fill="rgb(250,127,30)" fg:x="113998993913" fg:w="67201603"/><text x="74.6319%" y="159.50"></text></g><g><title>[amdxc64.so] (60,180,540 samples, 0.04%)</title><rect x="74.3865%" y="133" width="0.0393%" height="15" fill="rgb(230,49,44)" fg:x="114006014976" fg:w="60180540"/><text x="74.6365%" y="143.50"></text></g><g><title>[amdxc64.so] (46,138,414 samples, 0.03%)</title><rect x="74.3956%" y="117" width="0.0301%" height="15" fill="rgb(229,67,23)" fg:x="114020057102" fg:w="46138414"/><text x="74.6456%" y="127.50"></text></g><g><title>[amdxc64.so] (28,084,252 samples, 0.02%)</title><rect x="74.4074%" y="101" width="0.0183%" height="15" fill="rgb(249,83,47)" fg:x="114038111264" fg:w="28084252"/><text x="74.6574%" y="111.50"></text></g><g><title>[amdxc64.so] (18,054,162 samples, 0.01%)</title><rect x="74.4139%" y="85" width="0.0118%" height="15" fill="rgb(215,43,3)" fg:x="114048141354" fg:w="18054162"/><text x="74.6639%" y="95.50"></text></g><g><title>[amdxc64.so] (126,379,134 samples, 0.08%)</title><rect x="74.3446%" y="213" width="0.0825%" height="15" fill="rgb(238,154,13)" fg:x="113941822400" fg:w="126379134"/><text x="74.5946%" y="223.50"></text></g><g><title>[amdxc64.so] (106,318,954 samples, 0.07%)</title><rect x="74.3577%" y="197" width="0.0694%" height="15" fill="rgb(219,56,2)" fg:x="113961882580" fg:w="106318954"/><text x="74.6077%" y="207.50"></text></g><g><title>[amdxc64.so] (95,285,855 samples, 0.06%)</title><rect x="74.3649%" y="181" width="0.0622%" height="15" fill="rgb(233,0,4)" fg:x="113972915679" fg:w="95285855"/><text x="74.6149%" y="191.50"></text></g><g><title>[amdxc64.so] (79,237,711 samples, 0.05%)</title><rect x="74.3753%" y="165" width="0.0517%" height="15" fill="rgb(235,30,7)" fg:x="113988963823" fg:w="79237711"/><text x="74.6253%" y="175.50"></text></g><g><title>[amdxc64.so] (193,580,737 samples, 0.13%)</title><rect x="74.3014%" y="261" width="0.1263%" height="15" fill="rgb(250,79,13)" fg:x="113875623806" fg:w="193580737"/><text x="74.5514%" y="271.50"></text></g><g><title>[amdxc64.so] (167,502,503 samples, 0.11%)</title><rect x="74.3184%" y="245" width="0.1093%" height="15" fill="rgb(211,146,34)" fg:x="113901702040" fg:w="167502503"/><text x="74.5684%" y="255.50"></text></g><g><title>[amdxc64.so] (153,460,377 samples, 0.10%)</title><rect x="74.3276%" y="229" width="0.1001%" height="15" fill="rgb(228,22,38)" fg:x="113915744166" fg:w="153460377"/><text x="74.5776%" y="239.50"></text></g><g><title>[amdxc64.so] (268,806,412 samples, 0.18%)</title><rect x="74.2863%" y="277" width="0.1754%" height="15" fill="rgb(235,168,5)" fg:x="113852554599" fg:w="268806412"/><text x="74.5363%" y="287.50"></text></g><g><title>[libc.so.6] (52,156,468 samples, 0.03%)</title><rect x="74.4277%" y="261" width="0.0340%" height="15" fill="rgb(221,155,16)" fg:x="114069204543" fg:w="52156468"/><text x="74.6777%" y="271.50"></text></g><g><title>[amdxc64.so] (31,093,279 samples, 0.02%)</title><rect x="74.5337%" y="245" width="0.0203%" height="15" fill="rgb(215,215,53)" fg:x="114231692001" fg:w="31093279"/><text x="74.7837%" y="255.50"></text></g><g><title>[amdxc64.so] (73,219,657 samples, 0.05%)</title><rect x="74.5069%" y="261" width="0.0478%" height="15" fill="rgb(223,4,10)" fg:x="114190568632" fg:w="73219657"/><text x="74.7569%" y="271.50"></text></g><g><title>[amdxc64.so] (27,081,243 samples, 0.02%)</title><rect x="74.5795%" y="245" width="0.0177%" height="15" fill="rgb(234,103,6)" fg:x="114301902631" fg:w="27081243"/><text x="74.8295%" y="255.50"></text></g><g><title>[amdxc64.so] (35,105,315 samples, 0.02%)</title><rect x="74.6090%" y="229" width="0.0229%" height="15" fill="rgb(227,97,0)" fg:x="114347038036" fg:w="35105315"/><text x="74.8590%" y="239.50"></text></g><g><title>[amdxc64.so] (32,096,288 samples, 0.02%)</title><rect x="74.6109%" y="213" width="0.0209%" height="15" fill="rgb(234,150,53)" fg:x="114350047063" fg:w="32096288"/><text x="74.8609%" y="223.50"></text></g><g><title>[libd3d12core.so] (67,201,603 samples, 0.04%)</title><rect x="74.5985%" y="245" width="0.0438%" height="15" fill="rgb(228,201,54)" fg:x="114330989892" fg:w="67201603"/><text x="74.8485%" y="255.50"></text></g><g><title>[libd3d12core.so] (141,424,269 samples, 0.09%)</title><rect x="74.5566%" y="261" width="0.0923%" height="15" fill="rgb(222,22,37)" fg:x="114266797316" fg:w="141424269"/><text x="74.8066%" y="271.50"></text></g><g><title>[libd3d12core.so] (627,883,634 samples, 0.41%)</title><rect x="74.2425%" y="293" width="0.4097%" height="15" fill="rgb(237,53,32)" fg:x="113785352996" fg:w="627883634"/><text x="74.4925%" y="303.50"></text></g><g><title>[libd3d12core.so] (288,866,592 samples, 0.19%)</title><rect x="74.4637%" y="277" width="0.1885%" height="15" fill="rgb(233,25,53)" fg:x="114124370038" fg:w="288866592"/><text x="74.7137%" y="287.50"></text></g><g><title>[libd3d12core.so] (40,120,360 samples, 0.03%)</title><rect x="74.9388%" y="277" width="0.0262%" height="15" fill="rgb(210,40,34)" fg:x="114852554572" fg:w="40120360"/><text x="75.1888%" y="287.50"></text></g><g><title>[libd3d12core.so] (27,081,243 samples, 0.02%)</title><rect x="74.9473%" y="261" width="0.0177%" height="15" fill="rgb(241,220,44)" fg:x="114865593689" fg:w="27081243"/><text x="75.1973%" y="271.50"></text></g><g><title>D3DKMTQueryVideoMemoryInfo (35,105,315 samples, 0.02%)</title><rect x="74.9899%" y="245" width="0.0229%" height="15" fill="rgb(235,28,35)" fg:x="114930789274" fg:w="35105315"/><text x="75.2399%" y="255.50"></text></g><g><title>ioctl (24,072,216 samples, 0.02%)</title><rect x="74.9971%" y="229" width="0.0157%" height="15" fill="rgb(210,56,17)" fg:x="114941822373" fg:w="24072216"/><text x="75.2471%" y="239.50"></text></g><g><title>[libdxcore.so] (75,225,675 samples, 0.05%)</title><rect x="74.9650%" y="277" width="0.0491%" height="15" fill="rgb(224,130,29)" fg:x="114892674932" fg:w="75225675"/><text x="75.2150%" y="287.50"></text></g><g><title>[libdxcore.so] (49,147,441 samples, 0.03%)</title><rect x="74.9820%" y="261" width="0.0321%" height="15" fill="rgb(235,212,8)" fg:x="114918753166" fg:w="49147441"/><text x="75.2320%" y="271.50"></text></g><g><title>[libxcb.so.1.1.0] (29,087,261 samples, 0.02%)</title><rect x="75.2804%" y="165" width="0.0190%" height="15" fill="rgb(223,33,50)" fg:x="115376125270" fg:w="29087261"/><text x="75.5304%" y="175.50"></text></g><g><title>[libxcb.so.1.1.0] (47,141,423 samples, 0.03%)</title><rect x="75.2798%" y="181" width="0.0308%" height="15" fill="rgb(219,149,13)" fg:x="115375122261" fg:w="47141423"/><text x="75.5298%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (50,150,450 samples, 0.03%)</title><rect x="75.2785%" y="197" width="0.0327%" height="15" fill="rgb(250,156,29)" fg:x="115373116243" fg:w="50150450"/><text x="75.5285%" y="207.50"></text></g><g><title>XGetGeometry (99,297,891 samples, 0.06%)</title><rect x="75.2477%" y="245" width="0.0648%" height="15" fill="rgb(216,193,19)" fg:x="115325974820" fg:w="99297891"/><text x="75.4977%" y="255.50"></text></g><g><title>_XReply (85,255,765 samples, 0.06%)</title><rect x="75.2569%" y="229" width="0.0556%" height="15" fill="rgb(216,135,14)" fg:x="115340016946" fg:w="85255765"/><text x="75.5069%" y="239.50"></text></g><g><title>xcb_wait_for_reply64 (54,162,486 samples, 0.04%)</title><rect x="75.2772%" y="213" width="0.0353%" height="15" fill="rgb(241,47,5)" fg:x="115371110225" fg:w="54162486"/><text x="75.5272%" y="223.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (107,321,963 samples, 0.07%)</title><rect x="75.2444%" y="261" width="0.0700%" height="15" fill="rgb(233,42,35)" fg:x="115320959775" fg:w="107321963"/><text x="75.4944%" y="271.50"></text></g><g><title>[amdxc64.so] (29,087,261 samples, 0.02%)</title><rect x="75.5167%" y="165" width="0.0190%" height="15" fill="rgb(231,13,6)" fg:x="115738211519" fg:w="29087261"/><text x="75.7667%" y="175.50"></text></g><g><title>[amdxc64.so] (61,183,549 samples, 0.04%)</title><rect x="75.4977%" y="181" width="0.0399%" height="15" fill="rgb(207,181,40)" fg:x="115709124258" fg:w="61183549"/><text x="75.7477%" y="191.50"></text></g><g><title>[amdxc64.so] (110,330,990 samples, 0.07%)</title><rect x="75.4669%" y="197" width="0.0720%" height="15" fill="rgb(254,173,49)" fg:x="115661982835" fg:w="110330990"/><text x="75.7169%" y="207.50"></text></g><g><title>[amdxc64.so] (187,562,683 samples, 0.12%)</title><rect x="75.4179%" y="213" width="0.1224%" height="15" fill="rgb(221,1,38)" fg:x="115586757160" fg:w="187562683"/><text x="75.6679%" y="223.50"></text></g><g><title>[amdxc64.so] (223,671,007 samples, 0.15%)</title><rect x="75.3950%" y="229" width="0.1459%" height="15" fill="rgb(206,124,46)" fg:x="115551651845" fg:w="223671007"/><text x="75.6450%" y="239.50"></text></g><g><title>[amdxc64.so] (303,911,727 samples, 0.20%)</title><rect x="75.3446%" y="245" width="0.1983%" height="15" fill="rgb(249,21,11)" fg:x="115474420152" fg:w="303911727"/><text x="75.5946%" y="255.50"></text></g><g><title>[libd3d12core.so] (364,092,267 samples, 0.24%)</title><rect x="75.3145%" y="261" width="0.2376%" height="15" fill="rgb(222,201,40)" fg:x="115428281738" fg:w="364092267"/><text x="75.5645%" y="271.50"></text></g><g><title>[libdxcore.so] (54,162,486 samples, 0.04%)</title><rect x="75.5520%" y="261" width="0.0353%" height="15" fill="rgb(235,61,29)" fg:x="115792374005" fg:w="54162486"/><text x="75.8020%" y="271.50"></text></g><g><title>[libdxcore.so] (40,120,360 samples, 0.03%)</title><rect x="75.5612%" y="245" width="0.0262%" height="15" fill="rgb(219,207,3)" fg:x="115806416131" fg:w="40120360"/><text x="75.8112%" y="255.50"></text></g><g><title>D3DKMTQueryVideoMemoryInfo (35,105,315 samples, 0.02%)</title><rect x="75.5645%" y="229" width="0.0229%" height="15" fill="rgb(222,56,46)" fg:x="115811431176" fg:w="35105315"/><text x="75.8145%" y="239.50"></text></g><g><title>ioctl (24,072,216 samples, 0.02%)</title><rect x="75.5717%" y="213" width="0.0157%" height="15" fill="rgb(239,76,54)" fg:x="115822464275" fg:w="24072216"/><text x="75.8217%" y="223.50"></text></g><g><title>[amdxc64.so] (63,189,567 samples, 0.04%)</title><rect x="75.8557%" y="133" width="0.0412%" height="15" fill="rgb(231,124,27)" fg:x="116257770181" fg:w="63189567"/><text x="76.1057%" y="143.50"></text></g><g><title>[amdxc64.so] (42,126,378 samples, 0.03%)</title><rect x="75.8694%" y="117" width="0.0275%" height="15" fill="rgb(249,195,6)" fg:x="116278833370" fg:w="42126378"/><text x="76.1194%" y="127.50"></text></g><g><title>[amdxc64.so] (26,078,234 samples, 0.02%)</title><rect x="75.8799%" y="101" width="0.0170%" height="15" fill="rgb(237,174,47)" fg:x="116294881514" fg:w="26078234"/><text x="76.1299%" y="111.50"></text></g><g><title>[amdxc64.so] (92,276,828 samples, 0.06%)</title><rect x="75.8380%" y="165" width="0.0602%" height="15" fill="rgb(206,201,31)" fg:x="116230688938" fg:w="92276828"/><text x="76.0880%" y="175.50"></text></g><g><title>[amdxc64.so] (80,240,720 samples, 0.05%)</title><rect x="75.8459%" y="149" width="0.0524%" height="15" fill="rgb(231,57,52)" fg:x="116242725046" fg:w="80240720"/><text x="76.0959%" y="159.50"></text></g><g><title>[amdxc64.so] (117,352,053 samples, 0.08%)</title><rect x="75.8223%" y="197" width="0.0766%" height="15" fill="rgb(248,177,22)" fg:x="116206616722" fg:w="117352053"/><text x="76.0723%" y="207.50"></text></g><g><title>[amdxc64.so] (108,324,972 samples, 0.07%)</title><rect x="75.8282%" y="181" width="0.0707%" height="15" fill="rgb(215,211,37)" fg:x="116215643803" fg:w="108324972"/><text x="76.0782%" y="191.50"></text></g><g><title>[amdxc64.so] (145,436,305 samples, 0.09%)</title><rect x="75.8053%" y="229" width="0.0949%" height="15" fill="rgb(241,128,51)" fg:x="116180538488" fg:w="145436305"/><text x="76.0553%" y="239.50"></text></g><g><title>[amdxc64.so] (134,403,206 samples, 0.09%)</title><rect x="75.8125%" y="213" width="0.0877%" height="15" fill="rgb(227,165,31)" fg:x="116191571587" fg:w="134403206"/><text x="76.0625%" y="223.50"></text></g><g><title>[amdxc64.so] (159,478,431 samples, 0.10%)</title><rect x="76.5690%" y="69" width="0.1041%" height="15" fill="rgb(228,167,24)" fg:x="117351049991" fg:w="159478431"/><text x="76.8190%" y="79.50"></text></g><g><title>[amdxc64.so] (103,309,927 samples, 0.07%)</title><rect x="76.6057%" y="53" width="0.0674%" height="15" fill="rgb(228,143,12)" fg:x="117407218495" fg:w="103309927"/><text x="76.8557%" y="63.50"></text></g><g><title>[amdxc64.so] (29,087,261 samples, 0.02%)</title><rect x="76.6541%" y="37" width="0.0190%" height="15" fill="rgb(249,149,8)" fg:x="117481441161" fg:w="29087261"/><text x="76.9041%" y="47.50"></text></g><g><title>[amdxc64.so] (218,655,962 samples, 0.14%)</title><rect x="76.5317%" y="85" width="0.1427%" height="15" fill="rgb(243,35,44)" fg:x="117293878478" fg:w="218655962"/><text x="76.7817%" y="95.50"></text></g><g><title>[amdxc64.so] (309,929,781 samples, 0.20%)</title><rect x="76.4767%" y="101" width="0.2022%" height="15" fill="rgb(246,89,9)" fg:x="117209625722" fg:w="309929781"/><text x="76.7267%" y="111.50"></text></g><g><title>[amdxc64.so] (434,302,897 samples, 0.28%)</title><rect x="76.3976%" y="117" width="0.2834%" height="15" fill="rgb(233,213,13)" fg:x="117088261633" fg:w="434302897"/><text x="76.6476%" y="127.50"></text></g><g><title>[amdxc64.so] (615,847,526 samples, 0.40%)</title><rect x="76.2798%" y="133" width="0.4018%" height="15" fill="rgb(233,141,41)" fg:x="116907720013" fg:w="615847526"/><text x="76.5298%" y="143.50"></text></g><g><title>[amdxc64.so] (831,494,461 samples, 0.54%)</title><rect x="76.1436%" y="165" width="0.5425%" height="15" fill="rgb(239,167,4)" fg:x="116699094141" fg:w="831494461"/><text x="76.3936%" y="175.50"></text></g><g><title>[amdxc64.so] (735,205,597 samples, 0.48%)</title><rect x="76.2065%" y="149" width="0.4797%" height="15" fill="rgb(209,217,16)" fg:x="116795383005" fg:w="735205597"/><text x="76.4565%" y="159.50"></text></g><g><title>[amdxc64.so] (1,184,553,629 samples, 0.77%)</title><rect x="75.9159%" y="213" width="0.7729%" height="15" fill="rgb(219,88,35)" fg:x="116350047009" fg:w="1184553629"/><text x="76.1659%" y="223.50"></text></g><g><title>[amdxc64.so] (1,155,466,368 samples, 0.75%)</title><rect x="75.9349%" y="197" width="0.7539%" height="15" fill="rgb(220,193,23)" fg:x="116379134270" fg:w="1155466368"/><text x="76.1849%" y="207.50"></text></g><g><title>[amdxc64.so] (951,855,541 samples, 0.62%)</title><rect x="76.0677%" y="181" width="0.6211%" height="15" fill="rgb(230,90,52)" fg:x="116582745097" fg:w="951855541"/><text x="76.3177%" y="191.50"></text></g><g><title>[libd3d12core.so] (123,370,107 samples, 0.08%)</title><rect x="76.7582%" y="197" width="0.0805%" height="15" fill="rgb(252,106,19)" fg:x="117640919592" fg:w="123370107"/><text x="77.0082%" y="207.50"></text></g><g><title>[libd3d12core.so] (95,285,855 samples, 0.06%)</title><rect x="76.7765%" y="181" width="0.0622%" height="15" fill="rgb(206,74,20)" fg:x="117669003844" fg:w="95285855"/><text x="77.0265%" y="191.50"></text></g><g><title>[libd3d12core.so] (233,701,097 samples, 0.15%)</title><rect x="76.6888%" y="213" width="0.1525%" height="15" fill="rgb(230,138,44)" fg:x="117534600638" fg:w="233701097"/><text x="76.9388%" y="223.50"></text></g><g><title>[libd3d12core.so] (1,617,853,517 samples, 1.06%)</title><rect x="75.7863%" y="245" width="1.0556%" height="15" fill="rgb(235,182,43)" fg:x="116151451227" fg:w="1617853517"/><text x="76.0363%" y="255.50"></text></g><g><title>[libd3d12core.so] (1,443,329,951 samples, 0.94%)</title><rect x="75.9002%" y="229" width="0.9417%" height="15" fill="rgb(242,16,51)" fg:x="116325974793" fg:w="1443329951"/><text x="76.1502%" y="239.50"></text></g><g><title>[amdxc64.so] (114,343,026 samples, 0.07%)</title><rect x="77.1613%" y="197" width="0.0746%" height="15" fill="rgb(248,9,4)" fg:x="118258773136" fg:w="114343026"/><text x="77.4113%" y="207.50"></text></g><g><title>[amdxc64.so] (106,318,954 samples, 0.07%)</title><rect x="77.1665%" y="181" width="0.0694%" height="15" fill="rgb(210,31,22)" fg:x="118266797208" fg:w="106318954"/><text x="77.4165%" y="191.50"></text></g><g><title>[amdxc64.so] (91,273,819 samples, 0.06%)</title><rect x="77.1763%" y="165" width="0.0596%" height="15" fill="rgb(239,54,39)" fg:x="118281842343" fg:w="91273819"/><text x="77.4263%" y="175.50"></text></g><g><title>[amdxc64.so] (87,261,783 samples, 0.06%)</title><rect x="77.1790%" y="149" width="0.0569%" height="15" fill="rgb(230,99,41)" fg:x="118285854379" fg:w="87261783"/><text x="77.4290%" y="159.50"></text></g><g><title>[amdxc64.so] (80,240,720 samples, 0.05%)</title><rect x="77.1835%" y="133" width="0.0524%" height="15" fill="rgb(253,106,12)" fg:x="118292875442" fg:w="80240720"/><text x="77.4335%" y="143.50"></text></g><g><title>[amdxc64.so] (69,207,621 samples, 0.05%)</title><rect x="77.1907%" y="117" width="0.0452%" height="15" fill="rgb(213,46,41)" fg:x="118303908541" fg:w="69207621"/><text x="77.4407%" y="127.50"></text></g><g><title>[amdxc64.so] (41,123,369 samples, 0.03%)</title><rect x="77.2091%" y="101" width="0.0268%" height="15" fill="rgb(215,133,35)" fg:x="118331992793" fg:w="41123369"/><text x="77.4591%" y="111.50"></text></g><g><title>[amdxc64.so] (19,057,171 samples, 0.01%)</title><rect x="77.2235%" y="85" width="0.0124%" height="15" fill="rgb(213,28,5)" fg:x="118354058991" fg:w="19057171"/><text x="77.4735%" y="95.50"></text></g><g><title>[libd3d12core.so] (166,499,494 samples, 0.11%)</title><rect x="77.1489%" y="229" width="0.1086%" height="15" fill="rgb(215,77,49)" fg:x="118239715965" fg:w="166499494"/><text x="77.3989%" y="239.50"></text></g><g><title>[libd3d12core.so] (155,466,395 samples, 0.10%)</title><rect x="77.1561%" y="213" width="0.1014%" height="15" fill="rgb(248,100,22)" fg:x="118250749064" fg:w="155466395"/><text x="77.4061%" y="223.50"></text></g><g><title>[libd3d12core.so] (33,099,297 samples, 0.02%)</title><rect x="77.2359%" y="197" width="0.0216%" height="15" fill="rgb(208,67,9)" fg:x="118373116162" fg:w="33099297"/><text x="77.4859%" y="207.50"></text></g><g><title>[libd3d12core.so] (27,081,243 samples, 0.02%)</title><rect x="77.2398%" y="181" width="0.0177%" height="15" fill="rgb(219,133,21)" fg:x="118379134216" fg:w="27081243"/><text x="77.4898%" y="191.50"></text></g><g><title>[libd3d12core.so] (21,063,189 samples, 0.01%)</title><rect x="77.2438%" y="165" width="0.0137%" height="15" fill="rgb(246,46,29)" fg:x="118385152270" fg:w="21063189"/><text x="77.4938%" y="175.50"></text></g><g><title>[swrast_dri.so] (94,282,846 samples, 0.06%)</title><rect x="77.4152%" y="213" width="0.0615%" height="15" fill="rgb(246,185,52)" fg:x="118647940628" fg:w="94282846"/><text x="77.6652%" y="223.50"></text></g><g><title>__libc_calloc (21,063,189 samples, 0.01%)</title><rect x="77.4767%" y="213" width="0.0137%" height="15" fill="rgb(252,136,11)" fg:x="118742223474" fg:w="21063189"/><text x="77.7267%" y="223.50"></text></g><g><title>[libc.so.6] (16,048,144 samples, 0.01%)</title><rect x="77.4800%" y="197" width="0.0105%" height="15" fill="rgb(219,138,53)" fg:x="118747238519" fg:w="16048144"/><text x="77.7300%" y="207.50"></text></g><g><title>[swrast_dri.so] (358,074,213 samples, 0.23%)</title><rect x="77.2575%" y="229" width="0.2336%" height="15" fill="rgb(211,51,23)" fg:x="118406215459" fg:w="358074213"/><text x="77.5075%" y="239.50"></text></g><g><title>[swrast_dri.so] (997,993,955 samples, 0.65%)</title><rect x="76.8419%" y="245" width="0.6512%" height="15" fill="rgb(247,221,28)" fg:x="117769304744" fg:w="997993955"/><text x="77.0919%" y="255.50"></text></g><g><title>[swrast_dri.so] (2,929,789,289 samples, 1.91%)</title><rect x="75.5874%" y="261" width="1.9116%" height="15" fill="rgb(251,222,45)" fg:x="115846536491" fg:w="2929789289"/><text x="75.8374%" y="271.50">[..</text></g><g><title>[swrast_dri.so] (3,845,536,506 samples, 2.51%)</title><rect x="75.0141%" y="277" width="2.5091%" height="15" fill="rgb(217,162,53)" fg:x="114967900607" fg:w="3845536506"/><text x="75.2641%" y="287.50">[s..</text></g><g><title>__libc_calloc (16,048,144 samples, 0.01%)</title><rect x="77.5232%" y="277" width="0.0105%" height="15" fill="rgb(229,93,14)" fg:x="118813437113" fg:w="16048144"/><text x="77.7732%" y="287.50"></text></g><g><title>[swrast_dri.so] (4,438,314,825 samples, 2.90%)</title><rect x="74.6522%" y="293" width="2.8959%" height="15" fill="rgb(209,67,49)" fg:x="114413236630" fg:w="4438314825"/><text x="74.9022%" y="303.50">[s..</text></g><g><title>clock_gettime (20,060,180 samples, 0.01%)</title><rect x="77.5585%" y="293" width="0.0131%" height="15" fill="rgb(213,87,29)" fg:x="118867599599" fg:w="20060180"/><text x="77.8085%" y="303.50"></text></g><g><title>[swrast_dri.so] (6,843,530,407 samples, 4.47%)</title><rect x="73.1208%" y="357" width="4.4653%" height="15" fill="rgb(205,151,52)" fg:x="112066195570" fg:w="6843530407"/><text x="73.3708%" y="367.50">[swra..</text></g><g><title>[swrast_dri.so] (6,775,325,795 samples, 4.42%)</title><rect x="73.1653%" y="341" width="4.4208%" height="15" fill="rgb(253,215,39)" fg:x="112134400182" fg:w="6775325795"/><text x="73.4153%" y="351.50">[swra..</text></g><g><title>[swrast_dri.so] (6,740,220,480 samples, 4.40%)</title><rect x="73.1882%" y="325" width="4.3978%" height="15" fill="rgb(221,220,41)" fg:x="112169505497" fg:w="6740220480"/><text x="73.4382%" y="335.50">[swra..</text></g><g><title>[swrast_dri.so] (5,489,468,257 samples, 3.58%)</title><rect x="74.0043%" y="309" width="3.5818%" height="15" fill="rgb(218,133,21)" fg:x="113420257720" fg:w="5489468257"/><text x="74.2543%" y="319.50">[swr..</text></g><g><title>[libc.so.6] (17,051,153 samples, 0.01%)</title><rect x="78.1037%" y="245" width="0.0111%" height="15" fill="rgb(221,193,43)" fg:x="119703106096" fg:w="17051153"/><text x="78.3537%" y="255.50"></text></g><g><title>[swrast_dri.so] (80,240,720 samples, 0.05%)</title><rect x="78.1148%" y="245" width="0.0524%" height="15" fill="rgb(240,128,52)" fg:x="119720157249" fg:w="80240720"/><text x="78.3648%" y="255.50"></text></g><g><title>[swrast_dri.so] (25,075,225 samples, 0.02%)</title><rect x="78.1508%" y="229" width="0.0164%" height="15" fill="rgb(253,114,12)" fg:x="119775322744" fg:w="25075225"/><text x="78.4008%" y="239.50"></text></g><g><title>[swrast_dri.so] (389,167,492 samples, 0.25%)</title><rect x="77.9146%" y="293" width="0.2539%" height="15" fill="rgb(215,223,47)" fg:x="119413236495" fg:w="389167492"/><text x="78.1646%" y="303.50"></text></g><g><title>[swrast_dri.so] (304,914,736 samples, 0.20%)</title><rect x="77.9695%" y="277" width="0.1990%" height="15" fill="rgb(248,225,23)" fg:x="119497489251" fg:w="304914736"/><text x="78.2195%" y="287.50"></text></g><g><title>[swrast_dri.so] (163,490,467 samples, 0.11%)</title><rect x="78.0618%" y="261" width="0.1067%" height="15" fill="rgb(250,108,0)" fg:x="119638913520" fg:w="163490467"/><text x="78.3118%" y="271.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_bindings_from_slice (673,019,039 samples, 0.44%)</title><rect x="77.7987%" y="309" width="0.4391%" height="15" fill="rgb(228,208,7)" fg:x="119235703902" fg:w="673019039"/><text x="78.0487%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (106,318,954 samples, 0.07%)</title><rect x="78.1685%" y="293" width="0.0694%" height="15" fill="rgb(244,45,10)" fg:x="119802403987" fg:w="106318954"/><text x="78.4185%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (46,138,414 samples, 0.03%)</title><rect x="78.2077%" y="277" width="0.0301%" height="15" fill="rgb(207,125,25)" fg:x="119862584527" fg:w="46138414"/><text x="78.4577%" y="287.50"></text></g><g><title>[swrast_dri.so] (197,592,773 samples, 0.13%)</title><rect x="78.3125%" y="293" width="0.1289%" height="15" fill="rgb(210,195,18)" fg:x="120023065967" fg:w="197592773"/><text x="78.5625%" y="303.50"></text></g><g><title>[swrast_dri.so] (98,294,882 samples, 0.06%)</title><rect x="78.3772%" y="277" width="0.0641%" height="15" fill="rgb(249,80,12)" fg:x="120122363858" fg:w="98294882"/><text x="78.6272%" y="287.50"></text></g><g><title>[swrast_dri.so] (77,231,693 samples, 0.05%)</title><rect x="78.3910%" y="261" width="0.0504%" height="15" fill="rgb(221,65,9)" fg:x="120143427047" fg:w="77231693"/><text x="78.6410%" y="271.50"></text></g><g><title>[swrast_dri.so] (53,159,477 samples, 0.03%)</title><rect x="78.4067%" y="245" width="0.0347%" height="15" fill="rgb(235,49,36)" fg:x="120167499263" fg:w="53159477"/><text x="78.6567%" y="255.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_pipeline (379,137,402 samples, 0.25%)</title><rect x="78.2379%" y="309" width="0.2474%" height="15" fill="rgb(225,32,20)" fg:x="119908722941" fg:w="379137402"/><text x="78.4879%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (67,201,603 samples, 0.04%)</title><rect x="78.4414%" y="293" width="0.0438%" height="15" fill="rgb(215,141,46)" fg:x="120220658740" fg:w="67201603"/><text x="78.6914%" y="303.50"></text></g><g><title>[swrast_dri.so] (70,210,630 samples, 0.05%)</title><rect x="78.5376%" y="293" width="0.0458%" height="15" fill="rgb(250,160,47)" fg:x="120368101063" fg:w="70210630"/><text x="78.7876%" y="303.50"></text></g><g><title>[swrast_dri.so] (60,180,540 samples, 0.04%)</title><rect x="78.5441%" y="277" width="0.0393%" height="15" fill="rgb(216,222,40)" fg:x="120378131153" fg:w="60180540"/><text x="78.7941%" y="287.50"></text></g><g><title>[swrast_dri.so] (35,105,315 samples, 0.02%)</title><rect x="78.5605%" y="261" width="0.0229%" height="15" fill="rgb(234,217,39)" fg:x="120403206378" fg:w="35105315"/><text x="78.8105%" y="271.50"></text></g><g><title>[libc.so.6] (17,051,153 samples, 0.01%)</title><rect x="78.5723%" y="245" width="0.0111%" height="15" fill="rgb(207,178,40)" fg:x="120421260540" fg:w="17051153"/><text x="78.8223%" y="255.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_uniforms_from_bytes (195,586,755 samples, 0.13%)</title><rect x="78.4865%" y="309" width="0.1276%" height="15" fill="rgb(221,136,13)" fg:x="120289866361" fg:w="195586755"/><text x="78.7365%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (47,141,423 samples, 0.03%)</title><rect x="78.5834%" y="293" width="0.0308%" height="15" fill="rgb(249,199,10)" fg:x="120438311693" fg:w="47141423"/><text x="78.8334%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (18,054,162 samples, 0.01%)</title><rect x="78.6024%" y="277" width="0.0118%" height="15" fill="rgb(249,222,13)" fg:x="120467398954" fg:w="18054162"/><text x="78.8524%" y="287.50"></text></g><g><title>[swrast_dri.so] (114,343,026 samples, 0.07%)</title><rect x="78.6246%" y="293" width="0.0746%" height="15" fill="rgb(244,185,38)" fg:x="120501501260" fg:w="114343026"/><text x="78.8746%" y="303.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::begin_pass (159,478,431 samples, 0.10%)</title><rect x="78.6168%" y="309" width="0.1041%" height="15" fill="rgb(236,202,9)" fg:x="120489465152" fg:w="159478431"/><text x="78.8668%" y="319.50"></text></g><g><title>miniquad::window::screen_size (33,099,297 samples, 0.02%)</title><rect x="78.6992%" y="293" width="0.0216%" height="15" fill="rgb(250,229,37)" fg:x="120615844286" fg:w="33099297"/><text x="78.9492%" y="303.50"></text></g><g><title>[libc.so.6] (14,358,073,835 samples, 9.37%)</title><rect x="79.0808%" y="277" width="9.3683%" height="15" fill="rgb(206,174,23)" fg:x="121200598533" fg:w="14358073835"/><text x="79.3308%" y="287.50">[libc.so.6]</text></g><g><title>[amdxc64.so] (16,048,144 samples, 0.01%)</title><rect x="89.6742%" y="181" width="0.0105%" height="15" fill="rgb(211,33,43)" fg:x="137436305216" fg:w="16048144"/><text x="89.9242%" y="191.50"></text></g><g><title>[libd3d12core.so] (135,406,215 samples, 0.09%)</title><rect x="89.6369%" y="197" width="0.0883%" height="15" fill="rgb(245,58,50)" fg:x="137379133703" fg:w="135406215"/><text x="89.8869%" y="207.50"></text></g><g><title>[libd3d12core.so] (62,186,558 samples, 0.04%)</title><rect x="89.6847%" y="181" width="0.0406%" height="15" fill="rgb(244,68,36)" fg:x="137452353360" fg:w="62186558"/><text x="89.9347%" y="191.50"></text></g><g><title>[libd3d12core.so] (24,072,216 samples, 0.02%)</title><rect x="89.7096%" y="165" width="0.0157%" height="15" fill="rgb(232,229,15)" fg:x="137490467702" fg:w="24072216"/><text x="89.9596%" y="175.50"></text></g><g><title>pthread_mutex_lock (22,066,198 samples, 0.01%)</title><rect x="89.7109%" y="149" width="0.0144%" height="15" fill="rgb(254,30,23)" fg:x="137492473720" fg:w="22066198"/><text x="89.9609%" y="159.50"></text></g><g><title>[swrast_dri.so] (66,198,594 samples, 0.04%)</title><rect x="89.7253%" y="197" width="0.0432%" height="15" fill="rgb(235,160,14)" fg:x="137514539918" fg:w="66198594"/><text x="89.9753%" y="207.50"></text></g><g><title>[swrast_dri.so] (294,884,646 samples, 0.19%)</title><rect x="89.5787%" y="213" width="0.1924%" height="15" fill="rgb(212,155,44)" fg:x="137289865902" fg:w="294884646"/><text x="89.8287%" y="223.50"></text></g><g><title>[swrast_dri.so] (412,236,699 samples, 0.27%)</title><rect x="89.5132%" y="229" width="0.2690%" height="15" fill="rgb(226,2,50)" fg:x="137189565002" fg:w="412236699"/><text x="89.7632%" y="239.50"></text></g><g><title>[swrast_dri.so] (1,355,065,159 samples, 0.88%)</title><rect x="88.9183%" y="245" width="0.8842%" height="15" fill="rgb(234,177,6)" fg:x="136277829821" fg:w="1355065159"/><text x="89.1683%" y="255.50"></text></g><g><title>__libc_calloc (31,093,279 samples, 0.02%)</title><rect x="89.7822%" y="229" width="0.0203%" height="15" fill="rgb(217,24,9)" fg:x="137601801701" fg:w="31093279"/><text x="90.0322%" y="239.50"></text></g><g><title>[libc.so.6] (16,048,144 samples, 0.01%)</title><rect x="89.7920%" y="213" width="0.0105%" height="15" fill="rgb(220,13,46)" fg:x="137616846836" fg:w="16048144"/><text x="90.0420%" y="223.50"></text></g><g><title>[swrast_dri.so] (16,826,478,984 samples, 10.98%)</title><rect x="78.8249%" y="293" width="10.9789%" height="15" fill="rgb(239,221,27)" fg:x="120808422014" fg:w="16826478984"/><text x="79.0749%" y="303.50">[swrast_dri.so]</text></g><g><title>[swrast_dri.so] (2,076,228,630 samples, 1.35%)</title><rect x="88.4491%" y="277" width="1.3547%" height="15" fill="rgb(222,198,25)" fg:x="135558672368" fg:w="2076228630"/><text x="88.6991%" y="287.50"></text></g><g><title>[swrast_dri.so] (1,544,633,860 samples, 1.01%)</title><rect x="88.7960%" y="261" width="1.0078%" height="15" fill="rgb(211,99,13)" fg:x="136090267138" fg:w="1544633860"/><text x="89.0460%" y="271.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::buffer_update (17,020,059,721 samples, 11.11%)</title><rect x="78.7208%" y="309" width="11.1052%" height="15" fill="rgb(232,111,31)" fg:x="120648943583" fg:w="17020059721"/><text x="78.9708%" y="319.50">&lt;miniquad::graph..</text></g><g><title>core::hash::BuildHasher::hash_one (34,102,306 samples, 0.02%)</title><rect x="89.8038%" y="293" width="0.0223%" height="15" fill="rgb(245,82,37)" fg:x="137634900998" fg:w="34102306"/><text x="90.0538%" y="303.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::draw (24,072,216 samples, 0.02%)</title><rect x="89.8260%" y="309" width="0.0157%" height="15" fill="rgb(227,149,46)" fg:x="137669003304" fg:w="24072216"/><text x="90.0760%" y="319.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::end_render_pass (27,081,243 samples, 0.02%)</title><rect x="89.8418%" y="309" width="0.0177%" height="15" fill="rgb(218,36,50)" fg:x="137693075520" fg:w="27081243"/><text x="90.0918%" y="319.50"></text></g><g><title>[swrast_dri.so] (22,066,198 samples, 0.01%)</title><rect x="89.8450%" y="293" width="0.0144%" height="15" fill="rgb(226,80,48)" fg:x="137698090565" fg:w="22066198"/><text x="90.0950%" y="303.50"></text></g><g><title>[swrast_dri.so] (708,124,354 samples, 0.46%)</title><rect x="89.8719%" y="309" width="0.4620%" height="15" fill="rgb(238,224,15)" fg:x="137739213934" fg:w="708124354"/><text x="90.1219%" y="319.50"></text></g><g><title>[swrast_dri.so] (623,871,598 samples, 0.41%)</title><rect x="89.9268%" y="293" width="0.4071%" height="15" fill="rgb(241,136,10)" fg:x="137823466690" fg:w="623871598"/><text x="90.1768%" y="303.50"></text></g><g><title>[swrast_dri.so] (593,781,328 samples, 0.39%)</title><rect x="89.9465%" y="277" width="0.3874%" height="15" fill="rgb(208,32,45)" fg:x="137853556960" fg:w="593781328"/><text x="90.1965%" y="287.50"></text></g><g><title>[swrast_dri.so] (490,471,401 samples, 0.32%)</title><rect x="90.0139%" y="261" width="0.3200%" height="15" fill="rgb(207,135,9)" fg:x="137956866887" fg:w="490471401"/><text x="90.2639%" y="271.50"></text></g><g><title>[swrast_dri.so] (423,269,798 samples, 0.28%)</title><rect x="90.0577%" y="245" width="0.2762%" height="15" fill="rgb(206,86,44)" fg:x="138024068490" fg:w="423269798"/><text x="90.3077%" y="255.50"></text></g><g><title>[swrast_dri.so] (334,001,997 samples, 0.22%)</title><rect x="90.1160%" y="229" width="0.2179%" height="15" fill="rgb(245,177,15)" fg:x="138113336291" fg:w="334001997"/><text x="90.3660%" y="239.50"></text></g><g><title>[swrast_dri.so] (235,707,115 samples, 0.15%)</title><rect x="90.1801%" y="213" width="0.1538%" height="15" fill="rgb(206,64,50)" fg:x="138211631173" fg:w="235707115"/><text x="90.4301%" y="223.50"></text></g><g><title>[swrast_dri.so] (29,087,261 samples, 0.02%)</title><rect x="90.3149%" y="197" width="0.0190%" height="15" fill="rgb(234,36,40)" fg:x="138418251027" fg:w="29087261"/><text x="90.5649%" y="207.50"></text></g><g><title>macroquad::quad_gl::PipelineExt::set_uniform (87,261,783 samples, 0.06%)</title><rect x="90.3339%" y="309" width="0.0569%" height="15" fill="rgb(213,64,8)" fg:x="138447338288" fg:w="87261783"/><text x="90.5839%" y="319.50"></text></g><g><title>[libc.so.6] (28,084,252 samples, 0.02%)</title><rect x="90.3725%" y="293" width="0.0183%" height="15" fill="rgb(210,75,36)" fg:x="138506515819" fg:w="28084252"/><text x="90.6225%" y="303.50"></text></g><g><title>macroquad::quad_gl::QuadGl::draw (19,576,729,662 samples, 12.77%)</title><rect x="77.6214%" y="325" width="12.7734%" height="15" fill="rgb(229,88,21)" fg:x="118963888463" fg:w="19576729662"/><text x="77.8714%" y="335.50">macroquad::quad_gl:..</text></g><g><title>macroquad::camera::set_camera (19,608,825,950 samples, 12.79%)</title><rect x="77.6011%" y="357" width="12.7943%" height="15" fill="rgb(252,204,47)" fg:x="118932795184" fg:w="19608825950"/><text x="77.8511%" y="367.50">macroquad::camera::..</text></g><g><title>macroquad::Context::perform_render_passes (19,585,756,743 samples, 12.78%)</title><rect x="77.6161%" y="341" width="12.7793%" height="15" fill="rgb(208,77,27)" fg:x="118955864391" fg:w="19585756743"/><text x="77.8661%" y="351.50">macroquad::Context:..</text></g><g><title>malloc (25,075,225 samples, 0.02%)</title><rect x="90.4177%" y="341" width="0.0164%" height="15" fill="rgb(221,76,26)" fg:x="138575723440" fg:w="25075225"/><text x="90.6677%" y="351.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (23,069,207 samples, 0.02%)</title><rect x="90.4406%" y="325" width="0.0151%" height="15" fill="rgb(225,139,18)" fg:x="138610828755" fg:w="23069207"/><text x="90.6906%" y="335.50"></text></g><g><title>clock_gettime (20,060,180 samples, 0.01%)</title><rect x="90.4425%" y="309" width="0.0131%" height="15" fill="rgb(230,137,11)" fg:x="138613837782" fg:w="20060180"/><text x="90.6925%" y="319.50"></text></g><g><title>macroquad::experimental::scene::get_scene (101,303,909 samples, 0.07%)</title><rect x="90.3954%" y="357" width="0.0661%" height="15" fill="rgb(212,28,1)" fg:x="138541621134" fg:w="101303909"/><text x="90.6454%" y="367.50"></text></g><g><title>miniquad::date::now (42,126,378 samples, 0.03%)</title><rect x="90.4340%" y="341" width="0.0275%" height="15" fill="rgb(248,164,17)" fg:x="138600798665" fg:w="42126378"/><text x="90.6840%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,048,144 samples, 0.01%)</title><rect x="90.5073%" y="341" width="0.0105%" height="15" fill="rgb(222,171,42)" fg:x="138713135673" fg:w="16048144"/><text x="90.7573%" y="351.50"></text></g><g><title>macroquad::telemetry::begin_gpu_query (53,159,477 samples, 0.03%)</title><rect x="90.4851%" y="357" width="0.0347%" height="15" fill="rgb(243,84,45)" fg:x="138679033367" fg:w="53159477"/><text x="90.7351%" y="367.50"></text></g><g><title>malloc (38,114,342 samples, 0.02%)</title><rect x="90.5433%" y="325" width="0.0249%" height="15" fill="rgb(252,49,23)" fg:x="138768301168" fg:w="38114342"/><text x="90.7933%" y="335.50"></text></g><g><title>[libc.so.6] (26,078,234 samples, 0.02%)</title><rect x="90.5512%" y="309" width="0.0170%" height="15" fill="rgb(215,19,7)" fg:x="138780337276" fg:w="26078234"/><text x="90.8012%" y="319.50"></text></g><g><title>macroquad::telemetry::reset (71,213,639 samples, 0.05%)</title><rect x="90.5270%" y="357" width="0.0465%" height="15" fill="rgb(238,81,41)" fg:x="138743225943" fg:w="71213639"/><text x="90.7770%" y="367.50"></text></g><g><title>macroquad::experimental::scene::get_scene (69,207,621 samples, 0.05%)</title><rect x="90.5283%" y="341" width="0.0452%" height="15" fill="rgb(210,199,37)" fg:x="138745231961" fg:w="69207621"/><text x="90.7783%" y="351.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (131,879,635,356 samples, 86.05%)</title><rect x="4.5719%" y="373" width="86.0486%" height="15" fill="rgb(244,192,49)" fg:x="7007020874" fg:w="131879635356"/><text x="4.8219%" y="383.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw</text></g><g><title>miniquad::window::set_cursor_grab (16,048,144 samples, 0.01%)</title><rect x="90.6343%" y="357" width="0.0105%" height="15" fill="rgb(226,211,11)" fg:x="138907719419" fg:w="16048144"/><text x="90.8843%" y="367.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::update (44,132,396 samples, 0.03%)</title><rect x="90.6205%" y="373" width="0.0288%" height="15" fill="rgb(236,162,54)" fg:x="138886656230" fg:w="44132396"/><text x="90.8705%" y="383.50"></text></g><g><title>[libX11.so.6.4.0] (29,087,261 samples, 0.02%)</title><rect x="90.6572%" y="341" width="0.0190%" height="15" fill="rgb(220,229,9)" fg:x="138942824734" fg:w="29087261"/><text x="90.9072%" y="351.50"></text></g><g><title>_XEventsQueued (34,102,306 samples, 0.02%)</title><rect x="90.6559%" y="357" width="0.0223%" height="15" fill="rgb(250,87,22)" fg:x="138940818716" fg:w="34102306"/><text x="90.9059%" y="367.50"></text></g><g><title>_XFlush (22,066,198 samples, 0.01%)</title><rect x="90.6781%" y="357" width="0.0144%" height="15" fill="rgb(239,43,17)" fg:x="138974921022" fg:w="22066198"/><text x="90.9281%" y="367.50"></text></g><g><title>_XSend (19,057,171 samples, 0.01%)</title><rect x="90.6801%" y="341" width="0.0124%" height="15" fill="rgb(231,177,25)" fg:x="138977930049" fg:w="19057171"/><text x="90.9301%" y="351.50"></text></g><g><title>XFlush (69,207,621 samples, 0.05%)</title><rect x="90.6493%" y="373" width="0.0452%" height="15" fill="rgb(219,179,1)" fg:x="138930788626" fg:w="69207621"/><text x="90.8993%" y="383.50"></text></g><g><title>[libGLX.so.0.0.0] (18,054,162 samples, 0.01%)</title><rect x="90.7115%" y="357" width="0.0118%" height="15" fill="rgb(238,219,53)" fg:x="139026074481" fg:w="18054162"/><text x="90.9615%" y="367.50"></text></g><g><title>__glDispatchCheckMultithreaded (33,099,297 samples, 0.02%)</title><rect x="90.7239%" y="357" width="0.0216%" height="15" fill="rgb(232,167,36)" fg:x="139045131652" fg:w="33099297"/><text x="90.9739%" y="367.50"></text></g><g><title>[libGLX.so.0.0.0] (78,234,702 samples, 0.05%)</title><rect x="90.6997%" y="373" width="0.0510%" height="15" fill="rgb(244,19,51)" fg:x="139008020319" fg:w="78234702"/><text x="90.9497%" y="383.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (24,072,216 samples, 0.02%)</title><rect x="90.7802%" y="341" width="0.0157%" height="15" fill="rgb(224,6,22)" fg:x="139131390426" fg:w="24072216"/><text x="91.0302%" y="351.50"></text></g><g><title>[libX11.so.6.4.0] (54,162,486 samples, 0.04%)</title><rect x="91.0643%" y="261" width="0.0353%" height="15" fill="rgb(224,145,5)" fg:x="139566696332" fg:w="54162486"/><text x="91.3143%" y="271.50"></text></g><g><title>[libXext.so.6.4.0] (28,084,252 samples, 0.02%)</title><rect x="91.0996%" y="261" width="0.0183%" height="15" fill="rgb(234,130,49)" fg:x="139620858818" fg:w="28084252"/><text x="91.3496%" y="271.50"></text></g><g><title>XShmPutImage (118,355,062 samples, 0.08%)</title><rect x="91.0459%" y="277" width="0.0772%" height="15" fill="rgb(254,6,2)" fg:x="139538612080" fg:w="118355062"/><text x="91.2959%" y="287.50"></text></g><g><title>[libxcb.so.1.1.0] (16,048,144 samples, 0.01%)</title><rect x="91.1546%" y="197" width="0.0105%" height="15" fill="rgb(208,96,46)" fg:x="139705111574" fg:w="16048144"/><text x="91.4046%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (21,063,189 samples, 0.01%)</title><rect x="91.1526%" y="213" width="0.0137%" height="15" fill="rgb(239,3,39)" fg:x="139702102547" fg:w="21063189"/><text x="91.4026%" y="223.50"></text></g><g><title>[libX11.so.6.4.0] (25,075,225 samples, 0.02%)</title><rect x="91.1519%" y="229" width="0.0164%" height="15" fill="rgb(233,210,1)" fg:x="139701099538" fg:w="25075225"/><text x="91.4019%" y="239.50"></text></g><g><title>[libX11.so.6.4.0] (46,138,414 samples, 0.03%)</title><rect x="91.1454%" y="245" width="0.0301%" height="15" fill="rgb(244,137,37)" fg:x="139691069448" fg:w="46138414"/><text x="91.3954%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (35,105,315 samples, 0.02%)</title><rect x="91.2004%" y="213" width="0.0229%" height="15" fill="rgb(240,136,2)" fg:x="139775322204" fg:w="35105315"/><text x="91.4504%" y="223.50"></text></g><g><title>xcb_writev (74,222,666 samples, 0.05%)</title><rect x="91.1899%" y="229" width="0.0484%" height="15" fill="rgb(239,18,37)" fg:x="139759274060" fg:w="74222666"/><text x="91.4399%" y="239.50"></text></g><g><title>_XSend (94,282,846 samples, 0.06%)</title><rect x="91.1781%" y="245" width="0.0615%" height="15" fill="rgb(218,185,22)" fg:x="139741219898" fg:w="94282846"/><text x="91.4281%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (58,174,522 samples, 0.04%)</title><rect x="91.2639%" y="197" width="0.0380%" height="15" fill="rgb(225,218,4)" fg:x="139872614077" fg:w="58174522"/><text x="91.5139%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (83,249,747 samples, 0.05%)</title><rect x="91.2567%" y="213" width="0.0543%" height="15" fill="rgb(230,182,32)" fg:x="139861580978" fg:w="83249747"/><text x="91.5067%" y="223.50"></text></g><g><title>[libxcb.so.1.1.0] (87,261,783 samples, 0.06%)</title><rect x="91.2547%" y="229" width="0.0569%" height="15" fill="rgb(242,56,43)" fg:x="139858571951" fg:w="87261783"/><text x="91.5047%" y="239.50"></text></g><g><title>_XReply (267,803,403 samples, 0.17%)</title><rect x="91.1395%" y="261" width="0.1747%" height="15" fill="rgb(233,99,24)" fg:x="139682042367" fg:w="267803403"/><text x="91.3895%" y="271.50"></text></g><g><title>xcb_wait_for_reply64 (96,288,864 samples, 0.06%)</title><rect x="91.2514%" y="245" width="0.0628%" height="15" fill="rgb(234,209,42)" fg:x="139853556906" fg:w="96288864"/><text x="91.5014%" y="255.50"></text></g><g><title>XSync (292,878,628 samples, 0.19%)</title><rect x="91.1251%" y="277" width="0.1911%" height="15" fill="rgb(227,7,12)" fg:x="139659976169" fg:w="292878628"/><text x="91.3751%" y="287.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (433,299,888 samples, 0.28%)</title><rect x="91.0341%" y="293" width="0.2827%" height="15" fill="rgb(245,203,43)" fg:x="139520557918" fg:w="433299888"/><text x="91.2841%" y="303.50"></text></g><g><title>[libc.so.6] (9,508,525,320 samples, 6.20%)</title><rect x="91.3169%" y="293" width="6.2041%" height="15" fill="rgb(238,205,33)" fg:x="139953857806" fg:w="9508525320"/><text x="91.5669%" y="303.50">[libc.so..</text></g><g><title>[amdxc64.so] (39,117,351 samples, 0.03%)</title><rect x="97.6538%" y="149" width="0.0255%" height="15" fill="rgb(231,56,7)" fg:x="149665993953" fg:w="39117351"/><text x="97.9038%" y="159.50"></text></g><g><title>[amdxc64.so] (35,105,315 samples, 0.02%)</title><rect x="97.6564%" y="133" width="0.0229%" height="15" fill="rgb(244,186,29)" fg:x="149670005989" fg:w="35105315"/><text x="97.9064%" y="143.50"></text></g><g><title>[amdxc64.so] (30,090,270 samples, 0.02%)</title><rect x="97.6597%" y="117" width="0.0196%" height="15" fill="rgb(234,111,31)" fg:x="149675021034" fg:w="30090270"/><text x="97.9097%" y="127.50"></text></g><g><title>[amdxc64.so] (17,051,153 samples, 0.01%)</title><rect x="97.6682%" y="101" width="0.0111%" height="15" fill="rgb(241,149,10)" fg:x="149688060151" fg:w="17051153"/><text x="97.9182%" y="111.50"></text></g><g><title>[amdxc64.so] (16,048,144 samples, 0.01%)</title><rect x="97.6689%" y="85" width="0.0105%" height="15" fill="rgb(249,206,44)" fg:x="149689063160" fg:w="16048144"/><text x="97.9189%" y="95.50"></text></g><g><title>[amdxc64.so] (104,312,936 samples, 0.07%)</title><rect x="97.6139%" y="197" width="0.0681%" height="15" fill="rgb(251,153,30)" fg:x="149604810404" fg:w="104312936"/><text x="97.8639%" y="207.50"></text></g><g><title>[amdxc64.so] (86,258,774 samples, 0.06%)</title><rect x="97.6257%" y="181" width="0.0563%" height="15" fill="rgb(239,152,38)" fg:x="149622864566" fg:w="86258774"/><text x="97.8757%" y="191.50"></text></g><g><title>[amdxc64.so] (65,195,585 samples, 0.04%)</title><rect x="97.6394%" y="165" width="0.0425%" height="15" fill="rgb(249,139,47)" fg:x="149643927755" fg:w="65195585"/><text x="97.8894%" y="175.50"></text></g><g><title>[amdxc64.so] (192,577,728 samples, 0.13%)</title><rect x="97.5570%" y="261" width="0.1257%" height="15" fill="rgb(244,64,35)" fg:x="149517548621" fg:w="192577728"/><text x="97.8070%" y="271.50"></text></g><g><title>[amdxc64.so] (173,520,557 samples, 0.11%)</title><rect x="97.5694%" y="245" width="0.1132%" height="15" fill="rgb(216,46,15)" fg:x="149536605792" fg:w="173520557"/><text x="97.8194%" y="255.50"></text></g><g><title>[amdxc64.so] (157,472,413 samples, 0.10%)</title><rect x="97.5799%" y="229" width="0.1027%" height="15" fill="rgb(250,74,19)" fg:x="149552653936" fg:w="157472413"/><text x="97.8299%" y="239.50"></text></g><g><title>[amdxc64.so] (132,397,188 samples, 0.09%)</title><rect x="97.5962%" y="213" width="0.0864%" height="15" fill="rgb(249,42,33)" fg:x="149577729161" fg:w="132397188"/><text x="97.8462%" y="223.50"></text></g><g><title>[amdxc64.so] (262,788,358 samples, 0.17%)</title><rect x="97.5413%" y="277" width="0.1715%" height="15" fill="rgb(242,149,17)" fg:x="149493476405" fg:w="262788358"/><text x="97.7913%" y="287.50"></text></g><g><title>[libc.so.6] (46,138,414 samples, 0.03%)</title><rect x="97.6826%" y="261" width="0.0301%" height="15" fill="rgb(244,29,21)" fg:x="149710126349" fg:w="46138414"/><text x="97.9326%" y="271.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="97.7886%" y="229" width="0.0137%" height="15" fill="rgb(220,130,37)" fg:x="149872613807" fg:w="21063189"/><text x="98.0386%" y="239.50"></text></g><g><title>[amdxc64.so] (59,177,531 samples, 0.04%)</title><rect x="97.7651%" y="245" width="0.0386%" height="15" fill="rgb(211,67,2)" fg:x="149836505483" fg:w="59177531"/><text x="98.0151%" y="255.50"></text></g><g><title>[amdxc64.so] (101,303,909 samples, 0.07%)</title><rect x="97.7389%" y="261" width="0.0661%" height="15" fill="rgb(235,68,52)" fg:x="149796385123" fg:w="101303909"/><text x="97.9889%" y="271.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="97.8240%" y="229" width="0.0137%" height="15" fill="rgb(246,142,3)" fg:x="149926776293" fg:w="21063189"/><text x="98.0740%" y="239.50"></text></g><g><title>[amdxc64.so] (18,054,162 samples, 0.01%)</title><rect x="97.8259%" y="213" width="0.0118%" height="15" fill="rgb(241,25,7)" fg:x="149929785320" fg:w="18054162"/><text x="98.0759%" y="223.50"></text></g><g><title>[amdxc64.so] (32,096,288 samples, 0.02%)</title><rect x="97.8201%" y="245" width="0.0209%" height="15" fill="rgb(242,119,39)" fg:x="149920758239" fg:w="32096288"/><text x="98.0701%" y="255.50"></text></g><g><title>[amdxc64.so] (25,075,225 samples, 0.02%)</title><rect x="97.8554%" y="229" width="0.0164%" height="15" fill="rgb(241,98,45)" fg:x="149974920725" fg:w="25075225"/><text x="98.1054%" y="239.50"></text></g><g><title>[amdxc64.so] (22,066,198 samples, 0.01%)</title><rect x="97.8574%" y="213" width="0.0144%" height="15" fill="rgb(254,28,30)" fg:x="149977929752" fg:w="22066198"/><text x="98.1074%" y="223.50"></text></g><g><title>[libd3d12core.so] (68,204,612 samples, 0.04%)</title><rect x="97.8430%" y="245" width="0.0445%" height="15" fill="rgb(241,142,54)" fg:x="149955863554" fg:w="68204612"/><text x="98.0930%" y="255.50"></text></g><g><title>[libd3d12core.so] (566,700,085 samples, 0.37%)</title><rect x="97.5210%" y="293" width="0.3698%" height="15" fill="rgb(222,85,15)" fg:x="149462383126" fg:w="566700085"/><text x="97.7710%" y="303.50"></text></g><g><title>[libd3d12core.so] (270,812,430 samples, 0.18%)</title><rect x="97.7140%" y="277" width="0.1767%" height="15" fill="rgb(210,85,47)" fg:x="149758270781" fg:w="270812430"/><text x="97.9640%" y="287.50"></text></g><g><title>[libd3d12core.so] (131,394,179 samples, 0.09%)</title><rect x="97.8050%" y="261" width="0.0857%" height="15" fill="rgb(224,206,25)" fg:x="149897689032" fg:w="131394179"/><text x="98.0550%" y="271.50"></text></g><g><title>[amdxc64.so] (36,108,324 samples, 0.02%)</title><rect x="98.0943%" y="133" width="0.0236%" height="15" fill="rgb(243,201,19)" fg:x="150341019010" fg:w="36108324"/><text x="98.3443%" y="143.50"></text></g><g><title>[amdxc64.so] (28,084,252 samples, 0.02%)</title><rect x="98.0995%" y="117" width="0.0183%" height="15" fill="rgb(236,59,4)" fg:x="150349043082" fg:w="28084252"/><text x="98.3495%" y="127.50"></text></g><g><title>[amdxc64.so] (22,066,198 samples, 0.01%)</title><rect x="98.1034%" y="101" width="0.0144%" height="15" fill="rgb(254,179,45)" fg:x="150355061136" fg:w="22066198"/><text x="98.3534%" y="111.50"></text></g><g><title>[amdxc64.so] (73,219,657 samples, 0.05%)</title><rect x="98.0707%" y="197" width="0.0478%" height="15" fill="rgb(226,14,10)" fg:x="150304910686" fg:w="73219657"/><text x="98.3207%" y="207.50"></text></g><g><title>[amdxc64.so] (64,192,576 samples, 0.04%)</title><rect x="98.0766%" y="181" width="0.0419%" height="15" fill="rgb(244,27,41)" fg:x="150313937767" fg:w="64192576"/><text x="98.3266%" y="191.50"></text></g><g><title>[amdxc64.so] (54,162,486 samples, 0.04%)</title><rect x="98.0831%" y="165" width="0.0353%" height="15" fill="rgb(235,35,32)" fg:x="150323967857" fg:w="54162486"/><text x="98.3331%" y="175.50"></text></g><g><title>[amdxc64.so] (46,138,414 samples, 0.03%)</title><rect x="98.0884%" y="149" width="0.0301%" height="15" fill="rgb(218,68,31)" fg:x="150331991929" fg:w="46138414"/><text x="98.3384%" y="159.50"></text></g><g><title>[amdxc64.so] (120,361,080 samples, 0.08%)</title><rect x="98.0406%" y="245" width="0.0785%" height="15" fill="rgb(207,120,37)" fg:x="150258772272" fg:w="120361080"/><text x="98.2906%" y="255.50"></text></g><g><title>[amdxc64.so] (108,324,972 samples, 0.07%)</title><rect x="98.0485%" y="229" width="0.0707%" height="15" fill="rgb(227,98,0)" fg:x="150270808380" fg:w="108324972"/><text x="98.2985%" y="239.50"></text></g><g><title>[amdxc64.so] (92,276,828 samples, 0.06%)</title><rect x="98.0589%" y="213" width="0.0602%" height="15" fill="rgb(207,7,3)" fg:x="150286856524" fg:w="92276828"/><text x="98.3089%" y="223.50"></text></g><g><title>[amdxc64.so] (179,538,611 samples, 0.12%)</title><rect x="98.0282%" y="261" width="0.1171%" height="15" fill="rgb(206,98,19)" fg:x="150239715101" fg:w="179538611"/><text x="98.2782%" y="271.50"></text></g><g><title>[libc.so.6] (40,120,360 samples, 0.03%)</title><rect x="98.1191%" y="245" width="0.0262%" height="15" fill="rgb(217,5,26)" fg:x="150379133352" fg:w="40120360"/><text x="98.3691%" y="255.50"></text></g><g><title>[amdxc64.so] (43,129,387 samples, 0.03%)</title><rect x="98.1970%" y="229" width="0.0281%" height="15" fill="rgb(235,190,38)" fg:x="150498491423" fg:w="43129387"/><text x="98.4470%" y="239.50"></text></g><g><title>[amdxc64.so] (74,222,666 samples, 0.05%)</title><rect x="98.1774%" y="245" width="0.0484%" height="15" fill="rgb(247,86,24)" fg:x="150468401153" fg:w="74222666"/><text x="98.4274%" y="255.50"></text></g><g><title>[amdxc64.so] (16,048,144 samples, 0.01%)</title><rect x="98.2461%" y="213" width="0.0105%" height="15" fill="rgb(205,101,16)" fg:x="150573717098" fg:w="16048144"/><text x="98.4961%" y="223.50"></text></g><g><title>[amdxc64.so] (27,081,243 samples, 0.02%)</title><rect x="98.2441%" y="229" width="0.0177%" height="15" fill="rgb(246,168,33)" fg:x="150570708071" fg:w="27081243"/><text x="98.4941%" y="239.50"></text></g><g><title>[libd3d12core.so] (25,075,225 samples, 0.02%)</title><rect x="98.2631%" y="229" width="0.0164%" height="15" fill="rgb(231,114,1)" fg:x="150599795332" fg:w="25075225"/><text x="98.5131%" y="239.50"></text></g><g><title>[libd3d12core.so] (92,276,828 samples, 0.06%)</title><rect x="98.2265%" y="245" width="0.0602%" height="15" fill="rgb(207,184,53)" fg:x="150543626828" fg:w="92276828"/><text x="98.4765%" y="255.50"></text></g><g><title>[libd3d12core.so] (459,378,122 samples, 0.30%)</title><rect x="97.9922%" y="277" width="0.2997%" height="15" fill="rgb(224,95,51)" fg:x="150184549606" fg:w="459378122"/><text x="98.2422%" y="287.50"></text></g><g><title>[libd3d12core.so] (224,674,016 samples, 0.15%)</title><rect x="98.1453%" y="261" width="0.1466%" height="15" fill="rgb(212,188,45)" fg:x="150419253712" fg:w="224674016"/><text x="98.3953%" y="271.50"></text></g><g><title>[amdxc64.so] (47,141,423 samples, 0.03%)</title><rect x="98.5262%" y="117" width="0.0308%" height="15" fill="rgb(223,154,38)" fg:x="151003004950" fg:w="47141423"/><text x="98.7762%" y="127.50"></text></g><g><title>[amdxc64.so] (40,120,360 samples, 0.03%)</title><rect x="98.5308%" y="101" width="0.0262%" height="15" fill="rgb(251,22,52)" fg:x="151010026013" fg:w="40120360"/><text x="98.7808%" y="111.50"></text></g><g><title>[amdxc64.so] (30,090,270 samples, 0.02%)</title><rect x="98.5373%" y="85" width="0.0196%" height="15" fill="rgb(229,209,22)" fg:x="151020056103" fg:w="30090270"/><text x="98.7873%" y="95.50"></text></g><g><title>[amdxc64.so] (23,069,207 samples, 0.02%)</title><rect x="98.5419%" y="69" width="0.0151%" height="15" fill="rgb(234,138,34)" fg:x="151027077166" fg:w="23069207"/><text x="98.7919%" y="79.50"></text></g><g><title>[amdxc64.so] (16,048,144 samples, 0.01%)</title><rect x="98.5465%" y="53" width="0.0105%" height="15" fill="rgb(212,95,11)" fg:x="151034098229" fg:w="16048144"/><text x="98.7965%" y="63.50"></text></g><g><title>[amdxc64.so] (160,481,440 samples, 0.10%)</title><rect x="98.4529%" y="197" width="0.1047%" height="15" fill="rgb(240,179,47)" fg:x="150890667942" fg:w="160481440"/><text x="98.7029%" y="207.50"></text></g><g><title>[amdxc64.so] (133,400,197 samples, 0.09%)</title><rect x="98.4706%" y="181" width="0.0870%" height="15" fill="rgb(240,163,11)" fg:x="150917749185" fg:w="133400197"/><text x="98.7206%" y="191.50"></text></g><g><title>[amdxc64.so] (118,355,062 samples, 0.08%)</title><rect x="98.4804%" y="165" width="0.0772%" height="15" fill="rgb(236,37,12)" fg:x="150932794320" fg:w="118355062"/><text x="98.7304%" y="175.50"></text></g><g><title>[amdxc64.so] (90,270,810 samples, 0.06%)</title><rect x="98.4987%" y="149" width="0.0589%" height="15" fill="rgb(232,164,16)" fg:x="150960878572" fg:w="90270810"/><text x="98.7487%" y="159.50"></text></g><g><title>[amdxc64.so] (69,207,621 samples, 0.05%)</title><rect x="98.5125%" y="133" width="0.0452%" height="15" fill="rgb(244,205,15)" fg:x="150981941761" fg:w="69207621"/><text x="98.7625%" y="143.50"></text></g><g><title>[amdxc64.so] (218,655,962 samples, 0.14%)</title><rect x="98.4241%" y="229" width="0.1427%" height="15" fill="rgb(223,117,47)" fg:x="150846535546" fg:w="218655962"/><text x="98.6741%" y="239.50"></text></g><g><title>[amdxc64.so] (196,589,764 samples, 0.13%)</title><rect x="98.4385%" y="213" width="0.1283%" height="15" fill="rgb(244,107,35)" fg:x="150868601744" fg:w="196589764"/><text x="98.6885%" y="223.50"></text></g><g><title>[amdxc64.so] (283,851,547 samples, 0.19%)</title><rect x="98.4110%" y="245" width="0.1852%" height="15" fill="rgb(205,140,8)" fg:x="150826475366" fg:w="283851547"/><text x="98.6610%" y="255.50"></text></g><g><title>[libc.so.6] (45,135,405 samples, 0.03%)</title><rect x="98.5668%" y="229" width="0.0294%" height="15" fill="rgb(228,84,46)" fg:x="151065191508" fg:w="45135405"/><text x="98.8168%" y="239.50"></text></g><g><title>[amdxc64.so] (50,150,450 samples, 0.03%)</title><rect x="98.7611%" y="117" width="0.0327%" height="15" fill="rgb(254,188,9)" fg:x="151363085181" fg:w="50150450"/><text x="99.0111%" y="127.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="98.7801%" y="101" width="0.0137%" height="15" fill="rgb(206,112,54)" fg:x="151392172442" fg:w="21063189"/><text x="99.0301%" y="111.50"></text></g><g><title>[libd3d12core.so] (27,081,243 samples, 0.02%)</title><rect x="98.7939%" y="117" width="0.0177%" height="15" fill="rgb(216,84,49)" fg:x="151413235631" fg:w="27081243"/><text x="99.0439%" y="127.50"></text></g><g><title>[amdxc64.so] (153,460,377 samples, 0.10%)</title><rect x="98.7121%" y="165" width="0.1001%" height="15" fill="rgb(214,194,35)" fg:x="151287859506" fg:w="153460377"/><text x="98.9621%" y="175.50"></text></g><g><title>[amdxc64.so] (125,376,125 samples, 0.08%)</title><rect x="98.7304%" y="149" width="0.0818%" height="15" fill="rgb(249,28,3)" fg:x="151315943758" fg:w="125376125"/><text x="98.9804%" y="159.50"></text></g><g><title>[amdxc64.so] (100,300,900 samples, 0.07%)</title><rect x="98.7467%" y="133" width="0.0654%" height="15" fill="rgb(222,56,52)" fg:x="151341018983" fg:w="100300900"/><text x="98.9967%" y="143.50"></text></g><g><title>[amdxc64.so] (180,541,620 samples, 0.12%)</title><rect x="98.6950%" y="197" width="0.1178%" height="15" fill="rgb(245,217,50)" fg:x="151261781272" fg:w="180541620"/><text x="98.9450%" y="207.50"></text></g><g><title>[amdxc64.so] (168,505,512 samples, 0.11%)</title><rect x="98.7029%" y="181" width="0.1099%" height="15" fill="rgb(213,201,24)" fg:x="151273817380" fg:w="168505512"/><text x="98.9529%" y="191.50"></text></g><g><title>[amdxc64.so] (233,701,097 samples, 0.15%)</title><rect x="98.6623%" y="213" width="0.1525%" height="15" fill="rgb(248,116,28)" fg:x="151211630822" fg:w="233701097"/><text x="98.9123%" y="223.50"></text></g><g><title>[amdxc64.so] (285,857,565 samples, 0.19%)</title><rect x="98.6309%" y="229" width="0.1865%" height="15" fill="rgb(219,72,43)" fg:x="151163486390" fg:w="285857565"/><text x="98.8809%" y="239.50"></text></g><g><title>[amdxc64.so] (16,048,144 samples, 0.01%)</title><rect x="98.8462%" y="197" width="0.0105%" height="15" fill="rgb(209,138,14)" fg:x="151493476351" fg:w="16048144"/><text x="99.0962%" y="207.50"></text></g><g><title>[amdxc64.so] (29,087,261 samples, 0.02%)</title><rect x="98.8410%" y="213" width="0.0190%" height="15" fill="rgb(222,18,33)" fg:x="151485452279" fg:w="29087261"/><text x="99.0910%" y="223.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="98.8698%" y="197" width="0.0137%" height="15" fill="rgb(213,199,7)" fg:x="151529584675" fg:w="21063189"/><text x="99.1198%" y="207.50"></text></g><g><title>[amdxc64.so] (17,051,153 samples, 0.01%)</title><rect x="98.8724%" y="181" width="0.0111%" height="15" fill="rgb(250,110,10)" fg:x="151533596711" fg:w="17051153"/><text x="99.1224%" y="191.50"></text></g><g><title>[libd3d12core.so] (54,162,486 samples, 0.04%)</title><rect x="98.8606%" y="213" width="0.0353%" height="15" fill="rgb(248,123,6)" fg:x="151515542549" fg:w="54162486"/><text x="99.1106%" y="223.50"></text></g><g><title>[libd3d12core.so] (122,367,098 samples, 0.08%)</title><rect x="98.8174%" y="229" width="0.0798%" height="15" fill="rgb(206,91,31)" fg:x="151449343955" fg:w="122367098"/><text x="99.0674%" y="239.50"></text></g><g><title>[libd3d12core.so] (797,392,155 samples, 0.52%)</title><rect x="98.3816%" y="261" width="0.5203%" height="15" fill="rgb(211,154,13)" fg:x="150781339961" fg:w="797392155"/><text x="98.6316%" y="271.50"></text></g><g><title>[libd3d12core.so] (467,402,194 samples, 0.30%)</title><rect x="98.5969%" y="245" width="0.3050%" height="15" fill="rgb(225,148,7)" fg:x="151111329922" fg:w="467402194"/><text x="98.8469%" y="255.50"></text></g><g><title>D3DKMTQueryVideoMemoryInfo (32,096,288 samples, 0.02%)</title><rect x="98.9228%" y="229" width="0.0209%" height="15" fill="rgb(220,160,43)" fg:x="151610828404" fg:w="32096288"/><text x="99.1728%" y="239.50"></text></g><g><title>ioctl (21,063,189 samples, 0.01%)</title><rect x="98.9300%" y="213" width="0.0137%" height="15" fill="rgb(213,52,39)" fg:x="151621861503" fg:w="21063189"/><text x="99.1800%" y="223.50"></text></g><g><title>[libdxcore.so] (65,195,585 samples, 0.04%)</title><rect x="98.9018%" y="261" width="0.0425%" height="15" fill="rgb(243,137,7)" fg:x="151578732116" fg:w="65195585"/><text x="99.1518%" y="271.50"></text></g><g><title>[libdxcore.so] (40,120,360 samples, 0.03%)</title><rect x="98.9182%" y="245" width="0.0262%" height="15" fill="rgb(230,79,13)" fg:x="151603807341" fg:w="40120360"/><text x="99.1682%" y="255.50"></text></g><g><title>[amdxc64.so] (106,318,954 samples, 0.07%)</title><rect x="99.1067%" y="117" width="0.0694%" height="15" fill="rgb(247,105,23)" fg:x="151892673933" fg:w="106318954"/><text x="99.3567%" y="127.50"></text></g><g><title>[amdxc64.so] (58,174,522 samples, 0.04%)</title><rect x="99.1381%" y="101" width="0.0380%" height="15" fill="rgb(223,179,41)" fg:x="151940818365" fg:w="58174522"/><text x="99.3881%" y="111.50"></text></g><g><title>[amdxc64.so] (37,111,333 samples, 0.02%)</title><rect x="99.1518%" y="85" width="0.0242%" height="15" fill="rgb(218,9,34)" fg:x="151961881554" fg:w="37111333"/><text x="99.4018%" y="95.50"></text></g><g><title>[amdxc64.so] (22,066,198 samples, 0.01%)</title><rect x="99.1617%" y="69" width="0.0144%" height="15" fill="rgb(222,106,8)" fg:x="151976926689" fg:w="22066198"/><text x="99.4117%" y="79.50"></text></g><g><title>[amdxc64.so] (169,508,521 samples, 0.11%)</title><rect x="99.0668%" y="213" width="0.1106%" height="15" fill="rgb(211,220,0)" fg:x="151831490384" fg:w="169508521"/><text x="99.3168%" y="223.50"></text></g><g><title>[amdxc64.so] (163,490,467 samples, 0.11%)</title><rect x="99.0707%" y="197" width="0.1067%" height="15" fill="rgb(229,52,16)" fg:x="151837508438" fg:w="163490467"/><text x="99.3207%" y="207.50"></text></g><g><title>[amdxc64.so] (155,466,395 samples, 0.10%)</title><rect x="99.0759%" y="181" width="0.1014%" height="15" fill="rgb(212,155,18)" fg:x="151845532510" fg:w="155466395"/><text x="99.3259%" y="191.50"></text></g><g><title>[amdxc64.so] (143,430,287 samples, 0.09%)</title><rect x="99.0838%" y="165" width="0.0936%" height="15" fill="rgb(242,21,14)" fg:x="151857568618" fg:w="143430287"/><text x="99.3338%" y="175.50"></text></g><g><title>[amdxc64.so] (137,412,233 samples, 0.09%)</title><rect x="99.0877%" y="149" width="0.0897%" height="15" fill="rgb(222,19,48)" fg:x="151863586672" fg:w="137412233"/><text x="99.3377%" y="159.50"></text></g><g><title>[amdxc64.so] (126,379,134 samples, 0.08%)</title><rect x="99.0949%" y="133" width="0.0825%" height="15" fill="rgb(232,45,27)" fg:x="151874619771" fg:w="126379134"/><text x="99.3449%" y="143.50"></text></g><g><title>[libd3d12core.so] (258,776,322 samples, 0.17%)</title><rect x="99.1780%" y="213" width="0.1688%" height="15" fill="rgb(249,103,42)" fg:x="152002001914" fg:w="258776322"/><text x="99.4280%" y="223.50"></text></g><g><title>[libd3d12core.so] (227,683,043 samples, 0.15%)</title><rect x="99.1983%" y="197" width="0.1486%" height="15" fill="rgb(246,81,33)" fg:x="152033095193" fg:w="227683043"/><text x="99.4483%" y="207.50"></text></g><g><title>[libd3d12core.so] (140,421,260 samples, 0.09%)</title><rect x="99.2552%" y="181" width="0.0916%" height="15" fill="rgb(252,33,42)" fg:x="152120356976" fg:w="140421260"/><text x="99.5052%" y="191.50"></text></g><g><title>[libd3d12core.so] (88,264,792 samples, 0.06%)</title><rect x="99.2893%" y="165" width="0.0576%" height="15" fill="rgb(209,212,41)" fg:x="152172513444" fg:w="88264792"/><text x="99.5393%" y="175.50"></text></g><g><title>[libd3d12core.so] (69,207,621 samples, 0.05%)</title><rect x="99.3017%" y="149" width="0.0452%" height="15" fill="rgb(207,154,6)" fg:x="152191570615" fg:w="69207621"/><text x="99.5517%" y="159.50"></text></g><g><title>[libd3d12core.so] (527,582,734 samples, 0.34%)</title><rect x="99.0118%" y="245" width="0.3442%" height="15" fill="rgb(223,64,47)" fg:x="151747237628" fg:w="527582734"/><text x="99.2618%" y="255.50"></text></g><g><title>[libd3d12core.so] (471,414,230 samples, 0.31%)</title><rect x="99.0484%" y="229" width="0.3076%" height="15" fill="rgb(211,161,38)" fg:x="151803406132" fg:w="471414230"/><text x="99.2984%" y="239.50"></text></g><g><title>[libdxcore.so] (37,111,333 samples, 0.02%)</title><rect x="99.3560%" y="245" width="0.0242%" height="15" fill="rgb(219,138,40)" fg:x="152274820362" fg:w="37111333"/><text x="99.6060%" y="255.50"></text></g><g><title>[libdxcore.so] (26,078,234 samples, 0.02%)</title><rect x="99.3632%" y="229" width="0.0170%" height="15" fill="rgb(241,228,46)" fg:x="152285853461" fg:w="26078234"/><text x="99.6132%" y="239.50"></text></g><g><title>D3DKMTQueryVideoMemoryInfo (21,063,189 samples, 0.01%)</title><rect x="99.3665%" y="213" width="0.0137%" height="15" fill="rgb(223,209,38)" fg:x="152290868506" fg:w="21063189"/><text x="99.6165%" y="223.50"></text></g><g><title>ioctl (16,048,144 samples, 0.01%)</title><rect x="99.3698%" y="197" width="0.0105%" height="15" fill="rgb(236,164,45)" fg:x="152295883551" fg:w="16048144"/><text x="99.6198%" y="207.50"></text></g><g><title>[amdxc64.so] (133,400,197 samples, 0.09%)</title><rect x="99.4797%" y="197" width="0.0870%" height="15" fill="rgb(231,15,5)" fg:x="152464389063" fg:w="133400197"/><text x="99.7297%" y="207.50"></text></g><g><title>[amdxc64.so] (126,379,134 samples, 0.08%)</title><rect x="99.4843%" y="181" width="0.0825%" height="15" fill="rgb(252,35,15)" fg:x="152471410126" fg:w="126379134"/><text x="99.7343%" y="191.50"></text></g><g><title>[amdxc64.so] (104,312,936 samples, 0.07%)</title><rect x="99.4987%" y="165" width="0.0681%" height="15" fill="rgb(248,181,18)" fg:x="152493476324" fg:w="104312936"/><text x="99.7487%" y="175.50"></text></g><g><title>[amdxc64.so] (96,288,864 samples, 0.06%)</title><rect x="99.5039%" y="149" width="0.0628%" height="15" fill="rgb(233,39,42)" fg:x="152501500396" fg:w="96288864"/><text x="99.7539%" y="159.50"></text></g><g><title>[amdxc64.so] (86,258,774 samples, 0.06%)</title><rect x="99.5105%" y="133" width="0.0563%" height="15" fill="rgb(238,110,33)" fg:x="152511530486" fg:w="86258774"/><text x="99.7605%" y="143.50"></text></g><g><title>[amdxc64.so] (71,213,639 samples, 0.05%)</title><rect x="99.5203%" y="117" width="0.0465%" height="15" fill="rgb(233,195,10)" fg:x="152526575621" fg:w="71213639"/><text x="99.7703%" y="127.50"></text></g><g><title>[amdxc64.so] (51,153,459 samples, 0.03%)</title><rect x="99.5334%" y="101" width="0.0334%" height="15" fill="rgb(254,105,3)" fg:x="152546635801" fg:w="51153459"/><text x="99.7834%" y="111.50"></text></g><g><title>[amdxc64.so] (24,072,216 samples, 0.02%)</title><rect x="99.5511%" y="85" width="0.0157%" height="15" fill="rgb(221,225,9)" fg:x="152573717044" fg:w="24072216"/><text x="99.8011%" y="95.50"></text></g><g><title>[libd3d12core.so] (178,535,602 samples, 0.12%)</title><rect x="99.4732%" y="229" width="0.1165%" height="15" fill="rgb(224,227,45)" fg:x="152454358973" fg:w="178535602"/><text x="99.7232%" y="239.50"></text></g><g><title>[libd3d12core.so] (173,520,557 samples, 0.11%)</title><rect x="99.4764%" y="213" width="0.1132%" height="15" fill="rgb(229,198,43)" fg:x="152459374018" fg:w="173520557"/><text x="99.7264%" y="223.50"></text></g><g><title>[libd3d12core.so] (35,105,315 samples, 0.02%)</title><rect x="99.5668%" y="197" width="0.0229%" height="15" fill="rgb(206,209,35)" fg:x="152597789260" fg:w="35105315"/><text x="99.8168%" y="207.50"></text></g><g><title>[libd3d12core.so] (25,075,225 samples, 0.02%)</title><rect x="99.5733%" y="181" width="0.0164%" height="15" fill="rgb(245,195,53)" fg:x="152607819350" fg:w="25075225"/><text x="99.8233%" y="191.50"></text></g><g><title>[libdxcore.so] (48,144,432 samples, 0.03%)</title><rect x="99.5897%" y="229" width="0.0314%" height="15" fill="rgb(240,92,26)" fg:x="152632894575" fg:w="48144432"/><text x="99.8397%" y="239.50"></text></g><g><title>[libdxcore.so] (37,111,333 samples, 0.02%)</title><rect x="99.5969%" y="213" width="0.0242%" height="15" fill="rgb(207,40,23)" fg:x="152643927674" fg:w="37111333"/><text x="99.8469%" y="223.50"></text></g><g><title>D3DKMTQueryVideoMemoryInfo (35,105,315 samples, 0.02%)</title><rect x="99.5982%" y="197" width="0.0229%" height="15" fill="rgb(223,111,35)" fg:x="152645933692" fg:w="35105315"/><text x="99.8482%" y="207.50"></text></g><g><title>ioctl (27,081,243 samples, 0.02%)</title><rect x="99.6034%" y="181" width="0.0177%" height="15" fill="rgb(229,147,28)" fg:x="152653957764" fg:w="27081243"/><text x="99.8534%" y="191.50"></text></g><g><title>[swrast_dri.so] (26,078,234 samples, 0.02%)</title><rect x="99.6486%" y="213" width="0.0170%" height="15" fill="rgb(211,29,28)" fg:x="152723165385" fg:w="26078234"/><text x="99.8986%" y="223.50"></text></g><g><title>[swrast_dri.so] (86,258,774 samples, 0.06%)</title><rect x="99.6211%" y="229" width="0.0563%" height="15" fill="rgb(228,72,33)" fg:x="152681039007" fg:w="86258774"/><text x="99.8711%" y="239.50"></text></g><g><title>[swrast_dri.so] (480,441,311 samples, 0.31%)</title><rect x="99.3802%" y="245" width="0.3135%" height="15" fill="rgb(205,214,31)" fg:x="152311931695" fg:w="480441311"/><text x="99.6302%" y="255.50"></text></g><g><title>__libc_free (27,081,243 samples, 0.02%)</title><rect x="99.7022%" y="245" width="0.0177%" height="15" fill="rgb(224,111,15)" fg:x="152805412123" fg:w="27081243"/><text x="99.9522%" y="255.50"></text></g><g><title>[swrast_dri.so] (1,207,622,836 samples, 0.79%)</title><rect x="98.9444%" y="261" width="0.7879%" height="15" fill="rgb(253,21,26)" fg:x="151643927701" fg:w="1207622836"/><text x="99.1944%" y="271.50"></text></g><g><title>clock_gettime (32,096,288 samples, 0.02%)</title><rect x="99.7500%" y="261" width="0.0209%" height="15" fill="rgb(245,139,43)" fg:x="152878631780" fg:w="32096288"/><text x="100.0000%" y="271.50"></text></g><g><title>[swrast_dri.so] (2,291,875,565 samples, 1.50%)</title><rect x="98.2919%" y="277" width="1.4954%" height="15" fill="rgb(252,170,7)" fg:x="150643927728" fg:w="2291875565"/><text x="98.5419%" y="287.50"></text></g><g><title>__libc_calloc (17,051,153 samples, 0.01%)</title><rect x="99.7886%" y="277" width="0.0111%" height="15" fill="rgb(231,118,14)" fg:x="152937809311" fg:w="17051153"/><text x="100.0386%" y="287.50"></text></g><g><title>[swrast_dri.so] (2,939,819,379 samples, 1.92%)</title><rect x="97.8907%" y="293" width="1.9182%" height="15" fill="rgb(238,83,0)" fg:x="150029083211" fg:w="2939819379"/><text x="98.1407%" y="303.50">[..</text></g><g><title>[swrast_dri.so] (13,702,105,949 samples, 8.94%)</title><rect x="90.8751%" y="309" width="8.9403%" height="15" fill="rgb(221,39,39)" fg:x="139276826731" fg:w="13702105949"/><text x="91.1251%" y="319.50">[swrast_dri.s..</text></g><g><title>[swrast_dri.so] (13,817,451,984 samples, 9.02%)</title><rect x="90.8025%" y="341" width="9.0156%" height="15" fill="rgb(222,119,46)" fg:x="139165492732" fg:w="13817451984"/><text x="91.0525%" y="351.50">[swrast_dri.s..</text></g><g><title>[swrast_dri.so] (13,749,247,372 samples, 8.97%)</title><rect x="90.8470%" y="325" width="8.9711%" height="15" fill="rgb(222,165,49)" fg:x="139233697344" fg:w="13749247372"/><text x="91.0970%" y="335.50">[swrast_dri.s..</text></g><g><title>[libGLX_mesa.so.0.0.0] (13,906,719,785 samples, 9.07%)</title><rect x="90.7508%" y="373" width="9.0738%" height="15" fill="rgb(219,113,52)" fg:x="139086255021" fg:w="13906719785"/><text x="91.0008%" y="383.50">[libGLX_mesa...</text></g><g><title>[libGLX_mesa.so.0.0.0] (13,892,677,659 samples, 9.06%)</title><rect x="90.7599%" y="357" width="9.0647%" height="15" fill="rgb(214,7,15)" fg:x="139100297147" fg:w="13892677659"/><text x="91.0099%" y="367.50">[libGLX_mesa...</text></g><g><title>glXMakeCurrent (26,078,234 samples, 0.02%)</title><rect x="99.8246%" y="373" width="0.0170%" height="15" fill="rgb(235,32,4)" fg:x="152992974806" fg:w="26078234"/><text x="100.0746%" y="383.50"></text></g><g><title>[libGLX.so.0.0.0] (44,132,396 samples, 0.03%)</title><rect x="99.8711%" y="341" width="0.0288%" height="15" fill="rgb(238,90,54)" fg:x="153064188445" fg:w="44132396"/><text x="100.1211%" y="351.50"></text></g><g><title>[libGLX.so.0.0.0] (72,216,648 samples, 0.05%)</title><rect x="99.8586%" y="357" width="0.0471%" height="15" fill="rgb(213,208,19)" fg:x="153045131274" fg:w="72216648"/><text x="100.1086%" y="367.50"></text></g><g><title>glXSwapBuffers (140,421,260 samples, 0.09%)</title><rect x="99.8416%" y="373" width="0.0916%" height="15" fill="rgb(233,156,4)" fg:x="153019053040" fg:w="140421260"/><text x="100.0916%" y="383.50"></text></g><g><title>__glDispatchCheckMultithreaded (42,126,378 samples, 0.03%)</title><rect x="99.9058%" y="357" width="0.0275%" height="15" fill="rgb(207,194,5)" fg:x="153117347922" fg:w="42126378"/><text x="100.1558%" y="367.50"></text></g><g><title>miniquad::native::linux_x11::X11Display::process_request (27,081,243 samples, 0.02%)</title><rect x="99.9332%" y="373" width="0.0177%" height="15" fill="rgb(206,111,30)" fg:x="153159474300" fg:w="27081243"/><text x="100.1832%" y="383.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (16,048,144 samples, 0.01%)</title><rect x="99.9516%" y="357" width="0.0105%" height="15" fill="rgb(243,70,54)" fg:x="153187558552" fg:w="16048144"/><text x="100.2016%" y="367.50"></text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (17,051,153 samples, 0.01%)</title><rect x="99.9516%" y="373" width="0.0111%" height="15" fill="rgb(242,28,8)" fg:x="153187558552" fg:w="17051153"/><text x="100.2016%" y="383.50"></text></g><g><title>miniquad::native_display (18,054,162 samples, 0.01%)</title><rect x="99.9692%" y="373" width="0.0118%" height="15" fill="rgb(219,106,18)" fg:x="153214639795" fg:w="18054162"/><text x="100.2192%" y="383.50"></text></g><g><title>macroquad::Window::new (146,275,823,533 samples, 95.44%)</title><rect x="4.5556%" y="421" width="95.4418%" height="15" fill="rgb(244,222,10)" fg:x="6981945649" fg:w="146275823533"/><text x="4.8056%" y="431.50">macroquad::Window::new</text></g><g><title>miniquad::native::linux_x11::run (146,275,823,533 samples, 95.44%)</title><rect x="4.5556%" y="405" width="95.4418%" height="15" fill="rgb(236,179,52)" fg:x="6981945649" fg:w="146275823533"/><text x="4.8056%" y="415.50">miniquad::native::linux_x11::run</text></g><g><title>miniquad::native::linux_x11::glx_main_loop (146,275,823,533 samples, 95.44%)</title><rect x="4.5556%" y="389" width="95.4418%" height="15" fill="rgb(213,23,39)" fg:x="6981945649" fg:w="146275823533"/><text x="4.8056%" y="399.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (25,075,225 samples, 0.02%)</title><rect x="99.9810%" y="373" width="0.0164%" height="15" fill="rgb(238,48,10)" fg:x="153232693957" fg:w="25075225"/><text x="100.2310%" y="383.50"></text></g><g><title>[unknown] (146,679,033,151 samples, 95.70%)</title><rect x="4.2931%" y="437" width="95.7049%" height="15" fill="rgb(251,196,23)" fg:x="6579739040" fg:w="146679033151"/><text x="4.5431%" y="447.50">[unknown]</text></g><g><title>all (153,261,781,218 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(250,152,24)" fg:x="0" fg:w="153261781218"/><text x="0.2500%" y="479.50"></text></g><g><title>physics_engine (146,956,866,644 samples, 95.89%)</title><rect x="4.1138%" y="453" width="95.8862%" height="15" fill="rgb(209,150,17)" fg:x="6304914574" fg:w="146956866644"/><text x="4.3638%" y="463.50">physics_engine</text></g></svg></svg>