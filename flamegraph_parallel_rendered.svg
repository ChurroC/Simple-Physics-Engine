<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="193736203395"><g><title>[amdxc64.so] (25,075,225 samples, 0.01%)</title><rect x="0.5068%" y="229" width="0.0129%" height="15" fill="rgb(227,0,7)" fg:x="981945811" fg:w="25075225"/><text x="0.7568%" y="239.50"></text></g><g><title>[amdxc64.so] (143,430,287 samples, 0.07%)</title><rect x="0.4463%" y="293" width="0.0740%" height="15" fill="rgb(217,0,24)" fg:x="864593758" fg:w="143430287"/><text x="0.6963%" y="303.50"></text></g><g><title>[amdxc64.so] (102,306,918 samples, 0.05%)</title><rect x="0.4675%" y="277" width="0.0528%" height="15" fill="rgb(221,193,54)" fg:x="905717127" fg:w="102306918"/><text x="0.7175%" y="287.50"></text></g><g><title>[amdxc64.so] (69,207,621 samples, 0.04%)</title><rect x="0.4846%" y="261" width="0.0357%" height="15" fill="rgb(248,212,6)" fg:x="938816424" fg:w="69207621"/><text x="0.7346%" y="271.50"></text></g><g><title>[amdxc64.so] (35,105,315 samples, 0.02%)</title><rect x="0.5022%" y="245" width="0.0181%" height="15" fill="rgb(208,68,35)" fg:x="972918730" fg:w="35105315"/><text x="0.7522%" y="255.50"></text></g><g><title>[amdxc64.so] (203,610,827 samples, 0.11%)</title><rect x="0.4188%" y="309" width="0.1051%" height="15" fill="rgb(232,128,0)" fg:x="811434281" fg:w="203610827"/><text x="0.6688%" y="319.50"></text></g><g><title>[libd3d12core.so] (270,812,430 samples, 0.14%)</title><rect x="0.3909%" y="325" width="0.1398%" height="15" fill="rgb(207,160,47)" fg:x="757271795" fg:w="270812430"/><text x="0.6409%" y="335.50"></text></g><g><title>[amdxc64.so] (40,120,360 samples, 0.02%)</title><rect x="0.7895%" y="181" width="0.0207%" height="15" fill="rgb(228,23,34)" fg:x="1529588725" fg:w="40120360"/><text x="1.0395%" y="191.50"></text></g><g><title>[amdxc64.so] (63,189,567 samples, 0.03%)</title><rect x="0.7781%" y="197" width="0.0326%" height="15" fill="rgb(218,30,26)" fg:x="1507522527" fg:w="63189567"/><text x="1.0281%" y="207.50"></text></g><g><title>[amdxc64.so] (129,388,161 samples, 0.07%)</title><rect x="0.7445%" y="261" width="0.0668%" height="15" fill="rgb(220,122,19)" fg:x="1442326942" fg:w="129388161"/><text x="0.9945%" y="271.50"></text></g><g><title>[amdxc64.so] (108,324,972 samples, 0.06%)</title><rect x="0.7554%" y="245" width="0.0559%" height="15" fill="rgb(250,228,42)" fg:x="1463390131" fg:w="108324972"/><text x="1.0054%" y="255.50"></text></g><g><title>[amdxc64.so] (95,285,855 samples, 0.05%)</title><rect x="0.7621%" y="229" width="0.0492%" height="15" fill="rgb(240,193,28)" fg:x="1476429248" fg:w="95285855"/><text x="1.0121%" y="239.50"></text></g><g><title>[amdxc64.so] (87,261,783 samples, 0.05%)</title><rect x="0.7662%" y="213" width="0.0450%" height="15" fill="rgb(216,20,37)" fg:x="1484453320" fg:w="87261783"/><text x="1.0162%" y="223.50"></text></g><g><title>[amdxc64.so] (161,484,449 samples, 0.08%)</title><rect x="0.7284%" y="293" width="0.0834%" height="15" fill="rgb(206,188,39)" fg:x="1411233663" fg:w="161484449"/><text x="0.9784%" y="303.50"></text></g><g><title>[amdxc64.so] (144,433,296 samples, 0.07%)</title><rect x="0.7372%" y="277" width="0.0746%" height="15" fill="rgb(217,207,13)" fg:x="1428284816" fg:w="144433296"/><text x="0.9872%" y="287.50"></text></g><g><title>[amdxc64.so] (154,463,386 samples, 0.08%)</title><rect x="1.3538%" y="133" width="0.0797%" height="15" fill="rgb(231,73,38)" fg:x="2622868535" fg:w="154463386"/><text x="1.6038%" y="143.50"></text></g><g><title>[amdxc64.so] (94,282,846 samples, 0.05%)</title><rect x="1.3849%" y="117" width="0.0487%" height="15" fill="rgb(225,20,46)" fg:x="2683049075" fg:w="94282846"/><text x="1.6349%" y="127.50"></text></g><g><title>[amdxc64.so] (31,093,279 samples, 0.02%)</title><rect x="1.4175%" y="101" width="0.0160%" height="15" fill="rgb(210,31,41)" fg:x="2746238642" fg:w="31093279"/><text x="1.6675%" y="111.50"></text></g><g><title>[amdxc64.so] (247,743,223 samples, 0.13%)</title><rect x="1.3067%" y="149" width="0.1279%" height="15" fill="rgb(221,200,47)" fg:x="2531594716" fg:w="247743223"/><text x="1.5567%" y="159.50"></text></g><g><title>[amdxc64.so] (318,956,862 samples, 0.16%)</title><rect x="1.2731%" y="165" width="0.1646%" height="15" fill="rgb(226,26,5)" fg:x="2466399131" fg:w="318956862"/><text x="1.5231%" y="175.50"></text></g><g><title>[amdxc64.so] (613,841,508 samples, 0.32%)</title><rect x="1.1224%" y="197" width="0.3168%" height="15" fill="rgb(249,33,26)" fg:x="2174523512" fg:w="613841508"/><text x="1.3724%" y="207.50"></text></g><g><title>[amdxc64.so] (456,369,095 samples, 0.24%)</title><rect x="1.2037%" y="181" width="0.2356%" height="15" fill="rgb(235,183,28)" fg:x="2331995925" fg:w="456369095"/><text x="1.4537%" y="191.50"></text></g><g><title>[amdxc64.so] (797,392,155 samples, 0.41%)</title><rect x="1.0292%" y="229" width="0.4116%" height="15" fill="rgb(221,5,38)" fg:x="1993981892" fg:w="797392155"/><text x="1.2792%" y="239.50"></text></g><g><title>[amdxc64.so] (696,088,246 samples, 0.36%)</title><rect x="1.0815%" y="213" width="0.3593%" height="15" fill="rgb(247,18,42)" fg:x="2095285801" fg:w="696088246"/><text x="1.3315%" y="223.50"></text></g><g><title>[amdxc64.so] (1,203,610,800 samples, 0.62%)</title><rect x="0.8237%" y="277" width="0.6213%" height="15" fill="rgb(241,131,45)" fg:x="1595787319" fg:w="1203610800"/><text x="1.0737%" y="287.50"></text></g><g><title>[amdxc64.so] (1,179,538,584 samples, 0.61%)</title><rect x="0.8361%" y="261" width="0.6088%" height="15" fill="rgb(249,31,29)" fg:x="1619859535" fg:w="1179538584"/><text x="1.0861%" y="271.50"></text></g><g><title>[amdxc64.so] (951,855,541 samples, 0.49%)</title><rect x="0.9536%" y="245" width="0.4913%" height="15" fill="rgb(225,111,53)" fg:x="1847542578" fg:w="951855541"/><text x="1.2036%" y="255.50"></text></g><g><title>[libd3d12core.so] (146,439,314 samples, 0.08%)</title><rect x="1.5154%" y="261" width="0.0756%" height="15" fill="rgb(238,160,17)" fg:x="2935807343" fg:w="146439314"/><text x="1.7654%" y="271.50"></text></g><g><title>[libd3d12core.so] (122,367,098 samples, 0.06%)</title><rect x="1.5278%" y="245" width="0.0632%" height="15" fill="rgb(214,148,48)" fg:x="2959879559" fg:w="122367098"/><text x="1.7778%" y="255.50"></text></g><g><title>[libd3d12core.so] (1,702,106,273 samples, 0.88%)</title><rect x="0.7150%" y="309" width="0.8786%" height="15" fill="rgb(232,36,49)" fg:x="1385155429" fg:w="1702106273"/><text x="0.9650%" y="319.50"></text></g><g><title>[libd3d12core.so] (1,514,543,590 samples, 0.78%)</title><rect x="0.8118%" y="293" width="0.7818%" height="15" fill="rgb(209,103,24)" fg:x="1572718112" fg:w="1514543590"/><text x="1.0618%" y="303.50"></text></g><g><title>[libd3d12core.so] (287,863,583 samples, 0.15%)</title><rect x="1.4450%" y="277" width="0.1486%" height="15" fill="rgb(229,88,8)" fg:x="2799398119" fg:w="287863583"/><text x="1.6950%" y="287.50"></text></g><g><title>[amdxc64.so] (201,604,809 samples, 0.10%)</title><rect x="1.9031%" y="261" width="0.1041%" height="15" fill="rgb(213,181,19)" fg:x="3687061084" fg:w="201604809"/><text x="2.1531%" y="271.50"></text></g><g><title>[amdxc64.so] (182,547,638 samples, 0.09%)</title><rect x="1.9130%" y="245" width="0.0942%" height="15" fill="rgb(254,191,54)" fg:x="3706118255" fg:w="182547638"/><text x="2.1630%" y="255.50"></text></g><g><title>[amdxc64.so] (161,484,449 samples, 0.08%)</title><rect x="1.9238%" y="229" width="0.0834%" height="15" fill="rgb(241,83,37)" fg:x="3727181444" fg:w="161484449"/><text x="2.1738%" y="239.50"></text></g><g><title>[amdxc64.so] (144,433,296 samples, 0.07%)</title><rect x="1.9326%" y="213" width="0.0746%" height="15" fill="rgb(233,36,39)" fg:x="3744232597" fg:w="144433296"/><text x="2.1826%" y="223.50"></text></g><g><title>[amdxc64.so] (135,406,215 samples, 0.07%)</title><rect x="1.9373%" y="197" width="0.0699%" height="15" fill="rgb(226,3,54)" fg:x="3753259678" fg:w="135406215"/><text x="2.1873%" y="207.50"></text></g><g><title>[amdxc64.so] (112,337,008 samples, 0.06%)</title><rect x="1.9492%" y="181" width="0.0580%" height="15" fill="rgb(245,192,40)" fg:x="3776328885" fg:w="112337008"/><text x="2.1992%" y="191.50"></text></g><g><title>[amdxc64.so] (65,195,585 samples, 0.03%)</title><rect x="1.9735%" y="165" width="0.0337%" height="15" fill="rgb(238,167,29)" fg:x="3823470308" fg:w="65195585"/><text x="2.2235%" y="175.50"></text></g><g><title>[amdxc64.so] (37,111,333 samples, 0.02%)</title><rect x="1.9880%" y="149" width="0.0192%" height="15" fill="rgb(232,182,51)" fg:x="3851554560" fg:w="37111333"/><text x="2.2380%" y="159.50"></text></g><g><title>[libd3d12core.so] (244,734,196 samples, 0.13%)</title><rect x="1.8933%" y="293" width="0.1263%" height="15" fill="rgb(231,60,39)" fg:x="3668003913" fg:w="244734196"/><text x="2.1433%" y="303.50"></text></g><g><title>[libd3d12core.so] (233,701,097 samples, 0.12%)</title><rect x="1.8990%" y="277" width="0.1206%" height="15" fill="rgb(208,69,12)" fg:x="3679037012" fg:w="233701097"/><text x="2.1490%" y="287.50"></text></g><g><title>[libd3d12core.so] (24,072,216 samples, 0.01%)</title><rect x="2.0072%" y="261" width="0.0124%" height="15" fill="rgb(235,93,37)" fg:x="3888665893" fg:w="24072216"/><text x="2.2572%" y="271.50"></text></g><g><title>[swrast_dri.so] (101,303,909 samples, 0.05%)</title><rect x="2.1258%" y="277" width="0.0523%" height="15" fill="rgb(213,116,39)" fg:x="4118354954" fg:w="101303909"/><text x="2.3758%" y="287.50"></text></g><g><title>[swrast_dri.so] (1,143,430,260 samples, 0.59%)</title><rect x="1.5935%" y="309" width="0.5902%" height="15" fill="rgb(222,207,29)" fg:x="3087261702" fg:w="1143430260"/><text x="1.8435%" y="319.50"></text></g><g><title>[swrast_dri.so] (317,953,853 samples, 0.16%)</title><rect x="2.0196%" y="293" width="0.1641%" height="15" fill="rgb(206,96,30)" fg:x="3912738109" fg:w="317953853"/><text x="2.2696%" y="303.50"></text></g><g><title>[swrast_dri.so] (3,203,610,746 samples, 1.65%)</title><rect x="0.5307%" y="325" width="1.6536%" height="15" fill="rgb(218,138,4)" fg:x="1028084225" fg:w="3203610746"/><text x="0.7807%" y="335.50"></text></g><g><title>[swrast_dri.so] (4,228,685,944 samples, 2.18%)</title><rect x="0.0052%" y="357" width="2.1827%" height="15" fill="rgb(250,191,14)" fg:x="10030090" fg:w="4228685944"/><text x="0.2552%" y="367.50">[..</text></g><g><title>[swrast_dri.so] (3,978,936,703 samples, 2.05%)</title><rect x="0.1341%" y="341" width="2.0538%" height="15" fill="rgb(239,60,40)" fg:x="259779331" fg:w="3978936703"/><text x="0.3841%" y="351.50">[..</text></g><g><title>pthread_cond_wait (20,060,180 samples, 0.01%)</title><rect x="2.1889%" y="357" width="0.0104%" height="15" fill="rgb(206,27,48)" fg:x="4240722052" fg:w="20060180"/><text x="2.4389%" y="367.50"></text></g><g><title>[libc.so.6] (4,262,788,250 samples, 2.20%)</title><rect x="0.0000%" y="437" width="2.2003%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="4262788250"/><text x="0.2500%" y="447.50">[..</text></g><g><title>[libc.so.6] (4,262,788,250 samples, 2.20%)</title><rect x="0.0000%" y="421" width="2.2003%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="4262788250"/><text x="0.2500%" y="431.50">[..</text></g><g><title>[swrast_dri.so] (4,262,788,250 samples, 2.20%)</title><rect x="0.0000%" y="405" width="2.2003%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="4262788250"/><text x="0.2500%" y="415.50">[..</text></g><g><title>[swrast_dri.so] (4,262,788,250 samples, 2.20%)</title><rect x="0.0000%" y="389" width="2.2003%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="4262788250"/><text x="0.2500%" y="399.50">[..</text></g><g><title>[swrast_dri.so] (4,258,776,214 samples, 2.20%)</title><rect x="0.0021%" y="373" width="2.1982%" height="15" fill="rgb(231,145,46)" fg:x="4012036" fg:w="4258776214"/><text x="0.2521%" y="383.50">[..</text></g><g><title>[libc.so.6] (141,424,269 samples, 0.07%)</title><rect x="2.2329%" y="405" width="0.0730%" height="15" fill="rgb(251,118,11)" fg:x="4325977817" fg:w="141424269"/><text x="2.4829%" y="415.50"></text></g><g><title>[swrast_dri.so] (86,258,774 samples, 0.04%)</title><rect x="2.3059%" y="405" width="0.0445%" height="15" fill="rgb(217,147,25)" fg:x="4467402086" fg:w="86258774"/><text x="2.5559%" y="415.50"></text></g><g><title>physics_:gdrv0 (4,554,663,869 samples, 2.35%)</title><rect x="0.0000%" y="453" width="2.3510%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="4554663869"/><text x="0.2500%" y="463.50">p..</text></g><g><title>[unknown] (291,875,619 samples, 0.15%)</title><rect x="2.2003%" y="437" width="0.1507%" height="15" fill="rgb(209,12,38)" fg:x="4262788250" fg:w="291875619"/><text x="2.4503%" y="447.50"></text></g><g><title>[swrast_dri.so] (291,875,619 samples, 0.15%)</title><rect x="2.2003%" y="421" width="0.1507%" height="15" fill="rgb(227,1,9)" fg:x="4262788250" fg:w="291875619"/><text x="2.4503%" y="431.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (80,240,720 samples, 0.04%)</title><rect x="2.3510%" y="437" width="0.0414%" height="15" fill="rgb(248,47,43)" fg:x="4554663869" fg:w="80240720"/><text x="2.6010%" y="447.50"></text></g><g><title>__libc_free (80,240,720 samples, 0.04%)</title><rect x="2.4385%" y="357" width="0.0414%" height="15" fill="rgb(221,10,30)" fg:x="4724172390" fg:w="80240720"/><text x="2.6885%" y="367.50"></text></g><g><title>[libc.so.6] (47,141,423 samples, 0.02%)</title><rect x="2.4555%" y="341" width="0.0243%" height="15" fill="rgb(210,229,1)" fg:x="4757271687" fg:w="47141423"/><text x="2.7055%" y="351.50"></text></g><g><title>malloc (350,050,141 samples, 0.18%)</title><rect x="15.2277%" y="309" width="0.1807%" height="15" fill="rgb(222,148,37)" fg:x="29501503717" fg:w="350050141"/><text x="15.4777%" y="319.50"></text></g><g><title>[libc.so.6] (3,404,212,546 samples, 1.76%)</title><rect x="15.7702%" y="293" width="1.7571%" height="15" fill="rgb(234,67,33)" fg:x="30552657149" fg:w="3404212546"/><text x="16.0202%" y="303.50"></text></g><g><title>[libc.so.6] (2,847,542,551 samples, 1.47%)</title><rect x="16.0576%" y="277" width="1.4698%" height="15" fill="rgb(247,98,35)" fg:x="31109327144" fg:w="2847542551"/><text x="16.3076%" y="287.50"></text></g><g><title>[libc.so.6] (129,388,161 samples, 0.07%)</title><rect x="17.4606%" y="261" width="0.0668%" height="15" fill="rgb(247,138,52)" fg:x="33827481534" fg:w="129388161"/><text x="17.7106%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4,627,883,526 samples, 2.39%)</title><rect x="15.1459%" y="341" width="2.3888%" height="15" fill="rgb(213,79,30)" fg:x="29343028295" fg:w="4627883526"/><text x="15.3959%" y="351.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (4,557,672,896 samples, 2.35%)</title><rect x="15.1821%" y="325" width="2.3525%" height="15" fill="rgb(246,177,23)" fg:x="29413238925" fg:w="4557672896"/><text x="15.4321%" y="335.50">a..</text></g><g><title>realloc (4,119,357,963 samples, 2.13%)</title><rect x="15.4084%" y="309" width="2.1263%" height="15" fill="rgb(230,62,27)" fg:x="29851553858" fg:w="4119357963"/><text x="15.6584%" y="319.50">r..</text></g><g><title>[libc.so.6] (23,069,207 samples, 0.01%)</title><rect x="17.6257%" y="309" width="0.0119%" height="15" fill="rgb(216,154,8)" fg:x="34147441405" fg:w="23069207"/><text x="17.8757%" y="319.50"></text></g><g><title>[libc.so.6] (165,496,485 samples, 0.09%)</title><rect x="17.6775%" y="293" width="0.0854%" height="15" fill="rgb(244,35,45)" fg:x="34247742305" fg:w="165496485"/><text x="17.9275%" y="303.50"></text></g><g><title>[libc.so.6] (58,174,522 samples, 0.03%)</title><rect x="17.7329%" y="277" width="0.0300%" height="15" fill="rgb(251,115,12)" fg:x="34355064268" fg:w="58174522"/><text x="17.9829%" y="287.50"></text></g><g><title>__libc_calloc (245,737,205 samples, 0.13%)</title><rect x="17.6376%" y="309" width="0.1268%" height="15" fill="rgb(240,54,50)" fg:x="34170510612" fg:w="245737205"/><text x="17.8876%" y="319.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (568,706,103 samples, 0.29%)</title><rect x="17.5346%" y="341" width="0.2935%" height="15" fill="rgb(233,84,52)" fg:x="33970911821" fg:w="568706103"/><text x="17.7846%" y="351.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (530,591,761 samples, 0.27%)</title><rect x="17.5543%" y="325" width="0.2739%" height="15" fill="rgb(207,117,47)" fg:x="34009026163" fg:w="530591761"/><text x="17.8043%" y="335.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (111,333,999 samples, 0.06%)</title><rect x="17.7707%" y="309" width="0.0575%" height="15" fill="rgb(249,43,39)" fg:x="34428283925" fg:w="111333999"/><text x="18.0207%" y="319.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (20,060,180 samples, 0.01%)</title><rect x="17.8178%" y="293" width="0.0104%" height="15" fill="rgb(209,38,44)" fg:x="34519557744" fg:w="20060180"/><text x="18.0678%" y="303.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29,837,511,732 samples, 15.40%)</title><rect x="2.4830%" y="357" width="15.4011%" height="15" fill="rgb(236,212,23)" fg:x="4810431164" fg:w="29837511732"/><text x="2.7330%" y="367.50">core::ops::function::FnO..</text></g><g><title>std::sync::mpmc::counter::Sender&lt;C&gt;::release (108,324,972 samples, 0.06%)</title><rect x="17.8282%" y="341" width="0.0559%" height="15" fill="rgb(242,79,21)" fg:x="34539617924" fg:w="108324972"/><text x="18.0782%" y="351.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::disconnect (46,138,414 samples, 0.02%)</title><rect x="17.8603%" y="325" width="0.0238%" height="15" fill="rgb(211,96,35)" fg:x="34601804482" fg:w="46138414"/><text x="18.1103%" y="335.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv (395,185,546 samples, 0.20%)</title><rect x="17.8841%" y="357" width="0.2040%" height="15" fill="rgb(253,215,40)" fg:x="34647942896" fg:w="395185546"/><text x="18.1341%" y="367.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv::{{closure}} (151,454,359 samples, 0.08%)</title><rect x="18.0099%" y="341" width="0.0782%" height="15" fill="rgb(211,81,21)" fg:x="34891674083" fg:w="151454359"/><text x="18.2599%" y="351.50"></text></g><g><title>std::thread::Thread::park (105,315,945 samples, 0.05%)</title><rect x="18.0337%" y="325" width="0.0544%" height="15" fill="rgb(208,190,38)" fg:x="34937812497" fg:w="105315945"/><text x="18.2837%" y="335.50"></text></g><g><title>syscall (37,111,333 samples, 0.02%)</title><rect x="18.0689%" y="309" width="0.0192%" height="15" fill="rgb(235,213,38)" fg:x="35006017109" fg:w="37111333"/><text x="18.3189%" y="319.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1,190,571,683 samples, 0.61%)</title><rect x="18.0881%" y="357" width="0.6145%" height="15" fill="rgb(237,122,38)" fg:x="35043128442" fg:w="1190571683"/><text x="18.3381%" y="367.50"></text></g><g><title>syscall (257,773,313 samples, 0.13%)</title><rect x="18.5695%" y="341" width="0.1331%" height="15" fill="rgb(244,218,35)" fg:x="35975926812" fg:w="257773313"/><text x="18.8195%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (22,066,198 samples, 0.01%)</title><rect x="18.7026%" y="357" width="0.0114%" height="15" fill="rgb(240,68,47)" fg:x="36233700125" fg:w="22066198"/><text x="18.9526%" y="367.50"></text></g><g><title>[libc.so.6] (31,652,958,022 samples, 16.34%)</title><rect x="2.3924%" y="437" width="16.3382%" height="15" fill="rgb(210,16,53)" fg:x="4634904589" fg:w="31652958022"/><text x="2.6424%" y="447.50">[libc.so.6]</text></g><g><title>[libc.so.6] (31,652,958,022 samples, 16.34%)</title><rect x="2.3924%" y="421" width="16.3382%" height="15" fill="rgb(235,124,12)" fg:x="4634904589" fg:w="31652958022"/><text x="2.6424%" y="431.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (31,652,958,022 samples, 16.34%)</title><rect x="2.3924%" y="405" width="16.3382%" height="15" fill="rgb(224,169,11)" fg:x="4634904589" fg:w="31652958022"/><text x="2.6424%" y="415.50">std::sys::pal::unix::thre..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (31,652,958,022 samples, 16.34%)</title><rect x="2.3924%" y="389" width="16.3382%" height="15" fill="rgb(250,166,2)" fg:x="4634904589" fg:w="31652958022"/><text x="2.6424%" y="399.50">core::ops::function::FnOn..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (31,652,958,022 samples, 16.34%)</title><rect x="2.3924%" y="373" width="16.3382%" height="15" fill="rgb(242,216,29)" fg:x="4634904589" fg:w="31652958022"/><text x="2.6424%" y="383.50">std::sys::backtrace::__ru..</text></g><g><title>syscall (32,096,288 samples, 0.02%)</title><rect x="18.7140%" y="357" width="0.0166%" height="15" fill="rgb(230,116,27)" fg:x="36255766323" fg:w="32096288"/><text x="18.9640%" y="367.50"></text></g><g><title>[libglapi.so.0.0.0] (134,403,206 samples, 0.07%)</title><rect x="18.7306%" y="437" width="0.0694%" height="15" fill="rgb(228,99,48)" fg:x="36287862611" fg:w="134403206"/><text x="18.9806%" y="447.50"></text></g><g><title>[libc.so.6] (151,454,359 samples, 0.08%)</title><rect x="18.8382%" y="405" width="0.0782%" height="15" fill="rgb(253,11,6)" fg:x="36496488483" fg:w="151454359"/><text x="19.0882%" y="415.50"></text></g><g><title>[swrast_dri.so] (89,267,801 samples, 0.05%)</title><rect x="18.9164%" y="405" width="0.0461%" height="15" fill="rgb(247,143,39)" fg:x="36647942842" fg:w="89267801"/><text x="19.1664%" y="415.50"></text></g><g><title>[swrast_dri.so] (314,944,826 samples, 0.16%)</title><rect x="18.8010%" y="421" width="0.1626%" height="15" fill="rgb(236,97,10)" fg:x="36424271835" fg:w="314944826"/><text x="19.0510%" y="431.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (42,126,378 samples, 0.02%)</title><rect x="19.7406%" y="293" width="0.0217%" height="15" fill="rgb(233,208,19)" fg:x="38244733170" fg:w="42126378"/><text x="19.9906%" y="303.50"></text></g><g><title>core::fmt::write (83,249,747 samples, 0.04%)</title><rect x="19.7277%" y="309" width="0.0430%" height="15" fill="rgb(216,164,2)" fg:x="38219657945" fg:w="83249747"/><text x="19.9777%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (103,309,927 samples, 0.05%)</title><rect x="19.7189%" y="325" width="0.0533%" height="15" fill="rgb(220,129,5)" fg:x="38202606792" fg:w="103309927"/><text x="19.9689%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (23,069,207 samples, 0.01%)</title><rect x="19.7971%" y="309" width="0.0119%" height="15" fill="rgb(242,17,10)" fg:x="38354061151" fg:w="23069207"/><text x="20.0471%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,060,180 samples, 0.01%)</title><rect x="19.7986%" y="293" width="0.0104%" height="15" fill="rgb(242,107,0)" fg:x="38357070178" fg:w="20060180"/><text x="20.0486%" y="303.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (39,117,351 samples, 0.02%)</title><rect x="19.8090%" y="309" width="0.0202%" height="15" fill="rgb(251,28,31)" fg:x="38377130358" fg:w="39117351"/><text x="20.0590%" y="319.50"></text></g><g><title>macroquad::shapes::draw_arc (178,535,602 samples, 0.09%)</title><rect x="19.7753%" y="325" width="0.0922%" height="15" fill="rgb(233,223,10)" fg:x="38311934773" fg:w="178535602"/><text x="20.0253%" y="335.50"></text></g><g><title>malloc (74,222,666 samples, 0.04%)</title><rect x="19.8292%" y="309" width="0.0383%" height="15" fill="rgb(215,21,27)" fg:x="38416247709" fg:w="74222666"/><text x="20.0792%" y="319.50"></text></g><g><title>[libc.so.6] (66,198,594 samples, 0.03%)</title><rect x="19.8333%" y="293" width="0.0342%" height="15" fill="rgb(232,23,21)" fg:x="38424271781" fg:w="66198594"/><text x="20.0833%" y="303.50"></text></g><g><title>[libc.so.6] (20,060,180 samples, 0.01%)</title><rect x="19.8571%" y="277" width="0.0104%" height="15" fill="rgb(244,5,23)" fg:x="38470410195" fg:w="20060180"/><text x="20.1071%" y="287.50"></text></g><g><title>macroquad::shapes::draw_circle (61,183,549 samples, 0.03%)</title><rect x="19.8675%" y="325" width="0.0316%" height="15" fill="rgb(226,81,46)" fg:x="38490470375" fg:w="61183549"/><text x="20.1175%" y="335.50"></text></g><g><title>[libm.so.6] (4,264,794,268 samples, 2.20%)</title><rect x="25.5096%" y="309" width="2.2013%" height="15" fill="rgb(247,70,30)" fg:x="49421262457" fg:w="4264794268"/><text x="25.7596%" y="319.50">[..</text></g><g><title>__libc_free (2,952,858,496 samples, 1.52%)</title><rect x="27.7109%" y="309" width="1.5242%" height="15" fill="rgb(212,68,19)" fg:x="53686056725" fg:w="2952858496"/><text x="27.9609%" y="319.50"></text></g><g><title>[libc.so.6] (2,300,902,646 samples, 1.19%)</title><rect x="28.0474%" y="293" width="1.1876%" height="15" fill="rgb(240,187,13)" fg:x="54338012575" fg:w="2300902646"/><text x="28.2974%" y="303.50"></text></g><g><title>__rdl_alloc (58,174,522 samples, 0.03%)</title><rect x="29.2351%" y="309" width="0.0300%" height="15" fill="rgb(223,113,26)" fg:x="56638915221" fg:w="58174522"/><text x="29.4851%" y="319.50"></text></g><g><title>__rdl_dealloc (123,370,107 samples, 0.06%)</title><rect x="29.2651%" y="309" width="0.0637%" height="15" fill="rgb(206,192,2)" fg:x="56697089743" fg:w="123370107"/><text x="29.5151%" y="319.50"></text></g><g><title>__rust_alloc (66,198,594 samples, 0.03%)</title><rect x="29.3288%" y="309" width="0.0342%" height="15" fill="rgb(241,108,4)" fg:x="56820459850" fg:w="66198594"/><text x="29.5788%" y="319.50"></text></g><g><title>__rust_dealloc (190,571,710 samples, 0.10%)</title><rect x="29.3629%" y="309" width="0.0984%" height="15" fill="rgb(247,173,49)" fg:x="56886658444" fg:w="190571710"/><text x="29.6129%" y="319.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (6,207,622,701 samples, 3.20%)</title><rect x="29.4613%" y="309" width="3.2042%" height="15" fill="rgb(224,114,35)" fg:x="57077230154" fg:w="6207622701"/><text x="29.7113%" y="319.50">mac..</text></g><g><title>macroquad::shapes::draw_poly (25,047,140,748 samples, 12.93%)</title><rect x="19.9037%" y="325" width="12.9285%" height="15" fill="rgb(245,159,27)" fg:x="38560681005" fg:w="25047140748"/><text x="20.1537%" y="335.50">macroquad::shapes::..</text></g><g><title>malloc (322,968,898 samples, 0.17%)</title><rect x="32.6655%" y="309" width="0.1667%" height="15" fill="rgb(245,172,44)" fg:x="63284852855" fg:w="322968898"/><text x="32.9155%" y="319.50"></text></g><g><title>macroquad::text::Font::contains (53,159,477 samples, 0.03%)</title><rect x="32.8850%" y="293" width="0.0274%" height="15" fill="rgb(236,23,11)" fg:x="63710128671" fg:w="53159477"/><text x="33.1350%" y="303.50"></text></g><g><title>macroquad::text::atlas::Atlas::get (55,165,495 samples, 0.03%)</title><rect x="32.9124%" y="293" width="0.0285%" height="15" fill="rgb(205,117,38)" fg:x="63763288148" fg:w="55165495"/><text x="33.1624%" y="303.50"></text></g><g><title>macroquad::text::atlas::Atlas::texture (20,060,180 samples, 0.01%)</title><rect x="32.9409%" y="293" width="0.0104%" height="15" fill="rgb(237,72,25)" fg:x="63818453643" fg:w="20060180"/><text x="33.1909%" y="303.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (26,078,234 samples, 0.01%)</title><rect x="32.9652%" y="277" width="0.0135%" height="15" fill="rgb(244,70,9)" fg:x="63865595066" fg:w="26078234"/><text x="33.2152%" y="287.50"></text></g><g><title>macroquad::texture::draw_texture_ex (76,228,684 samples, 0.04%)</title><rect x="32.9513%" y="293" width="0.0393%" height="15" fill="rgb(217,125,39)" fg:x="63838513823" fg:w="76228684"/><text x="33.2013%" y="303.50"></text></g><g><title>macroquad::text::draw_text (309,929,781 samples, 0.16%)</title><rect x="32.8322%" y="325" width="0.1600%" height="15" fill="rgb(235,36,10)" fg:x="63607821753" fg:w="309929781"/><text x="33.0822%" y="335.50"></text></g><g><title>macroquad::text::draw_text_ex (303,911,727 samples, 0.16%)</title><rect x="32.8353%" y="309" width="0.1569%" height="15" fill="rgb(251,123,47)" fg:x="63613839807" fg:w="303911727"/><text x="33.0853%" y="319.50"></text></g><g><title>[swrast_dri.so] (93,279,837 samples, 0.05%)</title><rect x="33.0067%" y="293" width="0.0481%" height="15" fill="rgb(221,13,13)" fg:x="63945835786" fg:w="93279837"/><text x="33.2567%" y="303.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::begin_pass (103,309,927 samples, 0.05%)</title><rect x="33.0030%" y="309" width="0.0533%" height="15" fill="rgb(238,131,9)" fg:x="63938814723" fg:w="103309927"/><text x="33.2530%" y="319.50"></text></g><g><title>macroquad::window::clear_background (153,460,377 samples, 0.08%)</title><rect x="33.0010%" y="325" width="0.0792%" height="15" fill="rgb(211,50,8)" fg:x="63934802687" fg:w="153460377"/><text x="33.2510%" y="335.50"></text></g><g><title>[swrast_dri.so] (44,132,396 samples, 0.02%)</title><rect x="33.0574%" y="309" width="0.0228%" height="15" fill="rgb(245,182,24)" fg:x="64044130668" fg:w="44132396"/><text x="33.3074%" y="319.50"></text></g><g><title>[swrast_dri.so] (21,063,189 samples, 0.01%)</title><rect x="33.0693%" y="293" width="0.0109%" height="15" fill="rgb(242,14,37)" fg:x="64067199875" fg:w="21063189"/><text x="33.3193%" y="303.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,405,215,609 samples, 0.73%)</title><rect x="63.5702%" y="309" width="0.7253%" height="15" fill="rgb(246,228,12)" fg:x="123158472101" fg:w="1405215609"/><text x="63.8202%" y="319.50"></text></g><g><title>malloc (457,372,104 samples, 0.24%)</title><rect x="64.0594%" y="293" width="0.2361%" height="15" fill="rgb(213,55,15)" fg:x="124106315606" fg:w="457372104"/><text x="64.3094%" y="303.50"></text></g><g><title>[libc.so.6] (454,363,077 samples, 0.23%)</title><rect x="64.0610%" y="277" width="0.2345%" height="15" fill="rgb(209,9,3)" fg:x="124109324633" fg:w="454363077"/><text x="64.3110%" y="287.50"></text></g><g><title>[libc.so.6] (5,581,745,085 samples, 2.88%)</title><rect x="64.3002%" y="309" width="2.8811%" height="15" fill="rgb(230,59,30)" fg:x="124572714791" fg:w="5581745085"/><text x="64.5502%" y="319.50">[l..</text></g><g><title>[libm.so.6] (1,007,021,036 samples, 0.52%)</title><rect x="67.1813%" y="309" width="0.5198%" height="15" fill="rgb(209,121,21)" fg:x="130154459876" fg:w="1007021036"/><text x="67.4313%" y="319.50"></text></g><g><title>[libc.so.6] (48,144,432 samples, 0.02%)</title><rect x="68.0252%" y="277" width="0.0249%" height="15" fill="rgb(220,109,13)" fg:x="131789364546" fg:w="48144432"/><text x="68.2752%" y="287.50"></text></g><g><title>[libc.so.6] (579,739,202 samples, 0.30%)</title><rect x="67.7585%" y="293" width="0.2992%" height="15" fill="rgb(232,18,1)" fg:x="131272814911" fg:w="579739202"/><text x="68.0085%" y="303.50"></text></g><g><title>__libc_free (693,079,219 samples, 0.36%)</title><rect x="67.7011%" y="309" width="0.3577%" height="15" fill="rgb(215,41,42)" fg:x="131161480912" fg:w="693079219"/><text x="67.9511%" y="319.50"></text></g><g><title>__rdl_alloc (167,502,503 samples, 0.09%)</title><rect x="68.0588%" y="309" width="0.0865%" height="15" fill="rgb(224,123,36)" fg:x="131854560131" fg:w="167502503"/><text x="68.3088%" y="319.50"></text></g><g><title>posix_memalign (163,490,467 samples, 0.08%)</title><rect x="68.0609%" y="293" width="0.0844%" height="15" fill="rgb(240,125,3)" fg:x="131858572167" fg:w="163490467"/><text x="68.3109%" y="303.50"></text></g><g><title>[libc.so.6] (150,451,350 samples, 0.08%)</title><rect x="68.0676%" y="277" width="0.0777%" height="15" fill="rgb(205,98,50)" fg:x="131871611284" fg:w="150451350"/><text x="68.3176%" y="287.50"></text></g><g><title>[libc.so.6] (114,343,026 samples, 0.06%)</title><rect x="68.0863%" y="261" width="0.0590%" height="15" fill="rgb(205,185,37)" fg:x="131907719608" fg:w="114343026"/><text x="68.3363%" y="271.50"></text></g><g><title>[libc.so.6] (104,312,936 samples, 0.05%)</title><rect x="68.0914%" y="245" width="0.0538%" height="15" fill="rgb(238,207,15)" fg:x="131917749698" fg:w="104312936"/><text x="68.3414%" y="255.50"></text></g><g><title>[libc.so.6] (24,072,216 samples, 0.01%)</title><rect x="68.1328%" y="229" width="0.0124%" height="15" fill="rgb(213,199,42)" fg:x="131997990418" fg:w="24072216"/><text x="68.3828%" y="239.50"></text></g><g><title>__rdl_alloc (148,445,332 samples, 0.08%)</title><rect x="69.0326%" y="277" width="0.0766%" height="15" fill="rgb(235,201,11)" fg:x="133741220060" fg:w="148445332"/><text x="69.2826%" y="287.50"></text></g><g><title>__rust_alloc (157,472,413 samples, 0.08%)</title><rect x="69.1103%" y="277" width="0.0813%" height="15" fill="rgb(207,46,11)" fg:x="133891671410" fg:w="157472413"/><text x="69.3603%" y="287.50"></text></g><g><title>malloc (9,376,128,132 samples, 4.84%)</title><rect x="69.1916%" y="277" width="4.8396%" height="15" fill="rgb(241,35,35)" fg:x="134049143823" fg:w="9376128132"/><text x="69.4416%" y="287.50">malloc</text></g><g><title>[libc.so.6] (2,931,795,307 samples, 1.51%)</title><rect x="72.5179%" y="261" width="1.5133%" height="15" fill="rgb(243,32,47)" fg:x="140493476648" fg:w="2931795307"/><text x="72.7679%" y="271.50"></text></g><g><title>[libc.so.6] (522,567,689 samples, 0.27%)</title><rect x="73.7615%" y="245" width="0.2697%" height="15" fill="rgb(247,202,23)" fg:x="142902704266" fg:w="522567689"/><text x="74.0115%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11,419,257,465 samples, 5.89%)</title><rect x="68.1499%" y="309" width="5.8942%" height="15" fill="rgb(219,102,11)" fg:x="132031089715" fg:w="11419257465"/><text x="68.3999%" y="319.50">alloc::..</text></g><g><title>alloc::raw_vec::finish_grow (10,160,481,170 samples, 5.24%)</title><rect x="68.7997%" y="293" width="5.2445%" height="15" fill="rgb(243,110,44)" fg:x="133289866010" fg:w="10160481170"/><text x="69.0497%" y="303.50">alloc:..</text></g><g><title>realloc (25,075,225 samples, 0.01%)</title><rect x="74.0312%" y="277" width="0.0129%" height="15" fill="rgb(222,74,54)" fg:x="143425271955" fg:w="25075225"/><text x="74.2812%" y="287.50"></text></g><g><title>malloc (86,258,774 samples, 0.04%)</title><rect x="74.0633%" y="277" width="0.0445%" height="15" fill="rgb(216,99,12)" fg:x="143487458513" fg:w="86258774"/><text x="74.3133%" y="287.50"></text></g><g><title>[libc.so.6] (67,201,603 samples, 0.03%)</title><rect x="74.0732%" y="261" width="0.0347%" height="15" fill="rgb(226,22,26)" fg:x="143506515684" fg:w="67201603"/><text x="74.3232%" y="271.50"></text></g><g><title>[libc.so.6] (48,144,432 samples, 0.02%)</title><rect x="74.0830%" y="245" width="0.0249%" height="15" fill="rgb(217,163,10)" fg:x="143525572855" fg:w="48144432"/><text x="74.3330%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (639,919,742 samples, 0.33%)</title><rect x="74.0442%" y="309" width="0.3303%" height="15" fill="rgb(213,25,53)" fg:x="143450347180" fg:w="639919742"/><text x="74.2942%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (630,892,661 samples, 0.33%)</title><rect x="74.0488%" y="293" width="0.3256%" height="15" fill="rgb(252,105,26)" fg:x="143459374261" fg:w="630892661"/><text x="74.2988%" y="303.50"></text></g><g><title>realloc (516,549,635 samples, 0.27%)</title><rect x="74.1078%" y="277" width="0.2666%" height="15" fill="rgb(220,39,43)" fg:x="143573717287" fg:w="516549635"/><text x="74.3578%" y="287.50"></text></g><g><title>[libc.so.6] (461,384,140 samples, 0.24%)</title><rect x="74.1363%" y="261" width="0.2382%" height="15" fill="rgb(229,68,48)" fg:x="143628882782" fg:w="461384140"/><text x="74.3863%" y="271.50"></text></g><g><title>[libc.so.6] (415,245,726 samples, 0.21%)</title><rect x="74.1601%" y="245" width="0.2143%" height="15" fill="rgb(252,8,32)" fg:x="143675021196" fg:w="415245726"/><text x="74.4101%" y="255.50"></text></g><g><title>[libc.so.6] (77,231,693 samples, 0.04%)</title><rect x="74.3346%" y="229" width="0.0399%" height="15" fill="rgb(223,20,43)" fg:x="144013035229" fg:w="77231693"/><text x="74.5846%" y="239.50"></text></g><g><title>__libc_free (14,434,302,519 samples, 7.45%)</title><rect x="74.6100%" y="293" width="7.4505%" height="15" fill="rgb(229,81,49)" fg:x="144546636017" fg:w="14434302519"/><text x="74.8600%" y="303.50">__libc_free</text></g><g><title>[libc.so.6] (13,880,641,551 samples, 7.16%)</title><rect x="74.8958%" y="277" width="7.1647%" height="15" fill="rgb(236,28,36)" fg:x="145100296985" fg:w="13880641551"/><text x="75.1458%" y="287.50">[libc.so.6]</text></g><g><title>[libc.so.6] (5,912,738,055 samples, 3.05%)</title><rect x="79.0086%" y="261" width="3.0520%" height="15" fill="rgb(249,185,26)" fg:x="153068200481" fg:w="5912738055"/><text x="79.2586%" y="271.50">[li..</text></g><g><title>[libc.so.6] (1,775,325,930 samples, 0.92%)</title><rect x="81.1442%" y="245" width="0.9164%" height="15" fill="rgb(249,174,33)" fg:x="157205612606" fg:w="1775325930"/><text x="81.3942%" y="255.50"></text></g><g><title>__rdl_dealloc (31,093,279 samples, 0.02%)</title><rect x="82.0605%" y="293" width="0.0160%" height="15" fill="rgb(233,201,37)" fg:x="158980938536" fg:w="31093279"/><text x="82.3105%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15,048,144,027 samples, 7.77%)</title><rect x="74.3745%" y="309" width="7.7673%" height="15" fill="rgb(221,78,26)" fg:x="144090266922" fg:w="15048144027"/><text x="74.6245%" y="319.50">alloc::sync..</text></g><g><title>__rust_dealloc (126,379,134 samples, 0.07%)</title><rect x="82.0766%" y="293" width="0.0652%" height="15" fill="rgb(250,127,30)" fg:x="159012031815" fg:w="126379134"/><text x="82.3266%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpmc::waker::Waker&gt; (22,066,198 samples, 0.01%)</title><rect x="82.1418%" y="309" width="0.0114%" height="15" fill="rgb(230,49,44)" fg:x="159138410949" fg:w="22066198"/><text x="82.3918%" y="319.50"></text></g><g><title>malloc (65,195,585 samples, 0.03%)</title><rect x="82.1532%" y="309" width="0.0337%" height="15" fill="rgb(229,67,23)" fg:x="159160477147" fg:w="65195585"/><text x="82.4032%" y="319.50"></text></g><g><title>[libc.so.6] (34,102,306 samples, 0.02%)</title><rect x="82.1692%" y="293" width="0.0176%" height="15" fill="rgb(249,83,47)" fg:x="159191570426" fg:w="34102306"/><text x="82.4192%" y="303.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::register (64,192,576 samples, 0.03%)</title><rect x="82.3820%" y="261" width="0.0331%" height="15" fill="rgb(215,43,3)" fg:x="159603807125" fg:w="64192576"/><text x="82.6320%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (48,144,432 samples, 0.02%)</title><rect x="82.3903%" y="245" width="0.0249%" height="15" fill="rgb(238,154,13)" fg:x="159619855269" fg:w="48144432"/><text x="82.6403%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,060,180 samples, 0.01%)</title><rect x="82.4048%" y="229" width="0.0104%" height="15" fill="rgb(219,56,2)" fg:x="159647939521" fg:w="20060180"/><text x="82.6548%" y="239.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (662,988,949 samples, 0.34%)</title><rect x="82.1868%" y="309" width="0.3422%" height="15" fill="rgb(233,0,4)" fg:x="159225672732" fg:w="662988949"/><text x="82.4368%" y="319.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv (625,877,616 samples, 0.32%)</title><rect x="82.2060%" y="293" width="0.3231%" height="15" fill="rgb(235,30,7)" fg:x="159262784065" fg:w="625877616"/><text x="82.4560%" y="303.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv::{{closure}} (321,965,889 samples, 0.17%)</title><rect x="82.3629%" y="277" width="0.1662%" height="15" fill="rgb(250,79,13)" fg:x="159566695792" fg:w="321965889"/><text x="82.6129%" y="287.50"></text></g><g><title>std::thread::Thread::park (219,658,971 samples, 0.11%)</title><rect x="82.4157%" y="261" width="0.1134%" height="15" fill="rgb(211,146,34)" fg:x="159669002710" fg:w="219658971"/><text x="82.6657%" y="271.50"></text></g><g><title>syscall (103,309,927 samples, 0.05%)</title><rect x="82.4757%" y="245" width="0.0533%" height="15" fill="rgb(228,22,38)" fg:x="159785351754" fg:w="103309927"/><text x="82.7257%" y="255.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (170,511,530 samples, 0.09%)</title><rect x="82.5291%" y="309" width="0.0880%" height="15" fill="rgb(235,168,5)" fg:x="159888661681" fg:w="170511530"/><text x="82.7791%" y="319.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (157,472,413 samples, 0.08%)</title><rect x="82.5358%" y="293" width="0.0813%" height="15" fill="rgb(221,155,16)" fg:x="159901700798" fg:w="157472413"/><text x="82.7858%" y="303.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (92,276,828 samples, 0.05%)</title><rect x="82.5694%" y="277" width="0.0476%" height="15" fill="rgb(215,215,53)" fg:x="159966896383" fg:w="92276828"/><text x="82.8194%" y="287.50"></text></g><g><title>physics_engine::solver::Solver::update (95,978,934,219 samples, 49.54%)</title><rect x="33.0807%" y="325" width="49.5410%" height="15" fill="rgb(223,4,10)" fg:x="64089266073" fg:w="95978934219"/><text x="33.3307%" y="335.50">physics_engine::solver::Solver::update</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (36,108,324 samples, 0.02%)</title><rect x="82.6233%" y="309" width="0.0186%" height="15" fill="rgb(234,103,6)" fg:x="160071209319" fg:w="36108324"/><text x="82.8733%" y="319.50"></text></g><g><title>core::fmt::write (31,093,279 samples, 0.02%)</title><rect x="82.6259%" y="293" width="0.0160%" height="15" fill="rgb(227,97,0)" fg:x="160076224364" fg:w="31093279"/><text x="82.8759%" y="303.50"></text></g><g><title>std::io::stdio::_print (42,126,378 samples, 0.02%)</title><rect x="82.6217%" y="325" width="0.0217%" height="15" fill="rgb(234,150,53)" fg:x="160068200292" fg:w="42126378"/><text x="82.8717%" y="335.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::{{closure}} (123,283,848,226 samples, 63.63%)</title><rect x="19.0174%" y="357" width="63.6349%" height="15" fill="rgb(228,201,54)" fg:x="36843529597" fg:w="123283848226"/><text x="19.2674%" y="367.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::{{closure}}</text></g><g><title>physics_engine::amain::{{closure}} (123,260,779,019 samples, 63.62%)</title><rect x="19.0293%" y="341" width="63.6230%" height="15" fill="rgb(222,22,37)" fg:x="36866598804" fg:w="123260779019"/><text x="19.2793%" y="351.50">physics_engine::amain::{{closure}}</text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::clear (20,060,180 samples, 0.01%)</title><rect x="82.6637%" y="357" width="0.0104%" height="15" fill="rgb(237,53,32)" fg:x="160149444021" fg:w="20060180"/><text x="82.9137%" y="367.50"></text></g><g><title>[amdxc64.so] (69,207,621 samples, 0.04%)</title><rect x="82.9148%" y="165" width="0.0357%" height="15" fill="rgb(233,25,53)" fg:x="160635903386" fg:w="69207621"/><text x="83.1648%" y="175.50"></text></g><g><title>[amdxc64.so] (63,189,567 samples, 0.03%)</title><rect x="82.9179%" y="149" width="0.0326%" height="15" fill="rgb(210,40,34)" fg:x="160641921440" fg:w="63189567"/><text x="83.1679%" y="159.50"></text></g><g><title>[amdxc64.so] (48,144,432 samples, 0.02%)</title><rect x="82.9256%" y="133" width="0.0249%" height="15" fill="rgb(241,220,44)" fg:x="160656966575" fg:w="48144432"/><text x="83.1756%" y="143.50"></text></g><g><title>[amdxc64.so] (25,075,225 samples, 0.01%)</title><rect x="82.9375%" y="117" width="0.0129%" height="15" fill="rgb(235,28,35)" fg:x="160680035782" fg:w="25075225"/><text x="83.1875%" y="127.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="82.9396%" y="101" width="0.0109%" height="15" fill="rgb(210,56,17)" fg:x="160684047818" fg:w="21063189"/><text x="83.1896%" y="111.50"></text></g><g><title>[amdxc64.so] (270,812,430 samples, 0.14%)</title><rect x="82.8117%" y="277" width="0.1398%" height="15" fill="rgb(224,130,29)" fg:x="160436304595" fg:w="270812430"/><text x="83.0617%" y="287.50"></text></g><g><title>[amdxc64.so] (215,646,935 samples, 0.11%)</title><rect x="82.8402%" y="261" width="0.1113%" height="15" fill="rgb(235,212,8)" fg:x="160491470090" fg:w="215646935"/><text x="83.0902%" y="271.50"></text></g><g><title>[amdxc64.so] (208,625,872 samples, 0.11%)</title><rect x="82.8438%" y="245" width="0.1077%" height="15" fill="rgb(223,33,50)" fg:x="160498491153" fg:w="208625872"/><text x="83.0938%" y="255.50"></text></g><g><title>[amdxc64.so] (167,502,503 samples, 0.09%)</title><rect x="82.8651%" y="229" width="0.0865%" height="15" fill="rgb(219,149,13)" fg:x="160539614522" fg:w="167502503"/><text x="83.1151%" y="239.50"></text></g><g><title>[amdxc64.so] (142,427,278 samples, 0.07%)</title><rect x="82.8780%" y="213" width="0.0735%" height="15" fill="rgb(250,156,29)" fg:x="160564689747" fg:w="142427278"/><text x="83.1280%" y="223.50"></text></g><g><title>[amdxc64.so] (122,367,098 samples, 0.06%)</title><rect x="82.8884%" y="197" width="0.0632%" height="15" fill="rgb(216,193,19)" fg:x="160584749927" fg:w="122367098"/><text x="83.1384%" y="207.50"></text></g><g><title>[amdxc64.so] (99,297,891 samples, 0.05%)</title><rect x="82.9003%" y="181" width="0.0513%" height="15" fill="rgb(216,135,14)" fg:x="160607819134" fg:w="99297891"/><text x="83.1503%" y="191.50"></text></g><g><title>[amdxc64.so] (365,095,276 samples, 0.19%)</title><rect x="82.7931%" y="293" width="0.1884%" height="15" fill="rgb(241,47,5)" fg:x="160400196271" fg:w="365095276"/><text x="83.0431%" y="303.50"></text></g><g><title>[libc.so.6] (58,174,522 samples, 0.03%)</title><rect x="82.9515%" y="277" width="0.0300%" height="15" fill="rgb(233,42,35)" fg:x="160707117025" fg:w="58174522"/><text x="83.2015%" y="287.50"></text></g><g><title>[amdxc64.so] (62,186,558 samples, 0.03%)</title><rect x="83.1721%" y="165" width="0.0321%" height="15" fill="rgb(231,13,6)" fg:x="161134398859" fg:w="62186558"/><text x="83.4221%" y="175.50"></text></g><g><title>[libd3d12core.so] (48,144,432 samples, 0.02%)</title><rect x="83.2042%" y="165" width="0.0249%" height="15" fill="rgb(207,181,40)" fg:x="161196585417" fg:w="48144432"/><text x="83.4542%" y="175.50"></text></g><g><title>[amdxc64.so] (242,728,178 samples, 0.13%)</title><rect x="83.1079%" y="213" width="0.1253%" height="15" fill="rgb(254,173,49)" fg:x="161010025743" fg:w="242728178"/><text x="83.3579%" y="223.50"></text></g><g><title>[amdxc64.so] (189,568,701 samples, 0.10%)</title><rect x="83.1353%" y="197" width="0.0978%" height="15" fill="rgb(221,1,38)" fg:x="161063185220" fg:w="189568701"/><text x="83.3853%" y="207.50"></text></g><g><title>[amdxc64.so] (153,460,377 samples, 0.08%)</title><rect x="83.1539%" y="181" width="0.0792%" height="15" fill="rgb(206,124,46)" fg:x="161099293544" fg:w="153460377"/><text x="83.4039%" y="191.50"></text></g><g><title>[amdxc64.so] (265,797,385 samples, 0.14%)</title><rect x="83.0970%" y="229" width="0.1372%" height="15" fill="rgb(249,21,11)" fg:x="160988962554" fg:w="265797385"/><text x="83.3470%" y="239.50"></text></g><g><title>[amdxc64.so] (291,875,619 samples, 0.15%)</title><rect x="83.0841%" y="245" width="0.1507%" height="15" fill="rgb(222,201,40)" fg:x="160963887329" fg:w="291875619"/><text x="83.3341%" y="255.50"></text></g><g><title>[amdxc64.so] (340,020,051 samples, 0.18%)</title><rect x="83.0602%" y="261" width="0.1755%" height="15" fill="rgb(235,61,29)" fg:x="160917748915" fg:w="340020051"/><text x="83.3102%" y="271.50"></text></g><g><title>[amdxc64.so] (408,224,663 samples, 0.21%)</title><rect x="83.0271%" y="277" width="0.2107%" height="15" fill="rgb(219,207,3)" fg:x="160853556339" fg:w="408224663"/><text x="83.2771%" y="287.50"></text></g><g><title>[amdxc64.so] (28,084,252 samples, 0.01%)</title><rect x="83.2528%" y="261" width="0.0145%" height="15" fill="rgb(222,56,46)" fg:x="161290868263" fg:w="28084252"/><text x="83.5028%" y="271.50"></text></g><g><title>[amdxc64.so] (27,081,243 samples, 0.01%)</title><rect x="83.2803%" y="245" width="0.0140%" height="15" fill="rgb(239,76,54)" fg:x="161344027740" fg:w="27081243"/><text x="83.5303%" y="255.50"></text></g><g><title>[amdxc64.so] (23,069,207 samples, 0.01%)</title><rect x="83.2823%" y="229" width="0.0119%" height="15" fill="rgb(231,124,27)" fg:x="161348039776" fg:w="23069207"/><text x="83.5323%" y="239.50"></text></g><g><title>[libd3d12core.so] (80,240,720 samples, 0.04%)</title><rect x="83.2684%" y="261" width="0.0414%" height="15" fill="rgb(249,195,6)" fg:x="161320958533" fg:w="80240720"/><text x="83.5184%" y="271.50"></text></g><g><title>[libd3d12core.so] (649,949,832 samples, 0.34%)</title><rect x="82.9815%" y="293" width="0.3355%" height="15" fill="rgb(237,174,47)" fg:x="160765291547" fg:w="649949832"/><text x="83.2315%" y="303.50"></text></g><g><title>[libd3d12core.so] (153,460,377 samples, 0.08%)</title><rect x="83.2378%" y="277" width="0.0792%" height="15" fill="rgb(206,201,31)" fg:x="161261781002" fg:w="153460377"/><text x="83.4878%" y="287.50"></text></g><g><title>[libd3d12core.so] (1,056,168,477 samples, 0.55%)</title><rect x="82.7729%" y="309" width="0.5452%" height="15" fill="rgb(231,57,52)" fg:x="160361078920" fg:w="1056168477"/><text x="83.0229%" y="319.50"></text></g><g><title>[amdxc64.so] (64,192,576 samples, 0.03%)</title><rect x="83.5930%" y="149" width="0.0331%" height="15" fill="rgb(248,177,22)" fg:x="161949845176" fg:w="64192576"/><text x="83.8430%" y="159.50"></text></g><g><title>[amdxc64.so] (54,162,486 samples, 0.03%)</title><rect x="83.5981%" y="133" width="0.0280%" height="15" fill="rgb(215,211,37)" fg:x="161959875266" fg:w="54162486"/><text x="83.8481%" y="143.50"></text></g><g><title>[amdxc64.so] (39,117,351 samples, 0.02%)</title><rect x="83.6059%" y="117" width="0.0202%" height="15" fill="rgb(241,128,51)" fg:x="161974920401" fg:w="39117351"/><text x="83.8559%" y="127.50"></text></g><g><title>[amdxc64.so] (27,081,243 samples, 0.01%)</title><rect x="83.6121%" y="101" width="0.0140%" height="15" fill="rgb(227,165,31)" fg:x="161986956509" fg:w="27081243"/><text x="83.8621%" y="111.50"></text></g><g><title>[amdxc64.so] (184,553,656 samples, 0.10%)</title><rect x="83.5314%" y="261" width="0.0953%" height="15" fill="rgb(228,167,24)" fg:x="161830487105" fg:w="184553656"/><text x="83.7814%" y="271.50"></text></g><g><title>[amdxc64.so] (163,490,467 samples, 0.08%)</title><rect x="83.5422%" y="245" width="0.0844%" height="15" fill="rgb(228,143,12)" fg:x="161851550294" fg:w="163490467"/><text x="83.7922%" y="255.50"></text></g><g><title>[amdxc64.so] (151,454,359 samples, 0.08%)</title><rect x="83.5484%" y="229" width="0.0782%" height="15" fill="rgb(249,149,8)" fg:x="161863586402" fg:w="151454359"/><text x="83.7984%" y="239.50"></text></g><g><title>[amdxc64.so] (129,388,161 samples, 0.07%)</title><rect x="83.5598%" y="213" width="0.0668%" height="15" fill="rgb(243,35,44)" fg:x="161885652600" fg:w="129388161"/><text x="83.8098%" y="223.50"></text></g><g><title>[amdxc64.so] (112,337,008 samples, 0.06%)</title><rect x="83.5686%" y="197" width="0.0580%" height="15" fill="rgb(246,89,9)" fg:x="161902703753" fg:w="112337008"/><text x="83.8186%" y="207.50"></text></g><g><title>[amdxc64.so] (97,291,873 samples, 0.05%)</title><rect x="83.5764%" y="181" width="0.0502%" height="15" fill="rgb(233,213,13)" fg:x="161917748888" fg:w="97291873"/><text x="83.8264%" y="191.50"></text></g><g><title>[amdxc64.so] (87,261,783 samples, 0.05%)</title><rect x="83.5816%" y="165" width="0.0450%" height="15" fill="rgb(233,141,41)" fg:x="161927778978" fg:w="87261783"/><text x="83.8316%" y="175.50"></text></g><g><title>[amdxc64.so] (248,746,232 samples, 0.13%)</title><rect x="83.5251%" y="277" width="0.1284%" height="15" fill="rgb(239,167,4)" fg:x="161818450997" fg:w="248746232"/><text x="83.7751%" y="287.50"></text></g><g><title>[libc.so.6] (52,156,468 samples, 0.03%)</title><rect x="83.6266%" y="261" width="0.0269%" height="15" fill="rgb(209,217,16)" fg:x="162015040761" fg:w="52156468"/><text x="83.8766%" y="271.50"></text></g><g><title>[amdxc64.so] (31,093,279 samples, 0.02%)</title><rect x="83.6965%" y="245" width="0.0160%" height="15" fill="rgb(219,88,35)" fg:x="162150446976" fg:w="31093279"/><text x="83.9465%" y="255.50"></text></g><g><title>[amdxc64.so] (63,189,567 samples, 0.03%)</title><rect x="83.6815%" y="261" width="0.0326%" height="15" fill="rgb(220,193,23)" fg:x="162121359715" fg:w="63189567"/><text x="83.9315%" y="271.50"></text></g><g><title>[amdxc64.so] (24,072,216 samples, 0.01%)</title><rect x="83.7322%" y="245" width="0.0124%" height="15" fill="rgb(230,90,52)" fg:x="162219654597" fg:w="24072216"/><text x="83.9822%" y="255.50"></text></g><g><title>[amdxc64.so] (23,069,207 samples, 0.01%)</title><rect x="83.7524%" y="229" width="0.0119%" height="15" fill="rgb(252,106,19)" fg:x="162258771948" fg:w="23069207"/><text x="84.0024%" y="239.50"></text></g><g><title>[amdxc64.so] (22,066,198 samples, 0.01%)</title><rect x="83.7529%" y="213" width="0.0114%" height="15" fill="rgb(206,74,20)" fg:x="162259774957" fg:w="22066198"/><text x="84.0029%" y="223.50"></text></g><g><title>[libd3d12core.so] (50,150,450 samples, 0.03%)</title><rect x="83.7457%" y="245" width="0.0259%" height="15" fill="rgb(230,138,44)" fg:x="162245732831" fg:w="50150450"/><text x="83.9957%" y="255.50"></text></g><g><title>[libd3d12core.so] (118,355,062 samples, 0.06%)</title><rect x="83.7146%" y="261" width="0.0611%" height="15" fill="rgb(235,182,43)" fg:x="162185552291" fg:w="118355062"/><text x="83.9646%" y="271.50"></text></g><g><title>[libd3d12core.so] (545,636,896 samples, 0.28%)</title><rect x="83.4972%" y="293" width="0.2816%" height="15" fill="rgb(242,16,51)" fg:x="161764288511" fg:w="545636896"/><text x="83.7472%" y="303.50"></text></g><g><title>[libd3d12core.so] (242,728,178 samples, 0.13%)</title><rect x="83.6535%" y="277" width="0.1253%" height="15" fill="rgb(248,9,4)" fg:x="162067197229" fg:w="242728178"/><text x="83.9035%" y="287.50"></text></g><g><title>[libd3d12core.so] (25,075,225 samples, 0.01%)</title><rect x="83.9585%" y="277" width="0.0129%" height="15" fill="rgb(210,31,22)" fg:x="162657969530" fg:w="25075225"/><text x="84.2085%" y="287.50"></text></g><g><title>D3DKMTQueryVideoMemoryInfo (32,096,288 samples, 0.02%)</title><rect x="83.9916%" y="245" width="0.0166%" height="15" fill="rgb(239,54,39)" fg:x="162722162106" fg:w="32096288"/><text x="84.2416%" y="255.50"></text></g><g><title>[libdxcore.so] (72,216,648 samples, 0.04%)</title><rect x="83.9714%" y="277" width="0.0373%" height="15" fill="rgb(230,99,41)" fg:x="162683044755" fg:w="72216648"/><text x="84.2214%" y="287.50"></text></g><g><title>[libdxcore.so] (44,132,396 samples, 0.02%)</title><rect x="83.9859%" y="261" width="0.0228%" height="15" fill="rgb(253,106,12)" fg:x="162711129007" fg:w="44132396"/><text x="84.2359%" y="271.50"></text></g><g><title>[libxcb.so.1.1.0] (39,117,351 samples, 0.02%)</title><rect x="84.2277%" y="181" width="0.0202%" height="15" fill="rgb(213,46,41)" fg:x="163179534210" fg:w="39117351"/><text x="84.4777%" y="191.50"></text></g><g><title>[libxcb.so.1.1.0] (40,120,360 samples, 0.02%)</title><rect x="84.2277%" y="197" width="0.0207%" height="15" fill="rgb(215,133,35)" fg:x="163179534210" fg:w="40120360"/><text x="84.4777%" y="207.50"></text></g><g><title>_XReply (80,240,720 samples, 0.04%)</title><rect x="84.2075%" y="229" width="0.0414%" height="15" fill="rgb(213,28,5)" fg:x="163140416859" fg:w="80240720"/><text x="84.4575%" y="239.50"></text></g><g><title>xcb_wait_for_reply64 (43,129,387 samples, 0.02%)</title><rect x="84.2267%" y="213" width="0.0223%" height="15" fill="rgb(215,77,49)" fg:x="163177528192" fg:w="43129387"/><text x="84.4767%" y="223.50"></text></g><g><title>XGetGeometry (89,267,801 samples, 0.05%)</title><rect x="84.2034%" y="245" width="0.0461%" height="15" fill="rgb(248,100,22)" fg:x="163132392787" fg:w="89267801"/><text x="84.4534%" y="255.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (96,288,864 samples, 0.05%)</title><rect x="84.2003%" y="261" width="0.0497%" height="15" fill="rgb(208,67,9)" fg:x="163126374733" fg:w="96288864"/><text x="84.4503%" y="271.50"></text></g><g><title>[amdxc64.so] (38,114,342 samples, 0.02%)</title><rect x="84.3856%" y="165" width="0.0197%" height="15" fill="rgb(219,133,21)" fg:x="163485451955" fg:w="38114342"/><text x="84.6356%" y="175.50"></text></g><g><title>[amdxc64.so] (153,460,377 samples, 0.08%)</title><rect x="84.3281%" y="213" width="0.0792%" height="15" fill="rgb(246,46,29)" fg:x="163374117956" fg:w="153460377"/><text x="84.5781%" y="223.50"></text></g><g><title>[amdxc64.so] (112,337,008 samples, 0.06%)</title><rect x="84.3494%" y="197" width="0.0580%" height="15" fill="rgb(246,185,52)" fg:x="163415241325" fg:w="112337008"/><text x="84.5994%" y="207.50"></text></g><g><title>[amdxc64.so] (71,213,639 samples, 0.04%)</title><rect x="84.3706%" y="181" width="0.0368%" height="15" fill="rgb(252,136,11)" fg:x="163456364694" fg:w="71213639"/><text x="84.6206%" y="191.50"></text></g><g><title>[amdxc64.so] (195,586,755 samples, 0.10%)</title><rect x="84.3069%" y="229" width="0.1010%" height="15" fill="rgb(219,138,53)" fg:x="163332994587" fg:w="195586755"/><text x="84.5569%" y="239.50"></text></g><g><title>[amdxc64.so] (261,785,349 samples, 0.14%)</title><rect x="84.2758%" y="245" width="0.1351%" height="15" fill="rgb(211,51,23)" fg:x="163272814047" fg:w="261785349"/><text x="84.5258%" y="255.50"></text></g><g><title>[libd3d12core.so] (320,962,880 samples, 0.17%)</title><rect x="84.2500%" y="261" width="0.1657%" height="15" fill="rgb(247,221,28)" fg:x="163222663597" fg:w="320962880"/><text x="84.5000%" y="271.50"></text></g><g><title>[libdxcore.so] (38,114,342 samples, 0.02%)</title><rect x="84.4156%" y="261" width="0.0197%" height="15" fill="rgb(251,222,45)" fg:x="163543626477" fg:w="38114342"/><text x="84.6656%" y="271.50"></text></g><g><title>[libdxcore.so] (23,069,207 samples, 0.01%)</title><rect x="84.4234%" y="245" width="0.0119%" height="15" fill="rgb(217,162,53)" fg:x="163558671612" fg:w="23069207"/><text x="84.6734%" y="255.50"></text></g><g><title>[amdxc64.so] (60,180,540 samples, 0.03%)</title><rect x="84.6538%" y="133" width="0.0311%" height="15" fill="rgb(229,93,14)" fg:x="164005010617" fg:w="60180540"/><text x="84.9038%" y="143.50"></text></g><g><title>[amdxc64.so] (39,117,351 samples, 0.02%)</title><rect x="84.6646%" y="117" width="0.0202%" height="15" fill="rgb(209,67,49)" fg:x="164026073806" fg:w="39117351"/><text x="84.9146%" y="127.50"></text></g><g><title>[amdxc64.so] (22,066,198 samples, 0.01%)</title><rect x="84.6734%" y="101" width="0.0114%" height="15" fill="rgb(213,87,29)" fg:x="164043124959" fg:w="22066198"/><text x="84.9234%" y="111.50"></text></g><g><title>[amdxc64.so] (121,364,089 samples, 0.06%)</title><rect x="84.6227%" y="197" width="0.0626%" height="15" fill="rgb(205,151,52)" fg:x="163944830077" fg:w="121364089"/><text x="84.8727%" y="207.50"></text></g><g><title>[amdxc64.so] (111,333,999 samples, 0.06%)</title><rect x="84.6279%" y="181" width="0.0575%" height="15" fill="rgb(253,215,39)" fg:x="163954860167" fg:w="111333999"/><text x="84.8779%" y="191.50"></text></g><g><title>[amdxc64.so] (100,300,900 samples, 0.05%)</title><rect x="84.6336%" y="165" width="0.0518%" height="15" fill="rgb(221,220,41)" fg:x="163965893266" fg:w="100300900"/><text x="84.8836%" y="175.50"></text></g><g><title>[amdxc64.so] (84,252,756 samples, 0.04%)</title><rect x="84.6419%" y="149" width="0.0435%" height="15" fill="rgb(218,133,21)" fg:x="163981941410" fg:w="84252756"/><text x="84.8919%" y="159.50"></text></g><g><title>[amdxc64.so] (149,448,341 samples, 0.08%)</title><rect x="84.6093%" y="229" width="0.0771%" height="15" fill="rgb(221,193,43)" fg:x="163918751843" fg:w="149448341"/><text x="84.8593%" y="239.50"></text></g><g><title>[amdxc64.so] (132,397,188 samples, 0.07%)</title><rect x="84.6181%" y="213" width="0.0683%" height="15" fill="rgb(240,128,52)" fg:x="163935802996" fg:w="132397188"/><text x="84.8681%" y="223.50"></text></g><g><title>[amdxc64.so] (193,580,737 samples, 0.10%)</title><rect x="85.1083%" y="85" width="0.0999%" height="15" fill="rgb(253,114,12)" fg:x="164885652519" fg:w="193580737"/><text x="85.3583%" y="95.50"></text></g><g><title>[amdxc64.so] (140,421,260 samples, 0.07%)</title><rect x="85.1358%" y="69" width="0.0725%" height="15" fill="rgb(215,223,47)" fg:x="164938811996" fg:w="140421260"/><text x="85.3858%" y="79.50"></text></g><g><title>[amdxc64.so] (88,264,792 samples, 0.05%)</title><rect x="85.1627%" y="53" width="0.0456%" height="15" fill="rgb(248,225,23)" fg:x="164990968464" fg:w="88264792"/><text x="85.4127%" y="63.50"></text></g><g><title>[amdxc64.so] (29,087,261 samples, 0.02%)</title><rect x="85.1932%" y="37" width="0.0150%" height="15" fill="rgb(250,108,0)" fg:x="165050145995" fg:w="29087261"/><text x="85.4432%" y="47.50"></text></g><g><title>[amdxc64.so] (256,770,304 samples, 0.13%)</title><rect x="85.0778%" y="101" width="0.1325%" height="15" fill="rgb(228,208,7)" fg:x="164826474988" fg:w="256770304"/><text x="85.3278%" y="111.50"></text></g><g><title>[amdxc64.so] (381,143,420 samples, 0.20%)</title><rect x="85.0151%" y="117" width="0.1967%" height="15" fill="rgb(244,45,10)" fg:x="164705110899" fg:w="381143420"/><text x="85.2651%" y="127.50"></text></g><g><title>[amdxc64.so] (509,528,572 samples, 0.26%)</title><rect x="84.9494%" y="133" width="0.2630%" height="15" fill="rgb(207,125,25)" fg:x="164577728756" fg:w="509528572"/><text x="85.1994%" y="143.50"></text></g><g><title>[amdxc64.so] (713,139,399 samples, 0.37%)</title><rect x="84.8458%" y="165" width="0.3681%" height="15" fill="rgb(210,195,18)" fg:x="164377126956" fg:w="713139399"/><text x="85.0958%" y="175.50"></text></g><g><title>[amdxc64.so] (609,829,472 samples, 0.31%)</title><rect x="84.8992%" y="149" width="0.3148%" height="15" fill="rgb(249,80,12)" fg:x="164480436883" fg:w="609829472"/><text x="85.1492%" y="159.50"></text></g><g><title>[amdxc64.so] (1,009,027,054 samples, 0.52%)</title><rect x="84.6957%" y="213" width="0.5208%" height="15" fill="rgb(221,65,9)" fg:x="164086254346" fg:w="1009027054"/><text x="84.9457%" y="223.50"></text></g><g><title>[amdxc64.so] (982,948,820 samples, 0.51%)</title><rect x="84.7092%" y="197" width="0.5074%" height="15" fill="rgb(235,49,36)" fg:x="164112332580" fg:w="982948820"/><text x="84.9592%" y="207.50"></text></g><g><title>[amdxc64.so] (833,500,479 samples, 0.43%)</title><rect x="84.7863%" y="181" width="0.4302%" height="15" fill="rgb(225,32,20)" fg:x="164261780921" fg:w="833500479"/><text x="85.0363%" y="191.50"></text></g><g><title>[libd3d12core.so] (203,610,827 samples, 0.11%)</title><rect x="85.2165%" y="213" width="0.1051%" height="15" fill="rgb(215,141,46)" fg:x="165095281400" fg:w="203610827"/><text x="85.4665%" y="223.50"></text></g><g><title>[libd3d12core.so] (110,330,990 samples, 0.06%)</title><rect x="85.2647%" y="197" width="0.0569%" height="15" fill="rgb(250,160,47)" fg:x="165188561237" fg:w="110330990"/><text x="85.5147%" y="207.50"></text></g><g><title>[libd3d12core.so] (85,255,765 samples, 0.04%)</title><rect x="85.2776%" y="181" width="0.0440%" height="15" fill="rgb(216,222,40)" fg:x="165213636462" fg:w="85255765"/><text x="85.5276%" y="191.50"></text></g><g><title>[libd3d12core.so] (1,415,245,699 samples, 0.73%)</title><rect x="84.5922%" y="245" width="0.7305%" height="15" fill="rgb(234,217,39)" fg:x="163885652546" fg:w="1415245699"/><text x="84.8422%" y="255.50"></text></g><g><title>[libd3d12core.so] (1,232,698,061 samples, 0.64%)</title><rect x="84.6864%" y="229" width="0.6363%" height="15" fill="rgb(207,178,40)" fg:x="164068200184" fg:w="1232698061"/><text x="84.9364%" y="239.50"></text></g><g><title>[amdxc64.so] (150,451,350 samples, 0.08%)</title><rect x="85.5401%" y="197" width="0.0777%" height="15" fill="rgb(221,136,13)" fg:x="165722162025" fg:w="150451350"/><text x="85.7901%" y="207.50"></text></g><g><title>[amdxc64.so] (140,421,260 samples, 0.07%)</title><rect x="85.5453%" y="181" width="0.0725%" height="15" fill="rgb(249,199,10)" fg:x="165732192115" fg:w="140421260"/><text x="85.7953%" y="191.50"></text></g><g><title>[amdxc64.so] (118,355,062 samples, 0.06%)</title><rect x="85.5567%" y="165" width="0.0611%" height="15" fill="rgb(249,222,13)" fg:x="165754258313" fg:w="118355062"/><text x="85.8067%" y="175.50"></text></g><g><title>[amdxc64.so] (111,333,999 samples, 0.06%)</title><rect x="85.5603%" y="149" width="0.0575%" height="15" fill="rgb(244,185,38)" fg:x="165761279376" fg:w="111333999"/><text x="85.8103%" y="159.50"></text></g><g><title>[amdxc64.so] (100,300,900 samples, 0.05%)</title><rect x="85.5660%" y="133" width="0.0518%" height="15" fill="rgb(236,202,9)" fg:x="165772312475" fg:w="100300900"/><text x="85.8160%" y="143.50"></text></g><g><title>[amdxc64.so] (81,243,729 samples, 0.04%)</title><rect x="85.5758%" y="117" width="0.0419%" height="15" fill="rgb(250,229,37)" fg:x="165791369646" fg:w="81243729"/><text x="85.8258%" y="127.50"></text></g><g><title>[amdxc64.so] (43,129,387 samples, 0.02%)</title><rect x="85.5955%" y="101" width="0.0223%" height="15" fill="rgb(206,174,23)" fg:x="165829483988" fg:w="43129387"/><text x="85.8455%" y="111.50"></text></g><g><title>[amdxc64.so] (27,081,243 samples, 0.01%)</title><rect x="85.6038%" y="85" width="0.0140%" height="15" fill="rgb(211,33,43)" fg:x="165845532132" fg:w="27081243"/><text x="85.8538%" y="95.50"></text></g><g><title>[libd3d12core.so] (187,562,683 samples, 0.10%)</title><rect x="85.5323%" y="229" width="0.0968%" height="15" fill="rgb(245,58,50)" fg:x="165707116890" fg:w="187562683"/><text x="85.7823%" y="239.50"></text></g><g><title>[libd3d12core.so] (177,532,593 samples, 0.09%)</title><rect x="85.5375%" y="213" width="0.0916%" height="15" fill="rgb(244,68,36)" fg:x="165717146980" fg:w="177532593"/><text x="85.7875%" y="223.50"></text></g><g><title>[libd3d12core.so] (22,066,198 samples, 0.01%)</title><rect x="85.6178%" y="197" width="0.0114%" height="15" fill="rgb(232,229,15)" fg:x="165872613375" fg:w="22066198"/><text x="85.8678%" y="207.50"></text></g><g><title>[libd3d12core.so] (20,060,180 samples, 0.01%)</title><rect x="85.6188%" y="181" width="0.0104%" height="15" fill="rgb(254,30,23)" fg:x="165874619393" fg:w="20060180"/><text x="85.8688%" y="191.50"></text></g><g><title>[libd3d12core.so] (22,066,198 samples, 0.01%)</title><rect x="85.7027%" y="213" width="0.0114%" height="15" fill="rgb(235,160,14)" fg:x="166037106851" fg:w="22066198"/><text x="85.9527%" y="223.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="85.7032%" y="197" width="0.0109%" height="15" fill="rgb(212,155,44)" fg:x="166038109860" fg:w="21063189"/><text x="85.9532%" y="207.50"></text></g><g><title>[swrast_dri.so] (83,249,747 samples, 0.04%)</title><rect x="85.7141%" y="213" width="0.0430%" height="15" fill="rgb(226,2,50)" fg:x="166059173049" fg:w="83249747"/><text x="85.9641%" y="223.50"></text></g><g><title>[swrast_dri.so] (265,797,385 samples, 0.14%)</title><rect x="85.6292%" y="229" width="0.1372%" height="15" fill="rgb(234,177,6)" fg:x="165894679573" fg:w="265797385"/><text x="85.8792%" y="239.50"></text></g><g><title>[swrast_dri.so] (860,581,722 samples, 0.44%)</title><rect x="85.3227%" y="245" width="0.4442%" height="15" fill="rgb(217,24,9)" fg:x="165300898245" fg:w="860581722"/><text x="85.5727%" y="255.50"></text></g><g><title>[swrast_dri.so] (2,587,763,220 samples, 1.34%)</title><rect x="84.4353%" y="261" width="1.3357%" height="15" fill="rgb(220,13,46)" fg:x="163581740819" fg:w="2587763220"/><text x="84.6853%" y="271.50"></text></g><g><title>[swrast_dri.so] (3,438,314,852 samples, 1.77%)</title><rect x="84.0087%" y="277" width="1.7747%" height="15" fill="rgb(239,221,27)" fg:x="162755261403" fg:w="3438314852"/><text x="84.2587%" y="287.50">[..</text></g><g><title>[swrast_dri.so] (3,922,768,199 samples, 2.02%)</title><rect x="83.7788%" y="293" width="2.0248%" height="15" fill="rgb(222,198,25)" fg:x="162309925407" fg:w="3922768199"/><text x="84.0288%" y="303.50">[..</text></g><g><title>[swrast_dri.so] (6,122,366,936 samples, 3.16%)</title><rect x="82.6740%" y="357" width="3.1602%" height="15" fill="rgb(211,99,13)" fg:x="160169504201" fg:w="6122366936"/><text x="82.9240%" y="367.50">[sw..</text></g><g><title>[swrast_dri.so] (6,056,168,342 samples, 3.13%)</title><rect x="82.7082%" y="341" width="3.1260%" height="15" fill="rgb(232,111,31)" fg:x="160235702795" fg:w="6056168342"/><text x="82.9582%" y="351.50">[sw..</text></g><g><title>[swrast_dri.so] (6,010,029,928 samples, 3.10%)</title><rect x="82.7320%" y="325" width="3.1022%" height="15" fill="rgb(245,82,37)" fg:x="160281841209" fg:w="6010029928"/><text x="82.9820%" y="335.50">[sw..</text></g><g><title>[swrast_dri.so] (4,874,623,740 samples, 2.52%)</title><rect x="83.3181%" y="309" width="2.5161%" height="15" fill="rgb(227,149,46)" fg:x="161417247397" fg:w="4874623740"/><text x="83.5681%" y="319.50">[s..</text></g><g><title>[swrast_dri.so] (54,162,486 samples, 0.03%)</title><rect x="86.1805%" y="245" width="0.0280%" height="15" fill="rgb(218,36,50)" fg:x="166962884158" fg:w="54162486"/><text x="86.4305%" y="255.50"></text></g><g><title>[swrast_dri.so] (326,980,934 samples, 0.17%)</title><rect x="86.0418%" y="293" width="0.1688%" height="15" fill="rgb(226,80,48)" fg:x="166694077746" fg:w="326980934"/><text x="86.2918%" y="303.50"></text></g><g><title>[swrast_dri.so] (229,689,061 samples, 0.12%)</title><rect x="86.0920%" y="277" width="0.1186%" height="15" fill="rgb(238,224,15)" fg:x="166791369619" fg:w="229689061"/><text x="86.3420%" y="287.50"></text></g><g><title>[swrast_dri.so] (122,367,098 samples, 0.06%)</title><rect x="86.1474%" y="261" width="0.0632%" height="15" fill="rgb(241,136,10)" fg:x="166898691582" fg:w="122367098"/><text x="86.3974%" y="271.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_bindings_from_slice (520,561,671 samples, 0.27%)</title><rect x="85.9750%" y="309" width="0.2687%" height="15" fill="rgb(208,32,45)" fg:x="166564689585" fg:w="520561671"/><text x="86.2250%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (64,192,576 samples, 0.03%)</title><rect x="86.2106%" y="293" width="0.0331%" height="15" fill="rgb(207,135,9)" fg:x="167021058680" fg:w="64192576"/><text x="86.4606%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (26,078,234 samples, 0.01%)</title><rect x="86.2302%" y="277" width="0.0135%" height="15" fill="rgb(206,86,44)" fg:x="167059173022" fg:w="26078234"/><text x="86.4802%" y="287.50"></text></g><g><title>[swrast_dri.so] (164,493,476 samples, 0.08%)</title><rect x="86.2949%" y="293" width="0.0849%" height="15" fill="rgb(245,177,15)" fg:x="167184549147" fg:w="164493476"/><text x="86.5449%" y="303.50"></text></g><g><title>[swrast_dri.so] (78,234,702 samples, 0.04%)</title><rect x="86.3395%" y="277" width="0.0404%" height="15" fill="rgb(206,64,50)" fg:x="167270807921" fg:w="78234702"/><text x="86.5895%" y="287.50"></text></g><g><title>[swrast_dri.so] (60,180,540 samples, 0.03%)</title><rect x="86.3488%" y="261" width="0.0311%" height="15" fill="rgb(234,36,40)" fg:x="167288862083" fg:w="60180540"/><text x="86.5988%" y="271.50"></text></g><g><title>[swrast_dri.so] (34,102,306 samples, 0.02%)</title><rect x="86.3622%" y="245" width="0.0176%" height="15" fill="rgb(213,64,8)" fg:x="167314940317" fg:w="34102306"/><text x="86.6122%" y="255.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_pipeline (313,941,817 samples, 0.16%)</title><rect x="86.2437%" y="309" width="0.1620%" height="15" fill="rgb(210,75,36)" fg:x="167085251256" fg:w="313941817"/><text x="86.4937%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (50,150,450 samples, 0.03%)</title><rect x="86.3799%" y="293" width="0.0259%" height="15" fill="rgb(229,88,21)" fg:x="167349042623" fg:w="50150450"/><text x="86.6299%" y="303.50"></text></g><g><title>[swrast_dri.so] (51,153,459 samples, 0.03%)</title><rect x="86.4290%" y="293" width="0.0264%" height="15" fill="rgb(252,204,47)" fg:x="167444328478" fg:w="51153459"/><text x="86.6790%" y="303.50"></text></g><g><title>[swrast_dri.so] (46,138,414 samples, 0.02%)</title><rect x="86.4316%" y="277" width="0.0238%" height="15" fill="rgb(208,77,27)" fg:x="167449343523" fg:w="46138414"/><text x="86.6816%" y="287.50"></text></g><g><title>[swrast_dri.so] (29,087,261 samples, 0.02%)</title><rect x="86.4404%" y="261" width="0.0150%" height="15" fill="rgb(221,76,26)" fg:x="167466394676" fg:w="29087261"/><text x="86.6904%" y="271.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_uniforms_from_bytes (116,349,044 samples, 0.06%)</title><rect x="86.4068%" y="309" width="0.0601%" height="15" fill="rgb(225,139,18)" fg:x="167401199091" fg:w="116349044"/><text x="86.6568%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22,066,198 samples, 0.01%)</title><rect x="86.4554%" y="293" width="0.0114%" height="15" fill="rgb(230,137,11)" fg:x="167495481937" fg:w="22066198"/><text x="86.7054%" y="303.50"></text></g><g><title>[swrast_dri.so] (76,228,684 samples, 0.04%)</title><rect x="86.4720%" y="293" width="0.0393%" height="15" fill="rgb(212,28,1)" fg:x="167527578225" fg:w="76228684"/><text x="86.7220%" y="303.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::begin_pass (103,309,927 samples, 0.05%)</title><rect x="86.4684%" y="309" width="0.0533%" height="15" fill="rgb(248,164,17)" fg:x="167520557162" fg:w="103309927"/><text x="86.7184%" y="319.50"></text></g><g><title>miniquad::window::screen_size (20,060,180 samples, 0.01%)</title><rect x="86.5114%" y="293" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="167603806909" fg:w="20060180"/><text x="86.7614%" y="303.50"></text></g><g><title>[libc.so.6] (10,566,699,815 samples, 5.45%)</title><rect x="86.7650%" y="277" width="5.4542%" height="15" fill="rgb(243,84,45)" fg:x="168095281319" fg:w="10566699815"/><text x="87.0150%" y="287.50">[libc.s..</text></g><g><title>[libd3d12core.so] (87,261,783 samples, 0.05%)</title><rect x="92.9818%" y="197" width="0.0450%" height="15" fill="rgb(252,49,23)" fg:x="180139413391" fg:w="87261783"/><text x="93.2318%" y="207.50"></text></g><g><title>[libd3d12core.so] (55,165,495 samples, 0.03%)</title><rect x="92.9984%" y="181" width="0.0285%" height="15" fill="rgb(215,19,7)" fg:x="180171509679" fg:w="55165495"/><text x="93.2484%" y="191.50"></text></g><g><title>[libd3d12core.so] (21,063,189 samples, 0.01%)</title><rect x="93.0160%" y="165" width="0.0109%" height="15" fill="rgb(238,81,41)" fg:x="180205611985" fg:w="21063189"/><text x="93.2660%" y="175.50"></text></g><g><title>[swrast_dri.so] (76,228,684 samples, 0.04%)</title><rect x="93.0268%" y="197" width="0.0393%" height="15" fill="rgb(210,199,37)" fg:x="180226675174" fg:w="76228684"/><text x="93.2768%" y="207.50"></text></g><g><title>[swrast_dri.so] (256,770,304 samples, 0.13%)</title><rect x="92.9352%" y="213" width="0.1325%" height="15" fill="rgb(244,192,49)" fg:x="180049142581" fg:w="256770304"/><text x="93.1852%" y="223.50"></text></g><g><title>[swrast_dri.so] (338,014,033 samples, 0.17%)</title><rect x="92.8990%" y="229" width="0.1745%" height="15" fill="rgb(226,211,11)" fg:x="179978931951" fg:w="338014033"/><text x="93.1490%" y="239.50"></text></g><g><title>__libc_calloc (30,090,270 samples, 0.02%)</title><rect x="93.0734%" y="229" width="0.0155%" height="15" fill="rgb(236,162,54)" fg:x="180316945984" fg:w="30090270"/><text x="93.3234%" y="239.50"></text></g><g><title>[swrast_dri.so] (1,020,060,153 samples, 0.53%)</title><rect x="92.5630%" y="245" width="0.5265%" height="15" fill="rgb(220,229,9)" fg:x="179327979110" fg:w="1020060153"/><text x="92.8130%" y="255.50"></text></g><g><title>[swrast_dri.so] (12,588,765,959 samples, 6.50%)</title><rect x="86.5921%" y="293" width="6.4979%" height="15" fill="rgb(250,87,22)" fg:x="167760276313" fg:w="12588765959"/><text x="86.8421%" y="303.50">[swrast_d..</text></g><g><title>[swrast_dri.so] (1,687,061,138 samples, 0.87%)</title><rect x="92.2192%" y="277" width="0.8708%" height="15" fill="rgb(239,43,17)" fg:x="178661981134" fg:w="1687061138"/><text x="92.4692%" y="287.50"></text></g><g><title>[swrast_dri.so] (1,149,448,314 samples, 0.59%)</title><rect x="92.4967%" y="261" width="0.5933%" height="15" fill="rgb(231,177,25)" fg:x="179199593958" fg:w="1149448314"/><text x="92.7467%" y="271.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::buffer_update (12,741,223,327 samples, 6.58%)</title><rect x="86.5217%" y="309" width="6.5766%" height="15" fill="rgb(219,179,1)" fg:x="167623867089" fg:w="12741223327"/><text x="86.7717%" y="319.50">&lt;miniquad..</text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::end_render_pass (20,060,180 samples, 0.01%)</title><rect x="93.1061%" y="309" width="0.0104%" height="15" fill="rgb(238,219,53)" fg:x="180380135551" fg:w="20060180"/><text x="93.3561%" y="319.50"></text></g><g><title>[swrast_dri.so] (560,682,031 samples, 0.29%)</title><rect x="93.1242%" y="309" width="0.2894%" height="15" fill="rgb(232,167,36)" fg:x="180415240866" fg:w="560682031"/><text x="93.3742%" y="319.50"></text></g><g><title>[swrast_dri.so] (489,468,392 samples, 0.25%)</title><rect x="93.1609%" y="293" width="0.2526%" height="15" fill="rgb(244,19,51)" fg:x="180486454505" fg:w="489468392"/><text x="93.4109%" y="303.50"></text></g><g><title>[swrast_dri.so] (473,420,248 samples, 0.24%)</title><rect x="93.1692%" y="277" width="0.2444%" height="15" fill="rgb(224,6,22)" fg:x="180502502649" fg:w="473420248"/><text x="93.4192%" y="287.50"></text></g><g><title>[swrast_dri.so] (380,140,411 samples, 0.20%)</title><rect x="93.2174%" y="261" width="0.1962%" height="15" fill="rgb(224,145,5)" fg:x="180595782486" fg:w="380140411"/><text x="93.4674%" y="271.50"></text></g><g><title>[swrast_dri.so] (329,989,961 samples, 0.17%)</title><rect x="93.2433%" y="245" width="0.1703%" height="15" fill="rgb(234,130,49)" fg:x="180645932936" fg:w="329989961"/><text x="93.4933%" y="255.50"></text></g><g><title>[swrast_dri.so] (264,794,376 samples, 0.14%)</title><rect x="93.2769%" y="229" width="0.1367%" height="15" fill="rgb(254,6,2)" fg:x="180711128521" fg:w="264794376"/><text x="93.5269%" y="239.50"></text></g><g><title>[swrast_dri.so] (194,583,746 samples, 0.10%)</title><rect x="93.3131%" y="213" width="0.1004%" height="15" fill="rgb(208,96,46)" fg:x="180781339151" fg:w="194583746"/><text x="93.5631%" y="223.50"></text></g><g><title>[swrast_dri.so] (25,075,225 samples, 0.01%)</title><rect x="93.4006%" y="197" width="0.0129%" height="15" fill="rgb(239,3,39)" fg:x="180950847672" fg:w="25075225"/><text x="93.6506%" y="207.50"></text></g><g><title>macroquad::quad_gl::PipelineExt::set_uniform (73,219,657 samples, 0.04%)</title><rect x="93.4136%" y="309" width="0.0378%" height="15" fill="rgb(233,210,1)" fg:x="180975922897" fg:w="73219657"/><text x="93.6636%" y="319.50"></text></g><g><title>[libc.so.6] (31,093,279 samples, 0.02%)</title><rect x="93.4353%" y="293" width="0.0160%" height="15" fill="rgb(244,137,37)" fg:x="181018049275" fg:w="31093279"/><text x="93.6853%" y="303.50"></text></g><g><title>macroquad::quad_gl::QuadGl::draw (14,695,084,859 samples, 7.59%)</title><rect x="85.8689%" y="325" width="7.5851%" height="15" fill="rgb(240,136,2)" fg:x="166359072740" fg:w="14695084859"/><text x="86.1189%" y="335.50">macroquad:..</text></g><g><title>macroquad::camera::set_camera (14,741,223,273 samples, 7.61%)</title><rect x="85.8456%" y="357" width="7.6089%" height="15" fill="rgb(239,18,37)" fg:x="166313937335" fg:w="14741223273"/><text x="86.0956%" y="367.50">macroquad:..</text></g><g><title>macroquad::Context::perform_render_passes (14,704,111,940 samples, 7.59%)</title><rect x="85.8647%" y="341" width="7.5898%" height="15" fill="rgb(218,185,22)" fg:x="166351048668" fg:w="14704111940"/><text x="86.1147%" y="351.50">macroquad:..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (21,063,189 samples, 0.01%)</title><rect x="93.4907%" y="325" width="0.0109%" height="15" fill="rgb(225,218,4)" fg:x="181125371238" fg:w="21063189"/><text x="93.7407%" y="335.50"></text></g><g><title>macroquad::experimental::scene::get_scene (95,285,855 samples, 0.05%)</title><rect x="93.4545%" y="357" width="0.0492%" height="15" fill="rgb(230,182,32)" fg:x="181055160608" fg:w="95285855"/><text x="93.7045%" y="367.50"></text></g><g><title>miniquad::date::now (34,102,306 samples, 0.02%)</title><rect x="93.4861%" y="341" width="0.0176%" height="15" fill="rgb(242,56,43)" fg:x="181116344157" fg:w="34102306"/><text x="93.7361%" y="351.50"></text></g><g><title>macroquad::telemetry::begin_gpu_query (42,126,378 samples, 0.02%)</title><rect x="93.5306%" y="357" width="0.0217%" height="15" fill="rgb(233,99,24)" fg:x="181202602931" fg:w="42126378"/><text x="93.7806%" y="367.50"></text></g><g><title>macroquad::telemetry::end_gpu_query (22,066,198 samples, 0.01%)</title><rect x="93.5523%" y="357" width="0.0114%" height="15" fill="rgb(234,209,42)" fg:x="181244729309" fg:w="22066198"/><text x="93.8023%" y="367.50"></text></g><g><title>malloc (24,072,216 samples, 0.01%)</title><rect x="93.5756%" y="325" width="0.0124%" height="15" fill="rgb(227,7,12)" fg:x="181289864714" fg:w="24072216"/><text x="93.8256%" y="335.50"></text></g><g><title>macroquad::telemetry::reset (66,198,594 samples, 0.03%)</title><rect x="93.5637%" y="357" width="0.0342%" height="15" fill="rgb(245,203,43)" fg:x="181266795507" fg:w="66198594"/><text x="93.8137%" y="367.50"></text></g><g><title>macroquad::experimental::scene::get_scene (62,186,558 samples, 0.03%)</title><rect x="93.5658%" y="341" width="0.0321%" height="15" fill="rgb(238,205,33)" fg:x="181270807543" fg:w="62186558"/><text x="93.8158%" y="351.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (144,628,882,755 samples, 74.65%)</title><rect x="18.9775%" y="373" width="74.6525%" height="15" fill="rgb(231,56,7)" fg:x="36766297904" fg:w="144628882755"/><text x="19.2275%" y="383.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::update (45,135,405 samples, 0.02%)</title><rect x="93.6300%" y="373" width="0.0233%" height="15" fill="rgb(244,186,29)" fg:x="181395180659" fg:w="45135405"/><text x="93.8800%" y="383.50"></text></g><g><title>_XEventsQueued (27,081,243 samples, 0.01%)</title><rect x="93.6595%" y="357" width="0.0140%" height="15" fill="rgb(234,111,31)" fg:x="181452352172" fg:w="27081243"/><text x="93.9095%" y="367.50"></text></g><g><title>XFlush (56,168,504 samples, 0.03%)</title><rect x="93.6533%" y="373" width="0.0290%" height="15" fill="rgb(241,149,10)" fg:x="181440316064" fg:w="56168504"/><text x="93.9033%" y="383.50"></text></g><g><title>__glDispatchCheckMultithreaded (24,072,216 samples, 0.01%)</title><rect x="93.6957%" y="357" width="0.0124%" height="15" fill="rgb(249,206,44)" fg:x="181522562802" fg:w="24072216"/><text x="93.9457%" y="367.50"></text></g><g><title>[libGLX.so.0.0.0] (42,126,378 samples, 0.02%)</title><rect x="93.6875%" y="373" width="0.0217%" height="15" fill="rgb(251,153,30)" fg:x="181506514658" fg:w="42126378"/><text x="93.9375%" y="383.50"></text></g><g><title>[libX11.so.6.4.0] (28,084,252 samples, 0.01%)</title><rect x="93.8806%" y="261" width="0.0145%" height="15" fill="rgb(239,152,38)" fg:x="181880637015" fg:w="28084252"/><text x="94.1306%" y="271.50"></text></g><g><title>XextFindDisplay (22,066,198 samples, 0.01%)</title><rect x="93.8987%" y="245" width="0.0114%" height="15" fill="rgb(249,139,47)" fg:x="181915742330" fg:w="22066198"/><text x="94.1487%" y="255.50"></text></g><g><title>[libXext.so.6.4.0] (31,093,279 samples, 0.02%)</title><rect x="93.8951%" y="261" width="0.0160%" height="15" fill="rgb(244,64,35)" fg:x="181908721267" fg:w="31093279"/><text x="94.1451%" y="271.50"></text></g><g><title>XShmPutImage (89,267,801 samples, 0.05%)</title><rect x="93.8681%" y="277" width="0.0461%" height="15" fill="rgb(216,46,15)" fg:x="181856564799" fg:w="89267801"/><text x="94.1181%" y="287.50"></text></g><g><title>[libX11.so.6.4.0] (21,063,189 samples, 0.01%)</title><rect x="93.9385%" y="229" width="0.0109%" height="15" fill="rgb(250,74,19)" fg:x="181992974023" fg:w="21063189"/><text x="94.1885%" y="239.50"></text></g><g><title>[libX11.so.6.4.0] (40,120,360 samples, 0.02%)</title><rect x="93.9329%" y="245" width="0.0207%" height="15" fill="rgb(249,42,33)" fg:x="181981940924" fg:w="40120360"/><text x="94.1829%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (26,078,234 samples, 0.01%)</title><rect x="93.9722%" y="213" width="0.0135%" height="15" fill="rgb(242,149,17)" fg:x="182058169608" fg:w="26078234"/><text x="94.2222%" y="223.50"></text></g><g><title>xcb_writev (57,171,513 samples, 0.03%)</title><rect x="93.9634%" y="229" width="0.0295%" height="15" fill="rgb(244,29,21)" fg:x="182041118455" fg:w="57171513"/><text x="94.2134%" y="239.50"></text></g><g><title>_XSend (77,231,693 samples, 0.04%)</title><rect x="93.9551%" y="245" width="0.0399%" height="15" fill="rgb(220,130,37)" fg:x="182025070311" fg:w="77231693"/><text x="94.2051%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (35,105,315 samples, 0.02%)</title><rect x="94.0126%" y="197" width="0.0181%" height="15" fill="rgb(211,67,2)" fg:x="182136404310" fg:w="35105315"/><text x="94.2626%" y="207.50"></text></g><g><title>[libxcb.so.1.1.0] (56,168,504 samples, 0.03%)</title><rect x="94.0079%" y="213" width="0.0290%" height="15" fill="rgb(235,68,52)" fg:x="182127377229" fg:w="56168504"/><text x="94.2579%" y="223.50"></text></g><g><title>[libxcb.so.1.1.0] (59,177,531 samples, 0.03%)</title><rect x="94.0069%" y="229" width="0.0305%" height="15" fill="rgb(246,142,3)" fg:x="182125371211" fg:w="59177531"/><text x="94.2569%" y="239.50"></text></g><g><title>_XReply (220,661,980 samples, 0.11%)</title><rect x="93.9241%" y="261" width="0.1139%" height="15" fill="rgb(241,25,7)" fg:x="181964889771" fg:w="220661980"/><text x="94.1741%" y="271.50"></text></g><g><title>xcb_wait_for_reply64 (65,195,585 samples, 0.03%)</title><rect x="94.0043%" y="245" width="0.0337%" height="15" fill="rgb(242,119,39)" fg:x="182120356166" fg:w="65195585"/><text x="94.2543%" y="255.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (345,035,096 samples, 0.18%)</title><rect x="93.8614%" y="293" width="0.1781%" height="15" fill="rgb(241,98,45)" fg:x="181843525682" fg:w="345035096"/><text x="94.1114%" y="303.50"></text></g><g><title>XSync (240,722,160 samples, 0.12%)</title><rect x="93.9152%" y="277" width="0.1243%" height="15" fill="rgb(254,28,30)" fg:x="181947838618" fg:w="240722160"/><text x="94.1652%" y="287.50"></text></g><g><title>[libc.so.6] (8,261,785,133 samples, 4.26%)</title><rect x="94.0395%" y="293" width="4.2645%" height="15" fill="rgb(241,142,54)" fg:x="182188560778" fg:w="8261785133"/><text x="94.2895%" y="303.50">[libc..</text></g><g><title>[amdxc64.so] (158,475,422 samples, 0.08%)</title><rect x="98.3252%" y="261" width="0.0818%" height="15" fill="rgb(222,85,15)" fg:x="190491469280" fg:w="158475422"/><text x="98.5752%" y="271.50"></text></g><g><title>[amdxc64.so] (133,400,197 samples, 0.07%)</title><rect x="98.3381%" y="245" width="0.0689%" height="15" fill="rgb(210,85,47)" fg:x="190516544505" fg:w="133400197"/><text x="98.5881%" y="255.50"></text></g><g><title>[amdxc64.so] (118,355,062 samples, 0.06%)</title><rect x="98.3459%" y="229" width="0.0611%" height="15" fill="rgb(224,206,25)" fg:x="190531589640" fg:w="118355062"/><text x="98.5959%" y="239.50"></text></g><g><title>[amdxc64.so] (101,303,909 samples, 0.05%)</title><rect x="98.3547%" y="213" width="0.0523%" height="15" fill="rgb(243,201,19)" fg:x="190548640793" fg:w="101303909"/><text x="98.6047%" y="223.50"></text></g><g><title>[amdxc64.so] (75,225,675 samples, 0.04%)</title><rect x="98.3681%" y="197" width="0.0388%" height="15" fill="rgb(236,59,4)" fg:x="190574719027" fg:w="75225675"/><text x="98.6181%" y="207.50"></text></g><g><title>[amdxc64.so] (60,180,540 samples, 0.03%)</title><rect x="98.3759%" y="181" width="0.0311%" height="15" fill="rgb(254,179,45)" fg:x="190589764162" fg:w="60180540"/><text x="98.6259%" y="191.50"></text></g><g><title>[amdxc64.so] (46,138,414 samples, 0.02%)</title><rect x="98.3832%" y="165" width="0.0238%" height="15" fill="rgb(226,14,10)" fg:x="190603806288" fg:w="46138414"/><text x="98.6332%" y="175.50"></text></g><g><title>[amdxc64.so] (37,111,333 samples, 0.02%)</title><rect x="98.3878%" y="149" width="0.0192%" height="15" fill="rgb(244,27,41)" fg:x="190612833369" fg:w="37111333"/><text x="98.6378%" y="159.50"></text></g><g><title>[amdxc64.so] (31,093,279 samples, 0.02%)</title><rect x="98.3909%" y="133" width="0.0160%" height="15" fill="rgb(235,35,32)" fg:x="190618851423" fg:w="31093279"/><text x="98.6409%" y="143.50"></text></g><g><title>[amdxc64.so] (23,069,207 samples, 0.01%)</title><rect x="98.3951%" y="117" width="0.0119%" height="15" fill="rgb(218,68,31)" fg:x="190626875495" fg:w="23069207"/><text x="98.6451%" y="127.50"></text></g><g><title>[amdxc64.so] (203,610,827 samples, 0.11%)</title><rect x="98.3159%" y="277" width="0.1051%" height="15" fill="rgb(207,120,37)" fg:x="190473415118" fg:w="203610827"/><text x="98.5659%" y="287.50"></text></g><g><title>[libc.so.6] (27,081,243 samples, 0.01%)</title><rect x="98.4070%" y="261" width="0.0140%" height="15" fill="rgb(227,98,0)" fg:x="190649944702" fg:w="27081243"/><text x="98.6570%" y="271.50"></text></g><g><title>[amdxc64.so] (43,129,387 samples, 0.02%)</title><rect x="98.4608%" y="245" width="0.0223%" height="15" fill="rgb(207,7,3)" fg:x="190754257638" fg:w="43129387"/><text x="98.7108%" y="255.50"></text></g><g><title>[amdxc64.so] (87,261,783 samples, 0.05%)</title><rect x="98.4417%" y="261" width="0.0450%" height="15" fill="rgb(206,98,19)" fg:x="190717146305" fg:w="87261783"/><text x="98.6917%" y="271.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="98.4950%" y="245" width="0.0109%" height="15" fill="rgb(217,5,26)" fg:x="190820456232" fg:w="21063189"/><text x="98.7450%" y="255.50"></text></g><g><title>[amdxc64.so] (21,063,189 samples, 0.01%)</title><rect x="98.5126%" y="229" width="0.0109%" height="15" fill="rgb(235,190,38)" fg:x="190854558538" fg:w="21063189"/><text x="98.7626%" y="239.50"></text></g><g><title>[libd3d12core.so] (48,144,432 samples, 0.02%)</title><rect x="98.5059%" y="245" width="0.0249%" height="15" fill="rgb(247,86,24)" fg:x="190841519421" fg:w="48144432"/><text x="98.7559%" y="255.50"></text></g><g><title>[libd3d12core.so] (446,339,005 samples, 0.23%)</title><rect x="98.3040%" y="293" width="0.2304%" height="15" fill="rgb(205,101,16)" fg:x="190450345911" fg:w="446339005"/><text x="98.5540%" y="303.50"></text></g><g><title>[libd3d12core.so] (219,658,971 samples, 0.11%)</title><rect x="98.4210%" y="277" width="0.1134%" height="15" fill="rgb(246,168,33)" fg:x="190677025945" fg:w="219658971"/><text x="98.6710%" y="287.50"></text></g><g><title>[libd3d12core.so] (92,276,828 samples, 0.05%)</title><rect x="98.4867%" y="261" width="0.0476%" height="15" fill="rgb(231,114,1)" fg:x="190804408088" fg:w="92276828"/><text x="98.7367%" y="271.50"></text></g><g><title>[amdxc64.so] (31,093,279 samples, 0.02%)</title><rect x="98.6757%" y="133" width="0.0160%" height="15" fill="rgb(207,184,53)" fg:x="191170506373" fg:w="31093279"/><text x="98.9257%" y="143.50"></text></g><g><title>[amdxc64.so] (26,078,234 samples, 0.01%)</title><rect x="98.6783%" y="117" width="0.0135%" height="15" fill="rgb(224,95,51)" fg:x="191175521418" fg:w="26078234"/><text x="98.9283%" y="127.50"></text></g><g><title>[amdxc64.so] (112,337,008 samples, 0.06%)</title><rect x="98.6348%" y="245" width="0.0580%" height="15" fill="rgb(212,188,45)" fg:x="191091268662" fg:w="112337008"/><text x="98.8848%" y="255.50"></text></g><g><title>[amdxc64.so] (99,297,891 samples, 0.05%)</title><rect x="98.6415%" y="229" width="0.0513%" height="15" fill="rgb(223,154,38)" fg:x="191104307779" fg:w="99297891"/><text x="98.8915%" y="239.50"></text></g><g><title>[amdxc64.so] (92,276,828 samples, 0.05%)</title><rect x="98.6451%" y="213" width="0.0476%" height="15" fill="rgb(251,22,52)" fg:x="191111328842" fg:w="92276828"/><text x="98.8951%" y="223.50"></text></g><g><title>[amdxc64.so] (73,219,657 samples, 0.04%)</title><rect x="98.6550%" y="197" width="0.0378%" height="15" fill="rgb(229,209,22)" fg:x="191130386013" fg:w="73219657"/><text x="98.9050%" y="207.50"></text></g><g><title>[amdxc64.so] (64,192,576 samples, 0.03%)</title><rect x="98.6596%" y="181" width="0.0331%" height="15" fill="rgb(234,138,34)" fg:x="191139413094" fg:w="64192576"/><text x="98.9096%" y="191.50"></text></g><g><title>[amdxc64.so] (47,141,423 samples, 0.02%)</title><rect x="98.6684%" y="165" width="0.0243%" height="15" fill="rgb(212,95,11)" fg:x="191156464247" fg:w="47141423"/><text x="98.9184%" y="175.50"></text></g><g><title>[amdxc64.so] (39,117,351 samples, 0.02%)</title><rect x="98.6726%" y="149" width="0.0202%" height="15" fill="rgb(240,179,47)" fg:x="191164488319" fg:w="39117351"/><text x="98.9226%" y="159.50"></text></g><g><title>[amdxc64.so] (152,457,368 samples, 0.08%)</title><rect x="98.6291%" y="261" width="0.0787%" height="15" fill="rgb(240,163,11)" fg:x="191080235563" fg:w="152457368"/><text x="98.8791%" y="271.50"></text></g><g><title>[libc.so.6] (29,087,261 samples, 0.02%)</title><rect x="98.6928%" y="245" width="0.0150%" height="15" fill="rgb(236,37,12)" fg:x="191203605670" fg:w="29087261"/><text x="98.9428%" y="255.50"></text></g><g><title>[amdxc64.so] (37,111,333 samples, 0.02%)</title><rect x="98.7409%" y="229" width="0.0192%" height="15" fill="rgb(232,164,16)" fg:x="191296885507" fg:w="37111333"/><text x="98.9909%" y="239.50"></text></g><g><title>[amdxc64.so] (63,189,567 samples, 0.03%)</title><rect x="98.7280%" y="245" width="0.0326%" height="15" fill="rgb(244,205,15)" fg:x="191271810282" fg:w="63189567"/><text x="98.9780%" y="255.50"></text></g><g><title>[libd3d12core.so] (41,123,369 samples, 0.02%)</title><rect x="98.7854%" y="229" width="0.0212%" height="15" fill="rgb(223,117,47)" fg:x="191383144281" fg:w="41123369"/><text x="99.0354%" y="239.50"></text></g><g><title>[libd3d12core.so] (103,309,927 samples, 0.05%)</title><rect x="98.7606%" y="245" width="0.0533%" height="15" fill="rgb(244,107,35)" fg:x="191334999849" fg:w="103309927"/><text x="99.0106%" y="255.50"></text></g><g><title>[libd3d12core.so] (413,239,708 samples, 0.21%)</title><rect x="98.6016%" y="277" width="0.2133%" height="15" fill="rgb(205,140,8)" fg:x="191027076086" fg:w="413239708"/><text x="98.8516%" y="287.50"></text></g><g><title>[libd3d12core.so] (205,616,845 samples, 0.11%)</title><rect x="98.7088%" y="261" width="0.1061%" height="15" fill="rgb(228,84,46)" fg:x="191234698949" fg:w="205616845"/><text x="98.9588%" y="271.50"></text></g><g><title>[amdxc64.so] (45,135,405 samples, 0.02%)</title><rect x="98.9454%" y="117" width="0.0233%" height="15" fill="rgb(254,188,9)" fg:x="191693074062" fg:w="45135405"/><text x="99.1954%" y="127.50"></text></g><g><title>[amdxc64.so] (39,117,351 samples, 0.02%)</title><rect x="98.9485%" y="101" width="0.0202%" height="15" fill="rgb(206,112,54)" fg:x="191699092116" fg:w="39117351"/><text x="99.1985%" y="111.50"></text></g><g><title>[amdxc64.so] (34,102,306 samples, 0.02%)</title><rect x="98.9511%" y="85" width="0.0176%" height="15" fill="rgb(216,84,49)" fg:x="191704107161" fg:w="34102306"/><text x="99.2011%" y="95.50"></text></g><g><title>[amdxc64.so] (137,412,233 samples, 0.07%)</title><rect x="98.8988%" y="197" width="0.0709%" height="15" fill="rgb(214,194,35)" fg:x="191602803252" fg:w="137412233"/><text x="99.1488%" y="207.50"></text></g><g><title>[amdxc64.so] (115,346,035 samples, 0.06%)</title><rect x="98.9102%" y="181" width="0.0595%" height="15" fill="rgb(249,28,3)" fg:x="191624869450" fg:w="115346035"/><text x="99.1602%" y="191.50"></text></g><g><title>[amdxc64.so] (95,285,855 samples, 0.05%)</title><rect x="98.9206%" y="165" width="0.0492%" height="15" fill="rgb(222,56,52)" fg:x="191644929630" fg:w="95285855"/><text x="99.1706%" y="175.50"></text></g><g><title>[amdxc64.so] (76,228,684 samples, 0.04%)</title><rect x="98.9304%" y="149" width="0.0393%" height="15" fill="rgb(245,217,50)" fg:x="191663986801" fg:w="76228684"/><text x="99.1804%" y="159.50"></text></g><g><title>[amdxc64.so] (63,189,567 samples, 0.03%)</title><rect x="98.9371%" y="133" width="0.0326%" height="15" fill="rgb(213,201,24)" fg:x="191677025918" fg:w="63189567"/><text x="99.1871%" y="143.50"></text></g><g><title>[amdxc64.so] (183,550,647 samples, 0.09%)</title><rect x="98.8828%" y="229" width="0.0947%" height="15" fill="rgb(248,116,28)" fg:x="191571709973" fg:w="183550647"/><text x="99.1328%" y="239.50"></text></g><g><title>[amdxc64.so] (166,499,494 samples, 0.09%)</title><rect x="98.8916%" y="213" width="0.0859%" height="15" fill="rgb(219,72,43)" fg:x="191588761126" fg:w="166499494"/><text x="99.1416%" y="223.50"></text></g><g><title>[amdxc64.so] (236,710,124 samples, 0.12%)</title><rect x="98.8776%" y="245" width="0.1222%" height="15" fill="rgb(209,138,14)" fg:x="191561679883" fg:w="236710124"/><text x="99.1276%" y="255.50"></text></g><g><title>[libc.so.6] (43,129,387 samples, 0.02%)</title><rect x="98.9775%" y="229" width="0.0223%" height="15" fill="rgb(222,18,33)" fg:x="191755260620" fg:w="43129387"/><text x="99.2275%" y="239.50"></text></g><g><title>[amdxc64.so] (43,129,387 samples, 0.02%)</title><rect x="99.1183%" y="117" width="0.0223%" height="15" fill="rgb(213,199,7)" fg:x="192028079068" fg:w="43129387"/><text x="99.3683%" y="127.50"></text></g><g><title>[libd3d12core.so] (26,078,234 samples, 0.01%)</title><rect x="99.1411%" y="117" width="0.0135%" height="15" fill="rgb(250,110,10)" fg:x="192072211464" fg:w="26078234"/><text x="99.3911%" y="127.50"></text></g><g><title>[amdxc64.so] (153,460,377 samples, 0.08%)</title><rect x="99.0764%" y="165" width="0.0792%" height="15" fill="rgb(248,123,6)" fg:x="191946835339" fg:w="153460377"/><text x="99.3264%" y="175.50"></text></g><g><title>[amdxc64.so] (119,358,071 samples, 0.06%)</title><rect x="99.0940%" y="149" width="0.0616%" height="15" fill="rgb(206,91,31)" fg:x="191980937645" fg:w="119358071"/><text x="99.3440%" y="159.50"></text></g><g><title>[amdxc64.so] (95,285,855 samples, 0.05%)</title><rect x="99.1064%" y="133" width="0.0492%" height="15" fill="rgb(211,154,13)" fg:x="192005009861" fg:w="95285855"/><text x="99.3564%" y="143.50"></text></g><g><title>[amdxc64.so] (189,568,701 samples, 0.10%)</title><rect x="99.0588%" y="197" width="0.0978%" height="15" fill="rgb(225,148,7)" fg:x="191912733033" fg:w="189568701"/><text x="99.3088%" y="207.50"></text></g><g><title>[amdxc64.so] (171,514,539 samples, 0.09%)</title><rect x="99.0681%" y="181" width="0.0885%" height="15" fill="rgb(220,160,43)" fg:x="191930787195" fg:w="171514539"/><text x="99.3181%" y="191.50"></text></g><g><title>[amdxc64.so] (226,680,034 samples, 0.12%)</title><rect x="99.0401%" y="213" width="0.1170%" height="15" fill="rgb(213,52,39)" fg:x="191876624709" fg:w="226680034"/><text x="99.2901%" y="223.50"></text></g><g><title>[amdxc64.so] (264,794,376 samples, 0.14%)</title><rect x="99.0215%" y="229" width="0.1367%" height="15" fill="rgb(243,137,7)" fg:x="191840516385" fg:w="264794376"/><text x="99.2715%" y="239.50"></text></g><g><title>[amdxc64.so] (20,060,180 samples, 0.01%)</title><rect x="99.1685%" y="213" width="0.0104%" height="15" fill="rgb(230,79,13)" fg:x="192125370941" fg:w="20060180"/><text x="99.4185%" y="223.50"></text></g><g><title>[libd3d12core.so] (45,135,405 samples, 0.02%)</title><rect x="99.1789%" y="213" width="0.0233%" height="15" fill="rgb(247,105,23)" fg:x="192145431121" fg:w="45135405"/><text x="99.4289%" y="223.50"></text></g><g><title>[libd3d12core.so] (86,258,774 samples, 0.04%)</title><rect x="99.1592%" y="229" width="0.0445%" height="15" fill="rgb(223,179,41)" fg:x="192107316779" fg:w="86258774"/><text x="99.4092%" y="239.50"></text></g><g><title>[libd3d12core.so] (657,973,904 samples, 0.34%)</title><rect x="98.8657%" y="261" width="0.3396%" height="15" fill="rgb(218,9,34)" fg:x="191538610676" fg:w="657973904"/><text x="99.1157%" y="271.50"></text></g><g><title>[libd3d12core.so] (398,194,573 samples, 0.21%)</title><rect x="98.9998%" y="245" width="0.2055%" height="15" fill="rgb(222,106,8)" fg:x="191798390007" fg:w="398194573"/><text x="99.2498%" y="255.50"></text></g><g><title>[libdxcore.so] (36,108,324 samples, 0.02%)</title><rect x="99.2053%" y="261" width="0.0186%" height="15" fill="rgb(211,220,0)" fg:x="192196584580" fg:w="36108324"/><text x="99.4553%" y="271.50"></text></g><g><title>[libdxcore.so] (20,060,180 samples, 0.01%)</title><rect x="99.2136%" y="245" width="0.0104%" height="15" fill="rgb(229,52,16)" fg:x="192212632724" fg:w="20060180"/><text x="99.4636%" y="255.50"></text></g><g><title>[amdxc64.so] (78,234,702 samples, 0.04%)</title><rect x="99.3570%" y="117" width="0.0404%" height="15" fill="rgb(212,155,18)" fg:x="192490466217" fg:w="78234702"/><text x="99.6070%" y="127.50"></text></g><g><title>[amdxc64.so] (54,162,486 samples, 0.03%)</title><rect x="99.3694%" y="101" width="0.0280%" height="15" fill="rgb(242,21,14)" fg:x="192514538433" fg:w="54162486"/><text x="99.6194%" y="111.50"></text></g><g><title>[amdxc64.so] (24,072,216 samples, 0.01%)</title><rect x="99.3849%" y="85" width="0.0124%" height="15" fill="rgb(222,19,48)" fg:x="192544628703" fg:w="24072216"/><text x="99.6349%" y="95.50"></text></g><g><title>[amdxc64.so] (136,409,224 samples, 0.07%)</title><rect x="99.3275%" y="213" width="0.0704%" height="15" fill="rgb(232,45,27)" fg:x="192433294704" fg:w="136409224"/><text x="99.5775%" y="223.50"></text></g><g><title>[amdxc64.so] (131,394,179 samples, 0.07%)</title><rect x="99.3301%" y="197" width="0.0678%" height="15" fill="rgb(249,103,42)" fg:x="192438309749" fg:w="131394179"/><text x="99.5801%" y="207.50"></text></g><g><title>[amdxc64.so] (119,358,071 samples, 0.06%)</title><rect x="99.3363%" y="181" width="0.0616%" height="15" fill="rgb(246,81,33)" fg:x="192450345857" fg:w="119358071"/><text x="99.5863%" y="191.50"></text></g><g><title>[amdxc64.so] (102,306,918 samples, 0.05%)</title><rect x="99.3451%" y="165" width="0.0528%" height="15" fill="rgb(252,33,42)" fg:x="192467397010" fg:w="102306918"/><text x="99.5951%" y="175.50"></text></g><g><title>[amdxc64.so] (97,291,873 samples, 0.05%)</title><rect x="99.3477%" y="149" width="0.0502%" height="15" fill="rgb(209,212,41)" fg:x="192472412055" fg:w="97291873"/><text x="99.5977%" y="159.50"></text></g><g><title>[amdxc64.so] (92,276,828 samples, 0.05%)</title><rect x="99.3503%" y="133" width="0.0476%" height="15" fill="rgb(207,154,6)" fg:x="192477427100" fg:w="92276828"/><text x="99.6003%" y="143.50"></text></g><g><title>[libd3d12core.so] (188,565,692 samples, 0.10%)</title><rect x="99.3979%" y="213" width="0.0973%" height="15" fill="rgb(223,64,47)" fg:x="192569703928" fg:w="188565692"/><text x="99.6479%" y="223.50"></text></g><g><title>[libd3d12core.so] (173,520,557 samples, 0.09%)</title><rect x="99.4057%" y="197" width="0.0896%" height="15" fill="rgb(211,161,38)" fg:x="192584749063" fg:w="173520557"/><text x="99.6557%" y="207.50"></text></g><g><title>[libd3d12core.so] (109,327,981 samples, 0.06%)</title><rect x="99.4388%" y="181" width="0.0564%" height="15" fill="rgb(219,138,40)" fg:x="192648941639" fg:w="109327981"/><text x="99.6888%" y="191.50"></text></g><g><title>[libd3d12core.so] (68,204,612 samples, 0.04%)</title><rect x="99.4600%" y="165" width="0.0352%" height="15" fill="rgb(241,228,46)" fg:x="192690065008" fg:w="68204612"/><text x="99.7100%" y="175.50"></text></g><g><title>[libd3d12core.so] (44,132,396 samples, 0.02%)</title><rect x="99.4724%" y="149" width="0.0228%" height="15" fill="rgb(223,209,38)" fg:x="192714137224" fg:w="44132396"/><text x="99.7224%" y="159.50"></text></g><g><title>[libd3d12core.so] (415,245,726 samples, 0.21%)</title><rect x="99.2850%" y="245" width="0.2143%" height="15" fill="rgb(236,164,45)" fg:x="192351047966" fg:w="415245726"/><text x="99.5350%" y="255.50"></text></g><g><title>[libd3d12core.so] (366,098,285 samples, 0.19%)</title><rect x="99.3104%" y="229" width="0.1890%" height="15" fill="rgb(231,15,5)" fg:x="192400195407" fg:w="366098285"/><text x="99.5604%" y="239.50"></text></g><g><title>[libdxcore.so] (26,078,234 samples, 0.01%)</title><rect x="99.4994%" y="245" width="0.0135%" height="15" fill="rgb(252,35,15)" fg:x="192766293692" fg:w="26078234"/><text x="99.7494%" y="255.50"></text></g><g><title>[amdxc64.so] (97,291,873 samples, 0.05%)</title><rect x="99.5775%" y="197" width="0.0502%" height="15" fill="rgb(248,181,18)" fg:x="192917748051" fg:w="97291873"/><text x="99.8275%" y="207.50"></text></g><g><title>[amdxc64.so] (95,285,855 samples, 0.05%)</title><rect x="99.5786%" y="181" width="0.0492%" height="15" fill="rgb(233,39,42)" fg:x="192919754069" fg:w="95285855"/><text x="99.8286%" y="191.50"></text></g><g><title>[amdxc64.so] (88,264,792 samples, 0.05%)</title><rect x="99.5822%" y="165" width="0.0456%" height="15" fill="rgb(238,110,33)" fg:x="192926775132" fg:w="88264792"/><text x="99.8322%" y="175.50"></text></g><g><title>[amdxc64.so] (80,240,720 samples, 0.04%)</title><rect x="99.5863%" y="149" width="0.0414%" height="15" fill="rgb(233,195,10)" fg:x="192934799204" fg:w="80240720"/><text x="99.8363%" y="159.50"></text></g><g><title>[amdxc64.so] (74,222,666 samples, 0.04%)</title><rect x="99.5894%" y="133" width="0.0383%" height="15" fill="rgb(254,105,3)" fg:x="192940817258" fg:w="74222666"/><text x="99.8394%" y="143.50"></text></g><g><title>[amdxc64.so] (64,192,576 samples, 0.03%)</title><rect x="99.5946%" y="117" width="0.0331%" height="15" fill="rgb(221,225,9)" fg:x="192950847348" fg:w="64192576"/><text x="99.8446%" y="127.50"></text></g><g><title>[amdxc64.so] (36,108,324 samples, 0.02%)</title><rect x="99.6091%" y="101" width="0.0186%" height="15" fill="rgb(224,227,45)" fg:x="192978931600" fg:w="36108324"/><text x="99.8591%" y="111.50"></text></g><g><title>[libd3d12core.so] (133,400,197 samples, 0.07%)</title><rect x="99.5734%" y="229" width="0.0689%" height="15" fill="rgb(229,198,43)" fg:x="192909723979" fg:w="133400197"/><text x="99.8234%" y="239.50"></text></g><g><title>[libd3d12core.so] (125,376,125 samples, 0.06%)</title><rect x="99.5775%" y="213" width="0.0647%" height="15" fill="rgb(206,209,35)" fg:x="192917748051" fg:w="125376125"/><text x="99.8275%" y="223.50"></text></g><g><title>[libd3d12core.so] (28,084,252 samples, 0.01%)</title><rect x="99.6278%" y="197" width="0.0145%" height="15" fill="rgb(245,195,53)" fg:x="193015039924" fg:w="28084252"/><text x="99.8778%" y="207.50"></text></g><g><title>[libdxcore.so] (35,105,315 samples, 0.02%)</title><rect x="99.6423%" y="229" width="0.0181%" height="15" fill="rgb(240,92,26)" fg:x="193043124176" fg:w="35105315"/><text x="99.8923%" y="239.50"></text></g><g><title>[libdxcore.so] (23,069,207 samples, 0.01%)</title><rect x="99.6485%" y="213" width="0.0119%" height="15" fill="rgb(207,40,23)" fg:x="193055160284" fg:w="23069207"/><text x="99.8985%" y="223.50"></text></g><g><title>[swrast_dri.so] (68,204,612 samples, 0.04%)</title><rect x="99.6604%" y="229" width="0.0352%" height="15" fill="rgb(223,111,35)" fg:x="193078229491" fg:w="68204612"/><text x="99.9104%" y="239.50"></text></g><g><title>[swrast_dri.so] (379,137,402 samples, 0.20%)</title><rect x="99.5128%" y="245" width="0.1957%" height="15" fill="rgb(229,147,28)" fg:x="192792371926" fg:w="379137402"/><text x="99.7628%" y="255.50"></text></g><g><title>[swrast_dri.so] (983,951,829 samples, 0.51%)</title><rect x="99.2239%" y="261" width="0.5079%" height="15" fill="rgb(211,29,28)" fg:x="192232692904" fg:w="983951829"/><text x="99.4739%" y="271.50"></text></g><g><title>[swrast_dri.so] (1,834,503,461 samples, 0.95%)</title><rect x="98.8149%" y="277" width="0.9469%" height="15" fill="rgb(228,72,33)" fg:x="191440315794" fg:w="1834503461"/><text x="99.0649%" y="287.50"></text></g><g><title>[swrast_dri.so] (2,411,233,636 samples, 1.24%)</title><rect x="98.5343%" y="293" width="1.2446%" height="15" fill="rgb(205,214,31)" fg:x="190896684916" fg:w="2411233636"/><text x="98.7843%" y="303.50"></text></g><g><title>[swrast_dri.so] (11,625,877,319 samples, 6.00%)</title><rect x="93.7827%" y="309" width="6.0009%" height="15" fill="rgb(224,111,15)" fg:x="181691068314" fg:w="11625877319"/><text x="94.0327%" y="319.50">[swrast_..</text></g><g><title>[swrast_dri.so] (11,687,060,868 samples, 6.03%)</title><rect x="93.7517%" y="341" width="6.0325%" height="15" fill="rgb(253,21,26)" fg:x="181630887774" fg:w="11687060868"/><text x="94.0017%" y="351.50">[swrast_..</text></g><g><title>[swrast_dri.so] (11,659,979,625 samples, 6.02%)</title><rect x="93.7656%" y="325" width="6.0185%" height="15" fill="rgb(245,139,43)" fg:x="181657969017" fg:w="11659979625"/><text x="94.0156%" y="335.50">[swrast_..</text></g><g><title>[libGLX_mesa.so.0.0.0] (11,779,337,696 samples, 6.08%)</title><rect x="93.7092%" y="373" width="6.0801%" height="15" fill="rgb(252,170,7)" fg:x="181548641036" fg:w="11779337696"/><text x="93.9592%" y="383.50">[libGLX_..</text></g><g><title>[libGLX_mesa.so.0.0.0] (11,767,301,588 samples, 6.07%)</title><rect x="93.7154%" y="357" width="6.0739%" height="15" fill="rgb(231,118,14)" fg:x="181560677144" fg:w="11767301588"/><text x="93.9654%" y="367.50">[libGLX_..</text></g><g><title>[libGLX.so.0.0.0] (24,072,216 samples, 0.01%)</title><rect x="99.8183%" y="341" width="0.0124%" height="15" fill="rgb(238,83,0)" fg:x="193384147236" fg:w="24072216"/><text x="100.0683%" y="351.50"></text></g><g><title>[libGLX.so.0.0.0] (37,111,333 samples, 0.02%)</title><rect x="99.8152%" y="357" width="0.0192%" height="15" fill="rgb(221,39,39)" fg:x="193378129182" fg:w="37111333"/><text x="100.0652%" y="367.50"></text></g><g><title>__glDispatchCheckMultithreaded (29,087,261 samples, 0.02%)</title><rect x="99.8343%" y="357" width="0.0150%" height="15" fill="rgb(222,119,46)" fg:x="193415240515" fg:w="29087261"/><text x="100.0843%" y="367.50"></text></g><g><title>glXSwapBuffers (100,300,900 samples, 0.05%)</title><rect x="99.7981%" y="373" width="0.0518%" height="15" fill="rgb(222,165,49)" fg:x="193345029885" fg:w="100300900"/><text x="100.0481%" y="383.50"></text></g><g><title>miniquad::native::linux_x11::X11Display::process_request (20,060,180 samples, 0.01%)</title><rect x="99.8499%" y="373" width="0.0104%" height="15" fill="rgb(219,113,52)" fg:x="193445330785" fg:w="20060180"/><text x="100.0999%" y="383.50"></text></g><g><title>miniquad::native_display (24,072,216 samples, 0.01%)</title><rect x="99.8752%" y="373" width="0.0124%" height="15" fill="rgb(214,7,15)" fg:x="193494478226" fg:w="24072216"/><text x="100.1252%" y="383.50"></text></g><g><title>miniquad::native::linux_x11::glx_main_loop (156,799,393,961 samples, 80.93%)</title><rect x="18.9651%" y="389" width="80.9345%" height="15" fill="rgb(235,32,4)" fg:x="36742225688" fg:w="156799393961"/><text x="19.2151%" y="399.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (23,069,207 samples, 0.01%)</title><rect x="99.8877%" y="373" width="0.0119%" height="15" fill="rgb(238,90,54)" fg:x="193518550442" fg:w="23069207"/><text x="100.1377%" y="383.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (20,060,180 samples, 0.01%)</title><rect x="99.8892%" y="357" width="0.0104%" height="15" fill="rgb(213,208,19)" fg:x="193521559469" fg:w="20060180"/><text x="100.1392%" y="367.50"></text></g><g><title>[unknown] (157,120,356,841 samples, 81.10%)</title><rect x="18.7999%" y="437" width="81.1002%" height="15" fill="rgb(233,156,4)" fg:x="36422265817" fg:w="157120356841"/><text x="19.0499%" y="447.50">[unknown]</text></g><g><title>macroquad::Window::new (156,800,396,970 samples, 80.94%)</title><rect x="18.9651%" y="421" width="80.9350%" height="15" fill="rgb(207,194,5)" fg:x="36742225688" fg:w="156800396970"/><text x="19.2151%" y="431.50">macroquad::Window::new</text></g><g><title>miniquad::native::linux_x11::run (156,800,396,970 samples, 80.94%)</title><rect x="18.9651%" y="405" width="80.9350%" height="15" fill="rgb(206,111,30)" fg:x="36742225688" fg:w="156800396970"/><text x="19.2151%" y="415.50">miniquad::native::linux_x11::run</text></g><g><title>__libc_free (130,391,170 samples, 0.07%)</title><rect x="99.9078%" y="405" width="0.0673%" height="15" fill="rgb(243,70,54)" fg:x="193557667793" fg:w="130391170"/><text x="100.1578%" y="415.50"></text></g><g><title>all (193,736,203,395 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(242,28,8)" fg:x="0" fg:w="193736203395"/><text x="0.2500%" y="479.50"></text></g><g><title>physics_engine (189,181,539,526 samples, 97.65%)</title><rect x="2.3510%" y="453" width="97.6490%" height="15" fill="rgb(219,106,18)" fg:x="4554663869" fg:w="189181539526"/><text x="2.6010%" y="463.50">physics_engine</text></g><g><title>physics_engine::solver::Solver::update (185,556,665 samples, 0.10%)</title><rect x="99.9042%" y="437" width="0.0958%" height="15" fill="rgb(244,222,10)" fg:x="193550646730" fg:w="185556665"/><text x="100.1542%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (178,535,602 samples, 0.09%)</title><rect x="99.9078%" y="421" width="0.0922%" height="15" fill="rgb(236,179,52)" fg:x="193557667793" fg:w="178535602"/><text x="100.1578%" y="431.50"></text></g><g><title>__rdl_dealloc (48,144,432 samples, 0.02%)</title><rect x="99.9751%" y="405" width="0.0249%" height="15" fill="rgb(213,23,39)" fg:x="193688058963" fg:w="48144432"/><text x="100.2251%" y="415.50"></text></g></svg></svg>